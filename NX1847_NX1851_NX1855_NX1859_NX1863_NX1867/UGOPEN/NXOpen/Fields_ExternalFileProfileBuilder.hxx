#ifndef NXOpen_FIELDS_EXTERNALFILEPROFILEBUILDER_HXX_INCLUDED
#define NXOpen_FIELDS_EXTERNALFILEPROFILEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Fields_ExternalFileProfileBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/ExternalFileReferenceAdapter.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/IExternalFileReferencer.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_fields_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Fields
    {
        class ExternalFileProfileBuilder;
    }
    class Expression;
    class ExternalFileReferenceAdapter;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class IExternalFileReferencer;
    class Unit;
    namespace Fields
    {
        class _ExternalFileProfileBuilderBuilder;
        class ExternalFileProfileBuilderImpl;
        /**  @brief 
                    Represents a builder class for creating and editing an @link NXOpen::Fields::Field NXOpen::Fields::Field@endlink 
                    that is defined by an external file reference.
                 

         
                
                 <br> 
                This builder allows you to define an @link 
                NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceCurve 
                NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceCurve@endlink (2D) or
               @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface@endlink 
               (3D) profile from the data with an external file.
               The file must have at least the number of columns of data required for by the dimension of the profile to be created.
                <br> 
                <br> 
                For @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceCurve NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceCurve@endlink 
                you need to specify two columns from the file.
                <ul>
                 <li>@link NXOpen::Fields::ExternalFileProfileBuilder::XColumn NXOpen::Fields::ExternalFileProfileBuilder::XColumn @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetXColumn NXOpen::Fields::ExternalFileProfileBuilder::SetXColumn @endlink , the independent value</li>
                 <li>@link NXOpen::Fields::ExternalFileProfileBuilder::OrdinateColumn NXOpen::Fields::ExternalFileProfileBuilder::OrdinateColumn @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetOrdinateColumn NXOpen::Fields::ExternalFileProfileBuilder::SetOrdinateColumn @endlink , the dependent value</li>
                </ul>
                For @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface@endlink 
                you need to specify three columns from the file.
                <ul>
                 <li>@link NXOpen::Fields::ExternalFileProfileBuilder::XColumn NXOpen::Fields::ExternalFileProfileBuilder::XColumn @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetXColumn NXOpen::Fields::ExternalFileProfileBuilder::SetXColumn @endlink , the independent value</li>
                 <li>@link NXOpen::Fields::ExternalFileProfileBuilder::YColumn NXOpen::Fields::ExternalFileProfileBuilder::YColumn @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetYColumn NXOpen::Fields::ExternalFileProfileBuilder::SetYColumn @endlink , the independent value</li>
                 <li>@link NXOpen::Fields::ExternalFileProfileBuilder::OrdinateColumn NXOpen::Fields::ExternalFileProfileBuilder::OrdinateColumn @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetOrdinateColumn NXOpen::Fields::ExternalFileProfileBuilder::SetOrdinateColumn @endlink , the dependent value</li>
                </ul>
                Please refer to documentation for specific details on the file formats supported.
                 <br> 
                
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_FIELDSEXPORT  ExternalFileProfileBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder, public virtual NXOpen::IExternalFileReferencer
        {
            /**  @brief 
                        the dimension of the profile
                     

              */
            public: enum DimensionChoice
            {
                DimensionChoiceCurve/** two dimensional with x axis and ordinate */,
                DimensionChoiceSurface/** three dimensional with x axis, y axis and ordinate */
            };

            /**  @brief 
                        the interpolation method used for the profile
                     

              */
            public: enum Interpolation
            {
                InterpolationLinear/** Linear */,
                InterpolationAkima/** Akima */,
                InterpolationAkima72/** Akima72 */,
                InterpolationCubic/** Cubic */
            };

            /**  @brief 
                        the extrapolation method used for the profile
                     

              */
            public: enum Extrapolation
            {
                ExtrapolationLinear/** Linear */,
                ExtrapolationParabolic/** Parabolic */,
                ExtrapolationCubic/** Cubic */
            };

            /**  @brief 
                        Defines if the profile is repeating cyclically in any direction.
                     

             
                    
                        This is overriding extrapolation if not set to
                        @link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeNone NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeNone@endlink .
                    */
            public: enum CyclicType
            {
                CyclicTypeNone/** not cyclic */,
                CyclicTypeXOnly/** cyclic in x direction */,
                CyclicTypeYOnly/** cyclic in y direction */,
                CyclicTypeBoth/** cyclic in both x and y direction */
            };

            /**  @brief 
                        the format control method used for the profile
                     

              */
            public: enum FormatOptions
            {
                FormatOptionsComputerRegionalSettings/** Use Computer Regional Settings */,
                FormatOptionsDotDecimalSeparator/** Use . as decimal separator */,
                FormatOptionsCommaDecimalSeparator/** Use , as decimal separator */,
                FormatOptionsDotDecimalSeparatorAndCommaValueDelimiter/** Use . as decimal separator and , as value delimiter*/,
                FormatOptionsCommaDecimalSeparatorAndSemicolonValueDelimiter/** Use , as decimal separator and ; as value delimiter*/
            };

            private: ExternalFileProfileBuilderImpl * m_externalfileprofilebuilder_impl;
            private: friend class  _ExternalFileProfileBuilderBuilder;
            protected: ExternalFileProfileBuilder();
            public: ~ExternalFileProfileBuilder();
            /**Returns   @brief 
                        the dimension.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceCurve NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceCurve@endlink  2D</li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface@endlink  3D</li>
                        </ul>
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice Dimension
            (
            );
            /**Sets   @brief 
                        the dimension.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceCurve NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceCurve@endlink  2D</li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface@endlink  3D</li>
                        </ul>
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDimension
            (
                NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice dimension /** dimension */ 
            );
            /**Returns   @brief 
                        the column number in the external file corresponding to the x axis.
                         

             
                        
                        Column A of an excel file corresponds to the number 1.
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int XColumn
            (
            );
            /**Sets   @brief 
                        the column number in the external file corresponding to the x axis.
                         

             
                        
                        Column A of an excel file corresponds to the number 1.
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetXColumn
            (
                int columnIdx /** columnidx */ 
            );
            /**Returns   @brief 
                        the offset on the x axis.
                         

             
                        
                        The unit of the offset has to match the unit defined in the header
                        of the @link NXOpen::Fields::ExternalFileProfileBuilder::XColumn NXOpen::Fields::ExternalFileProfileBuilder::XColumn @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetXColumn NXOpen::Fields::ExternalFileProfileBuilder::SetXColumn @endlink 
                        in the file set in @link NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference@endlink .
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * XOffset
            (
            );
            /**Returns   @brief 
                        the scale on the x axis.
                         

             
                        The scale is unitless.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * XScale
            (
            );
            /**Returns   @brief 
                        the column number in the external file corresponding to the y axis.
                         

             
                        
                         <br> 
                        Column A of an excel file corresponds to the number 1.
                         <br> 
                         <br> 
                        This is only used when @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice @endlink 
                        is set to @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface@endlink .
                         <br> 
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int YColumn
            (
            );
            /**Sets   @brief 
                        the column number in the external file corresponding to the y axis.
                         

             
                        
                         <br> 
                        Column A of an excel file corresponds to the number 1.
                         <br> 
                         <br> 
                        This is only used when @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice @endlink 
                        is set to @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface@endlink .
                         <br> 
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetYColumn
            (
                int columnIdx /** columnidx */ 
            );
            /**Returns   @brief 
                        the offset on the y axis.
                         

             
                        
                         <br> 
                        Please make sure that the unit of the offset matches the unit defined in the header
                        of the @link NXOpen::Fields::ExternalFileProfileBuilder::YColumn NXOpen::Fields::ExternalFileProfileBuilder::YColumn @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetYColumn NXOpen::Fields::ExternalFileProfileBuilder::SetYColumn @endlink 
                        in the file set in @link NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference@endlink .
                         <br> 
                         <br> 
                        This is only used when @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice @endlink 
                        is set to @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface@endlink .
                         <br> 
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * YOffset
            (
            );
            /**Returns   @brief 
                        the scale on the y axis.
                         

             
                        The scale is unitless.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * YScale
            (
            );
            /**Returns   @brief 
                        the column number in the external file corresponding to the ordinate axis.
                         

             
                        
                        Column A of an excel file corresponds to the number 1.
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int OrdinateColumn
            (
            );
            /**Sets   @brief 
                        the column number in the external file corresponding to the ordinate axis.
                         

             
                        
                        Column A of an excel file corresponds to the number 1.
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOrdinateColumn
            (
                int columnIdx /** columnidx */ 
            );
            /**Returns   @brief 
                        the offset on the ordinate axis.
                         

             
                        
                        The unit of the offset has to match the unit defined in the header
                        of the @link NXOpen::Fields::ExternalFileProfileBuilder::OrdinateColumn NXOpen::Fields::ExternalFileProfileBuilder::OrdinateColumn @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetOrdinateColumn NXOpen::Fields::ExternalFileProfileBuilder::SetOrdinateColumn @endlink 
                        in the file set in @link NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference@endlink .
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * OrdinateOffset
            (
            );
            /**Returns   @brief 
                        the scale on the ordinate axis.
                         

             
                        The scale is unitless.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * OrdinateScale
            (
            );
            /**Returns   @brief 
                        the interpolation in x direction.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationLinear NXOpen::Fields::ExternalFileProfileBuilder::InterpolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima72 NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima72@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationCubic NXOpen::Fields::ExternalFileProfileBuilder::InterpolationCubic@endlink </li>
                        </ul>
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::ExternalFileProfileBuilder::Interpolation XInterpolation
            (
            );
            /**Sets   @brief 
                        the interpolation in x direction.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationLinear NXOpen::Fields::ExternalFileProfileBuilder::InterpolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima72 NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima72@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationCubic NXOpen::Fields::ExternalFileProfileBuilder::InterpolationCubic@endlink </li>
                        </ul>
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetXInterpolation
            (
                NXOpen::Fields::ExternalFileProfileBuilder::Interpolation interpolation /** interpolation */ 
            );
            /**Returns   @brief 
                        the interpolation in y direction.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationLinear NXOpen::Fields::ExternalFileProfileBuilder::InterpolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima72 NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima72@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationCubic NXOpen::Fields::ExternalFileProfileBuilder::InterpolationCubic@endlink </li>
                        </ul>
                         <br> 
                        This is only used when @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice @endlink 
                        is set to @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface@endlink 
                         <br> 
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::ExternalFileProfileBuilder::Interpolation YInterpolation
            (
            );
            /**Sets   @brief 
                        the interpolation in y direction.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationLinear NXOpen::Fields::ExternalFileProfileBuilder::InterpolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima72 NXOpen::Fields::ExternalFileProfileBuilder::InterpolationAkima72@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::InterpolationCubic NXOpen::Fields::ExternalFileProfileBuilder::InterpolationCubic@endlink </li>
                        </ul>
                         <br> 
                        This is only used when @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice @endlink 
                        is set to @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface@endlink 
                         <br> 
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetYInterpolation
            (
                NXOpen::Fields::ExternalFileProfileBuilder::Interpolation interpolation /** interpolation */ 
            );
            /**Returns   @brief 
                        the extrapolation in x direction.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationLinear NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationParabolic NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationParabolic@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationCubic NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationCubic@endlink </li>
                        </ul>
                         <br> 
                        This is only used when @link NXOpen::Fields::ExternalFileProfileBuilder::CyclicType NXOpen::Fields::ExternalFileProfileBuilder::CyclicType @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetCyclicType NXOpen::Fields::ExternalFileProfileBuilder::SetCyclicType @endlink 
                        is set to @link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeNone NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeNone@endlink 
                        or @link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeYOnly NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeYOnly@endlink 
                         <br> 
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::ExternalFileProfileBuilder::Extrapolation XExtrapolation
            (
            );
            /**Sets   @brief 
                        the extrapolation in x direction.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationLinear NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationParabolic NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationParabolic@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationCubic NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationCubic@endlink </li>
                        </ul>
                         <br> 
                        This is only used when @link NXOpen::Fields::ExternalFileProfileBuilder::CyclicType NXOpen::Fields::ExternalFileProfileBuilder::CyclicType @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetCyclicType NXOpen::Fields::ExternalFileProfileBuilder::SetCyclicType @endlink 
                        is set to @link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeNone NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeNone@endlink 
                        or @link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeYOnly NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeYOnly@endlink 
                         <br> 
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetXExtrapolation
            (
                NXOpen::Fields::ExternalFileProfileBuilder::Extrapolation extrapolation /** extrapolation */ 
            );
            /**Returns   @brief 
                        the extrapolation in y direction.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationLinear NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationParabolic NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationParabolic@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationCubic NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationCubic@endlink </li>
                        </ul>
                         <br> 
                        This is only used when @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice @endlink 
                        is set to @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface@endlink 
                        and when @link NXOpen::Fields::ExternalFileProfileBuilder::CyclicType NXOpen::Fields::ExternalFileProfileBuilder::CyclicType @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetCyclicType NXOpen::Fields::ExternalFileProfileBuilder::SetCyclicType @endlink 
                        is set to @link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeNone NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeNone@endlink 
                        or @link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeXOnly NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeXOnly@endlink 
                         <br> 
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::ExternalFileProfileBuilder::Extrapolation YExtrapolation
            (
            );
            /**Sets   @brief 
                        the extrapolation in y direction.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationLinear NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationParabolic NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationParabolic@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationCubic NXOpen::Fields::ExternalFileProfileBuilder::ExtrapolationCubic@endlink </li>
                        </ul>
                         <br> 
                        This is only used when @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice @endlink 
                        is set to @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceSurface@endlink 
                        and when @link NXOpen::Fields::ExternalFileProfileBuilder::CyclicType NXOpen::Fields::ExternalFileProfileBuilder::CyclicType @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetCyclicType NXOpen::Fields::ExternalFileProfileBuilder::SetCyclicType @endlink 
                        is set to @link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeNone NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeNone@endlink 
                        or @link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeXOnly NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeXOnly@endlink 
                         <br> 
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetYExtrapolation
            (
                NXOpen::Fields::ExternalFileProfileBuilder::Extrapolation extrapolation /** extrapolation */ 
            );
            /**Returns   @brief 
                        the cyclic type.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeNone NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeNone@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeXOnly NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeXOnly@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeYOnly NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeYOnly@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeBoth NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeBoth@endlink </li>
                        </ul>
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::ExternalFileProfileBuilder::CyclicType Cyclic
            (
            );
            /**Sets   @brief 
                        the cyclic type.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeNone NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeNone@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeXOnly NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeXOnly@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeYOnly NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeYOnly@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeBoth NXOpen::Fields::ExternalFileProfileBuilder::CyclicTypeBoth@endlink </li>
                        </ul>
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCyclic
            (
                NXOpen::Fields::ExternalFileProfileBuilder::CyclicType cyclicType /** cyclictype */ 
            );
            /**Returns   @brief 
                        the left slope.
                         

             
                        
                        This is only used when @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice @endlink 
                        is set to @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceCurve NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceCurve@endlink 
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SlopeLeft
            (
            );
            /**Returns   @brief 
                        the right slope.
                         

             
                        
                        This is only used when @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoice @endlink and @link NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice NXOpen::Fields::ExternalFileProfileBuilder::SetDimensionChoice @endlink 
                        is set to @link NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceCurve NXOpen::Fields::ExternalFileProfileBuilder::DimensionChoiceCurve@endlink 
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SlopeRight
            (
            );
            /**Returns   @brief 
                        the format control of separators 
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsComputerRegionalSettings NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsComputerRegionalSettings@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsDotDecimalSeparator NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsDotDecimalSeparator@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsCommaDecimalSeparator NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsCommaDecimalSeparator@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsDotDecimalSeparatorAndCommaValueDelimiter NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsDotDecimalSeparatorAndCommaValueDelimiter@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsCommaDecimalSeparatorAndSemicolonValueDelimiter NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsCommaDecimalSeparatorAndSemicolonValueDelimiter@endlink </li>
                        </ul>
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::ExternalFileProfileBuilder::FormatOptions FormatControlOption
            (
            );
            /**Sets   @brief 
                        the format control of separators 
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsComputerRegionalSettings NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsComputerRegionalSettings@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsDotDecimalSeparator NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsDotDecimalSeparator@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsCommaDecimalSeparator NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsCommaDecimalSeparator@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsDotDecimalSeparatorAndCommaValueDelimiter NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsDotDecimalSeparatorAndCommaValueDelimiter@endlink </li>
                          <li>@link NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsCommaDecimalSeparatorAndSemicolonValueDelimiter NXOpen::Fields::ExternalFileProfileBuilder::FormatOptionsCommaDecimalSeparatorAndSemicolonValueDelimiter@endlink </li>
                        </ul>
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFormatControlOption
            (
                NXOpen::Fields::ExternalFileProfileBuilder::FormatOptions formatControlType /** formatcontroltype */ 
            );
            /**  @brief 
                        Gets the number of column titles.
                         

             
                        
                         <br> 
                        Depending on the format of the file set in @link NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference@endlink 
                        several columns in the file can belong together making up one common title.
                         <br> 
                         <br> 
                        This only works if @link NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference@endlink 
                        is set to a valid file. (Please refer to documentation for specific details on the file formats supported.)<br/>
                        If the file was not read already GetNumberOfColumns will read it.
                         <br> 
                         @return  number of column titles 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int GetNumberOfColumns
            (
            );
            /**  @brief 
                        Returns the title of the specified column.
                         

             
                        
                         <br> 
                         The title contains the
                         <ul>
                          <li>column number(s) in file set in @link NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference@endlink  (starting with 1)</li>
                          <li>end column for the variable if applicable</li>
                          <li>column name and</li>
                          <li>localized unit string.</li>
                        </ul>
                        e.g. "1: X (unitless)" or "2(..4): Y (mm)"
                         <br> 
                         <br> 
                        This only works if file set in @link NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference@endlink 
                        is set to a valid file. (Please refer to documentation for specific details on the file formats supported.)<br/>
                        If the file was not read already GetColumnTitle will read it.
                         <br> 
                         @return  title of the specified column 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetColumnTitle
            (
                int columnNumber /** column number, first column of
                            the file set in @link NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference@endlink 
                            corresponding to 1,<br/>
                            if several columns belong together to one variable all those columns will be considered as one common column */
            );
            /**  @brief 
                        Returns the unit of the specified column.
                         

             
                        
                        This only works if the file set in @link NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference@endlink 
                        is set to a valid file. (Please refer to documentation for specific details on the file formats supported.)<br/>
                        If the file was not read already GetColumnUnit will read it.
                         @return  unit of the specified column 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Unit * GetColumnUnit
            (
                int columnNumber /** column number, first column of
                            the file set in @link NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference@endlink 
                            corresponding to 1 */
            );
            /**  @brief 
                        Returns the measure of the specified column.
                         

             
                        
                        This only works if the file set in @link NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference@endlink 
                        is set to a valid file. (Please refer to documentation for specific details on the file formats supported.)<br/>
                        If the file was not read already GetColumnMeasureName will read it.
                         @return  measure name of the specified column 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetColumnMeasureName
            (
                int columnNumber /** column number, first column of
                            the file set in @link NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference NXOpen::Fields::ExternalFileProfileBuilder::EstablishReference@endlink 
                            corresponding to 1 */
            );
            /**  @brief 
                            If the measures are marked as fixed and they are changed, the validation at commit will detect an error and fail.
                         

             
                        
                            It is recommended to call this method when editing a profile that is referenced by another object,
                            which depends on specific measures.
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMeasuresFixed
            (
                bool areMeasuresFixed /** true, if changed measures should prevent a commit */
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
            /**  Returns the external file reference object. In case the referencer object has multiple external references,
                     use referenceObjectId to return the correct external file adapter.  @return  external file reference object 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: virtual NXOpen::ExternalFileReferenceAdapter * GetExternalFileReferenceAdapter
            (
                int referenceObjectId /** the unique identifier of the external reference required in case where referencer has multiple external references */
            );
            /**  Sets the external file reference object. In case the referencer object has multiple external references,
                     use referenceObjectId to set the correct reference. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: virtual void SetExternalFileReferenceAdapter
            (
                int referenceObjectId /** the unique identifier of the external reference required in case where referencer has multiple external references */,
                NXOpen::ExternalFileReferenceAdapter * adapter /** external file reference object */
            );
            /**  Gets the file definition to use for external file adapter. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: virtual NXString GetExternalFileDefinitionKey
            (
                NXOpen::ExternalFileReferenceAdapter * adapter /** external file reference object */
            );
            /** Establish the external reference to the given file specification.  @return  external file reference object 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: virtual NXOpen::ExternalFileReferenceAdapter * EstablishReference
            (
                int referenceObjectId /** the unique identifier to use for this reference if referencer has multiple external references */,
                NXOpen::ExternalFileReferenceAdapter::Type referenceType /** the kind of reference to establish */,
                const NXString & externalFileSpec /** the external file specification. */
            );
            /** Establish the external reference to the given file specification.  @return  external file reference object 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            virtual NXOpen::ExternalFileReferenceAdapter * EstablishReference
            (
                int referenceObjectId /** the unique identifier to use for this reference if referencer has multiple external references */,
                NXOpen::ExternalFileReferenceAdapter::Type referenceType /** the kind of reference to establish */,
                const char * externalFileSpec /** the external file specification. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
