#ifndef NXOpen_FEATURES_ISOCLINECURVEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_ISOCLINECURVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_IsoclineCurveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_CurveFitData.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class IsoclineCurveBuilder;
    }
    class Direction;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class CurveFitData;
    }
    class ScCollector;
    namespace Features
    {
        class _IsoclineCurveBuilderBuilder;
        class IsoclineCurveBuilderImpl;
        /**
            Represents a @link Features::IsoclineCurve Features::IsoclineCurve@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::FreeformCurveCollection::CreateIsoclineCurveBuilder  NXOpen::Features::FreeformCurveCollection::CreateIsoclineCurveBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        CurveFitData.CurveJoinMethod </td> <td> 
         
        No </td> </tr> 

        <tr><td> 
         
        CurveFitData.Degree </td> <td> 
         
        7 </td> </tr> 

        <tr><td> 
         
        CurveFitData.FitMethod </td> <td> 
         
        DegreeAndSegments </td> </tr> 

        <tr><td> 
         
        CurveFitData.IsAdvancedFit </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        CurveFitData.IsAlignShape </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        CurveFitData.MaximumDegree </td> <td> 
         
        7 </td> </tr> 

        <tr><td> 
         
        CurveFitData.MaximumSegments </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        CurveFitData.MinimumDegree </td> <td> 
         
        5 </td> </tr> 

        <tr><td> 
         
        CurveFitData.Segments </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        DistanceThreshold </td> <td> 
         
        0.25 (millimeters part), 0.01 (inches part) </td> </tr> 

        <tr><td> 
         
        EndAngle.Value </td> <td> 
         
        90 </td> </tr> 

        <tr><td> 
         
        IntervalAngle.Value </td> <td> 
         
        10 </td> </tr> 

        <tr><td> 
         
        StartAngle.Value </td> <td> 
         
        -90 </td> </tr> 

        </table>  

         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  IsoclineCurveBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** The option indicating number of curves to be created */
            public: enum CurveTypes
            {
                CurveTypesSingle/** single */ ,
                CurveTypesMultiple/** multiple */ 
            };

            private: IsoclineCurveBuilderImpl * m_isoclinecurvebuilder_impl;
            private: friend class  _IsoclineCurveBuilderBuilder;
            protected: IsoclineCurveBuilder();
            public: ~IsoclineCurveBuilder();
            /**Returns  the select face 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * Face
            (
            );
            /**Returns  the reference direction 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * ReferenceDirection
            (
            );
            /**Sets  the reference direction 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetReferenceDirection
            (
                NXOpen::Direction * referenceDirection /** referencedirection */ 
            );
            /**Returns  the isocline types 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::IsoclineCurveBuilder::CurveTypes IsoclineTypes
            (
            );
            /**Sets  the isocline types 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetIsoclineTypes
            (
                NXOpen::Features::IsoclineCurveBuilder::CurveTypes isoclineTypes /** isoclinetypes */ 
            );
            /**Returns  the isocline angle 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * IsoclineAngle
            (
            );
            /**Returns  the interval angle 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * IntervalAngle
            (
            );
            /**Returns  the start angle 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StartAngle
            (
            );
            /**Returns  the end angle 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * EndAngle
            (
            );
            /**Returns  the associative 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsAssociative
            (
            );
            /**Sets  the associative 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetAssociative
            (
                bool isAssociative /** isassociative */ 
            );
            /**Returns  the Optimize Curve 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool CanOptimizeCurve
            (
            );
            /**Sets  the Optimize Curve 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetCanOptimizeCurve
            (
                bool canOptimizeCurve /** canoptimizecurve */ 
            );
            /**Returns  the distance threshold 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double DistanceThreshold
            (
            );
            /**Sets  the distance threshold 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetDistanceThreshold
            (
                double distanceThreshold /** distancethreshold */ 
            );
            /**Returns  the curve fitting parameters  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::CurveFitData * CurveFitData
            (
            );
            /** Creates isocline curves 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void CreateIsocline
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
