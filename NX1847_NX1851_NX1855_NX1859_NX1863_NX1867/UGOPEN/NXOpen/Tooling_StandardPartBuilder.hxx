#ifndef NXOpen_TOOLING_STANDARDPARTBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_STANDARDPARTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_StandardPartBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/Tooling_ConceptStandardPartRecord.hxx>
#include <NXOpen/Tooling_SpreadsheetData.hxx>
#include <NXOpen/Tooling_StandardPartData.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class StandardPartBuilder;
    }
    namespace Assemblies
    {
        class Component;
    }
    class Builder;
    class NXObject;
    class Part;
    class SelectNXObject;
    namespace Tooling
    {
        class ConceptStandardPartRecord;
    }
    namespace Tooling
    {
        class SpreadsheetData;
    }
    namespace Tooling
    {
        class StandardPartData;
    }
    namespace Tooling
    {
        class _StandardPartBuilderBuilder;
        class StandardPartBuilderImpl;
        /** Represents a builder to be used to create Mold Wizard Standard Part.  <br> To create a new instance of this class, use @link NXOpen::Tooling::StandardPartCollection::CreateStandardPartBuilder  NXOpen::Tooling::StandardPartCollection::CreateStandardPartBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        AssociativePosition </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ConceptDesign </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ReferenceSet </td> <td> 
         
        True </td> </tr> 

        <tr><td> 
         
        RenameComponents </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ShowInfoWindow </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        StandardPartEditType </td> <td> 
         
        AddInstance </td> </tr> 

        </table>  

         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  StandardPartBuilder : public NXOpen::Builder
        {
            /** Represents the type to edit a standard part.  */
            public: enum EditType
            {
                EditTypeAddInstance/** add instance */ ,
                EditTypeNewComponent/** new component */ ,
                EditTypeModify/** modify */ 
            };

            /** Represents the reference set of the standard part when it is added to the assembly. */
            public: enum RefsetName
            {
                RefsetNameTrue/** true */ ,
                RefsetNameFalse/** false */ ,
                RefsetNameEntirePart/** entire part */ 
            };

            private: StandardPartBuilderImpl * m_standardpartbuilder_impl;
            private: friend class  _StandardPartBuilderBuilder;
            protected: StandardPartBuilder();
            public: ~StandardPartBuilder();
            /**Returns  the standard part component which is selected to be edited. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObject * StandardPartComponent
            (
            );
            /**Returns  the standard part edit type of processing the selected component. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::StandardPartBuilder::EditType StandardPartEditType
            (
            );
            /**Sets  the standard part edit type of processing the selected component. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void SetStandardPartEditType
            (
                NXOpen::Tooling::StandardPartBuilder::EditType standardPartEditType /** standardpartedittype */ 
            );
            /**Returns  the flag to indicate whether to add concept symbols instead of real standard parts. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool ConceptDesign
            (
            );
            /**Sets  the flag to indicate whether to add concept symbols instead of real standard parts. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void SetConceptDesign
            (
                bool conceptDesign /** conceptdesign */ 
            );
            /**Returns  the flag to indicate whether to bring up the Part Name Management dialog. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool RenameComponents
            (
            );
            /**Sets  the flag to indicate whether to bring up the Part Name Management dialog. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void SetRenameComponents
            (
                bool renameComponents /** renamecomponents */ 
            );
            /**Returns  the flag to indicate whether to show the Information Window. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowInfoWindow
            (
            );
            /**Sets  the flag to indicate whether to show the Information Window. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void SetShowInfoWindow
            (
                bool showInfoWindow /** showinfowindow */ 
            );
            /** Ask help of the selected standard part component. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void Help
            (
            );
            /** Repositions the selected standard part component. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void Reposition
            (
            );
            /** Flips the selected standard part component. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void Flip
            (
            );
            /** Removes the selected standard part component. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void RemoveComponent
            (
            );
            /**Returns  the positioning plane used to position a standard part. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObject * PositioningPlane
            (
            );
            /**Returns  the point pattern used to control how to standard parts. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObject * PointPattern
            (
            );
            /**Returns  the reference set currently used to add a new component to an assembly. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::StandardPartBuilder::RefsetName ReferenceSet
            (
            );
            /**Sets  the reference set currently used to add a new component to an assembly. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void SetReferenceSet
            (
                NXOpen::Tooling::StandardPartBuilder::RefsetName referenceSet /** referenceset */ 
            );
            /**Returns  the flag to indicate whether to use the associative position method. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool AssociativePosition
            (
            );
            /**Sets  the flag to indicate whether to use the associative position method. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAssociativePosition
            (
                bool associativePosition /** associativeposition */ 
            );
            /**Returns  the flag to indicate whether to use use pattern component to position a standard part. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: bool CompPattern
            (
            );
            /**Sets  the flag to indicate whether to use use pattern component to position a standard part. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: void SetCompPattern
            (
                bool useCompPattern /** usecomppattern */ 
            );
            /** Edits the registering spread sheet file of the standard item selected in Reuse Member View. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void EditRegister
            (
            );
            /** Edits the data file of the standard item selected in Reuse Member View 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void EditDataBase
            (
            );
            /**  @brief  Reads data from the library with given name and path.  

              
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void ReadStandardPartClientDataFromLibrary
            (
                bool isFromMemberView /** True if an item is dragged from reuse library */,
                int dataType /** The data type of the library */,
                const NXString & libName /** Library name */,
                const NXString & libPath /** Library path */
            );
            /**  @brief  Reads data from the library with given name and path.  

              
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            void ReadStandardPartClientDataFromLibrary
            (
                bool isFromMemberView /** True if an item is dragged from reuse library */,
                int dataType /** The data type of the library */,
                const char * libName /** Library name */,
                const char * libPath /** Library path */
            );
            /**  @brief  Resets client data with specified library.  

              
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void ResetStandardPartClientData
            (
                int dataType /** The data type of the library */,
                const NXString & libName /** Library name */,
                const NXString & libPath /** Library path */
            );
            /**  @brief  Resets client data with specified library.  

              
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            void ResetStandardPartClientData
            (
                int dataType /** The data type of the library */,
                const char * libName /** Library name */,
                const char * libPath /** Library path */
            );
            /**  @brief  Resets client data with named library.  

              
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void ResetStandardPartClientDataWithLibraryName
            (
                const NXString & libName /** Library name */
            );
            /**  @brief  Resets client data with named library.  

              
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            void ResetStandardPartClientDataWithLibraryName
            (
                const char * libName /** Library name */
            );
            /**  @brief  Gets standard part client data  

              @return  A @link NXOpen::Tooling::StandardPartData NXOpen::Tooling::StandardPartData@endlink  instance 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::StandardPartData * GetStandardPartClientData
            (
            );
            /** Sets standard part client data. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void SetStandardPartClientData
            (
                NXOpen::Tooling::StandardPartData * standardClientData /** A @link NXOpen::Tooling::StandardPartData NXOpen::Tooling::StandardPartData@endlink  instance */
            );
            /**  @brief  Gets standard part spread sheet data  

              @return  A @link NXOpen::Tooling::SpreadsheetData NXOpen::Tooling::SpreadsheetData@endlink  instance 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::SpreadsheetData * GetSpreadsheetData
            (
            );
            /** Sets standard part spread sheet data. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void SetSpreadsheetData
            (
                NXOpen::Tooling::SpreadsheetData * sheetData /** Spreadsheet data */
            );
            /** Updates standard part spread sheet data by reading parameter values from a part, point or symbol. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void UpdateSpreadsheetDataWithObject
            (
                NXOpen::NXObject * objectWithParameters /** The object where parameter values to be read */,
                bool isConcpetObject /** True if the object is a concept one( a point or symbol with special attributes) */,
                NXOpen::Tooling::SpreadsheetData * sheetData /** Spreadsheet data */
            );
            /** Edits standard part dimensions. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void EditStandardPartDimensions
            (
                NXOpen::Assemblies::Component * component /** The component to be edited */
            );
            /** Performs post process to the newly added standard part. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void PerformPostProcessToAddedStandardPart
            (
                NXOpen::Assemblies::Component * component /** The component to be edited */
            );
            /** Changes the current reference set of the specified component. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void ChangeReferenceSet
            (
                NXOpen::Assemblies::Component * component /** The component to change reference set */,
                bool addToExtraRefset /** Whether to add the component to 'TRUE' and 'FALSE' reference set of its parent part */,
                const NXString & refsetName /** New reference set applied to the component */
            );
            /** Changes the current reference set of the specified component. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            void ChangeReferenceSet
            (
                NXOpen::Assemblies::Component * component /** The component to change reference set */,
                bool addToExtraRefset /** Whether to add the component to 'TRUE' and 'FALSE' reference set of its parent part */,
                const char * refsetName /** New reference set applied to the component */
            );
            /** Adds standard parts to a parent which contains pattern points.  @return  The added components 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: std::vector<NXOpen::Assemblies::Component *> AddStandardPartsToPattern
            (
                NXOpen::Part * patternPart /** The parent part to add a component */,
                const NXString & fileName /** File name of the component to add */,
                const NXString & refsetName /** New reference set applied to the added component */,
                const NXString & instanceName /** New instance name applied to the added component */
            );
            /** Adds standard parts to a parent which contains pattern points.  @return  The added components 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            std::vector<NXOpen::Assemblies::Component *> AddStandardPartsToPattern
            (
                NXOpen::Part * patternPart /** The parent part to add a component */,
                const char * fileName /** File name of the component to add */,
                const char * refsetName /** New reference set applied to the added component */,
                const char * instanceName /** New instance name applied to the added component */
            );
            /** Edits the dimension of concept symbols. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void EditConceptSymbols
            (
                NXOpen::Tooling::ConceptStandardPartRecord * conceptRecord /** Concept standard part record*/,
                const std::vector<NXOpen::NXObject *> & entities /** Entities regarded as concept objects */
            );
            /** Adds concept symbols or points quietly. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void AddConceptObjectsQuietly
            (
                const NXString & positionMethod /** The standard part positioning method */,
                NXOpen::Tooling::ConceptStandardPartRecord * conceptRecord /** Concept standard part record*/
            );
            /** Adds concept symbols or points quietly. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            void AddConceptObjectsQuietly
            (
                const char * positionMethod /** The standard part positioning method */,
                NXOpen::Tooling::ConceptStandardPartRecord * conceptRecord /** Concept standard part record*/
            );
            /** Removes the specified standard part component from the current Mold Wizard assembly 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void RemoveComponent
            (
                NXOpen::Assemblies::Component * component /** The standard part component to remove */
            );
            /** Removes the specified mold base from the current Mold Wizard assembly 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void RemoveMoldBase
            (
                NXOpen::Assemblies::Component * component /** The mold base component to remove */
            );
            /** Rotates the specified mold base with given angle 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void RotateMoldBase
            (
                NXOpen::Assemblies::Component * component /** The mold base component to rotate */,
                double angle /** The input angle used to rotate the mold base */
            );
            /** Updates expressions of the specified concept mold base 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void UpdateConceptMoldBaseExpressions
            (
                NXOpen::Part * conceptMoldBasePart /** The mold base part to update expressions */
            );
            /** Flips the selected standard part 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void FlipComponent
            (
                NXOpen::Assemblies::Component * component /** The standard part component to flip */
            );
            /** Inserts an object to m_addedStandardPartOccs 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void InsertAddedStandardPartOccsItem
            (
                NXOpen::Assemblies::Component * component /** The standard part component to add to the saving list */
            );
            /** Gets number of objects saved in m_addedStandardPartOccs 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: int GetAddedStandardPartOccurrencesNumber
            (
            );
            /** Gets an object in m_addedStandardPartOccs 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::Component * GetAddedStandardPartOccurrenceItem
            (
                int partOccIndex /** partoccindex */ 
            );
            /** Recommends mold base size according to layout dimension 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void RecommendMoldBaseSize
            (
            );
            /** Recommends A,B and C plate height of mold base according to layout dimension 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void RecommendMoldBasePlateHeight
            (
            );
            /** Sets the flag whether a new mold base is to be added 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void SetIsToAddNewMoldBase
            (
                bool isAddMoldBase /** True if the user chooses to add a new mold base */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
