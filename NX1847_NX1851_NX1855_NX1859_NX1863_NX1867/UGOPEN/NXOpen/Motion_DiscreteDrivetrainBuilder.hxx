#ifndef NXOpen_MOTION_DISCRETEDRIVETRAINBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_DISCRETEDRIVETRAINBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_DiscreteDrivetrainBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Motion_DiscreteDrivetrainLayoutBuilder.hxx>
#include <NXOpen/Motion_DiscreteDrivetrainPatternBuilder.hxx>
#include <NXOpen/Motion_DiscreteDrivetrainReportBuilder.hxx>
#include <NXOpen/Motion_MotionBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class DiscreteDrivetrainBuilder;
    }
    class Expression;
    namespace Motion
    {
        class DiscreteDrivetrainLayoutBuilder;
    }
    namespace Motion
    {
        class DiscreteDrivetrainLayoutBuilderList;
    }
    namespace Motion
    {
        class DiscreteDrivetrainPatternBuilder;
    }
    namespace Motion
    {
        class DiscreteDrivetrainPatternBuilderList;
    }
    namespace Motion
    {
        class DiscreteDrivetrainReportBuilder;
    }
    namespace Motion
    {
        class DiscreteDrivetrainReportBuilderList;
    }
    namespace Motion
    {
        class MotionBuilder;
    }
    namespace Motion
    {
        class SelectLink;
    }
    class SelectNXObject;
    class SelectNXObjectList;
    namespace Motion
    {
        class _DiscreteDrivetrainBuilderBuilder;
        class DiscreteDrivetrainBuilderImpl;
        /** Represents a @link Motion::DiscreteDrivetrain Motion::DiscreteDrivetrain@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Motion::DiscreteDrivetrainCollection::CreateDiscreteDrivetrainBuilder  NXOpen::Motion::DiscreteDrivetrainCollection::CreateDiscreteDrivetrainBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  DiscreteDrivetrainBuilder : public NXOpen::Motion::MotionBuilder
        {
            /** Discrete Drivetrain type. */
            public: enum DrivetrainTypeOption
            {
                DrivetrainTypeOptionTwoDimensional/** two dimensional */ ,
                DrivetrainTypeOptionThreeDimensional/** three dimensional */ 
            };

            private: DiscreteDrivetrainBuilderImpl * m_discretedrivetrainbuilder_impl;
            private: friend class  _DiscreteDrivetrainBuilderBuilder;
            protected: DiscreteDrivetrainBuilder();
            public: ~DiscreteDrivetrainBuilder();
            /**Returns  the type of discrete drivetrain element. 2D is the default value. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::DiscreteDrivetrainBuilder::DrivetrainTypeOption DrivetrainType
            (
            );
            /**Sets  the type of discrete drivetrain element. 2D is the default value. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDrivetrainType
            (
                NXOpen::Motion::DiscreteDrivetrainBuilder::DrivetrainTypeOption type /** type */ 
            );
            /**Returns  the list of all child discrete drivetrain layouts. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::DiscreteDrivetrainLayoutBuilderList * LayoutList
            (
            );
            /**Returns  the list of all child discrete drivetrain patterns. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::DiscreteDrivetrainPatternBuilderList * PatternList
            (
            );
            /**Returns  the list of all child discrete drivetrain reports. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::DiscreteDrivetrainReportBuilderList * ReportList
            (
            );
            /**Returns  the discrete drivetrain name. Must be unique across all motion elements. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString Name
            (
            );
            /**Sets  the discrete drivetrain name. Must be unique across all motion elements. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the discrete drivetrain name. Must be unique across all motion elements. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetName
            (
                const char * name /** name */ 
            );
            /** The compute path button. Call this method to compute the path for the discrete drivetrain layout. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void ComputePath
            (
            );
            /** The compute number of pattern instances button. Call this method to compute the number of pattern instances for the discrete drivetrain pattern. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void ComputeNumberOfPatternInstances
            (
            );
            /** The build pattern instances button. Call this method to build the pattern instances for the discrete drivetrain pattern. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void BuildPatternInstances
            (
            );
            /**Returns  the discrete drivetrain layout path sketch. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::SelectNXObject * PathSketch
            (
            );
            /**Returns  the discrete drivetrain layout path curves. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::SelectNXObjectList * PathCurves
            (
            );
            /**Returns  the discrete drivetrain reverse path direction. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool ReversePathDirection
            (
            );
            /**Sets  the discrete drivetrain reverse path direction. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetReversePathDirection
            (
                bool reversePathDirection /** reversepathdirection */ 
            );
            /**Returns  the driver sprocket/wheel velocity defined for the discrete drivetrain layout. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * DriverVelocity
            (
            );
            /**Returns  the discrete drivetrain pattern closing element. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectLink * ClosingElement
            (
            );
            /**Returns  the discrete drivetrain pattern adjacent element. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectLink * AdjacentElement
            (
            );
            /**Returns  the nominal pitch defined for the discrete drivetrain pattern. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * NominalPitch
            (
            );
            /**Returns  the number of patterns defined for the discrete drivetrain pattern. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * NumberOfPatternInstances
            (
            );
            /**Returns  the status to indicate whether the adjust pattern instances evenly is active or not. If it is true, then adjust pattern instances evenly is active. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool AdjustPatternInstancesEvenly
            (
            );
            /**Sets  the status to indicate whether the adjust pattern instances evenly is active or not. If it is true, then adjust pattern instances evenly is active. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetAdjustPatternInstancesEvenly
            (
                bool adjustPatternInstancesEvenly /** adjustpatterninstancesevenly */ 
            );
            /**Returns  the status to indicate whether the show pattern instances numbers is active or not. If it is true, then show pattern instances numbers is active. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool ShowPatternInstancesNumbers
            (
            );
            /**Sets  the status to indicate whether the show pattern instances numbers is active or not. If it is true, then show pattern instances numbers is active. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetShowPatternInstancesNumbers
            (
                bool showPatternInstancesNumbers /** showpatterninstancesnumbers */ 
            );
            /** Creates a new discrete drivetrain layout item and adds to the LayoutList.  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::DiscreteDrivetrainLayoutBuilder * CreateDiscreteDrivetrainLayoutBuilder
            (
            );
            /** Creates a new discrete drivetrain pattern item and adds to the PatternList.  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::DiscreteDrivetrainPatternBuilder * CreateDiscreteDrivetrainPatternBuilder
            (
            );
            /** Creates a new discrete drivetrain report item and adds to the ReportList.  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::DiscreteDrivetrainReportBuilder * CreateDiscreteDrivetrainReportBuilder
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
