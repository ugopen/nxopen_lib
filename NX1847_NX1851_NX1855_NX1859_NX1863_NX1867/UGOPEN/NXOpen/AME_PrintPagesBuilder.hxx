#ifndef NXOpen_AME_PRINTPAGESBUILDER_HXX_INCLUDED
#define NXOpen_AME_PRINTPAGESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_PrintPagesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class PrintPagesBuilder;
    }
    class Builder;
    class NXObject;
    namespace AME
    {
        class _PrintPagesBuilderBuilder;
        class PrintPagesBuilderImpl;
        /** JA class for the PrintPages dialog <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreatePrintPagesBuilder  NXOpen::AME::AMEManager::CreatePrintPagesBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  PrintPagesBuilder : public NXOpen::Builder
        {
            private: PrintPagesBuilderImpl * m_printpagesbuilder_impl;
            private: friend class  _PrintPagesBuilderBuilder;
            protected: PrintPagesBuilder();
            public: ~PrintPagesBuilder();
            /**Returns  the number of copies.  This option specifies the number of copies to
                        be printed
                    
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int Copies
            (
            );
            /**Sets  the number of copies.  This option specifies the number of copies to
                        be printed
                    
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCopies
            (
                int copies /** copies */ 
            );
            /**Returns  the printer text.  The printer field represents the full path name of the
                        printer the user wishes to print to.
                    
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXString PrinterText
            (
            );
            /**Sets  the printer text.  The printer field represents the full path name of the
                        printer the user wishes to print to.
                    
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPrinterText
            (
                const NXString & printer /** printer */ 
            );
            /**Sets  the printer text.  The printer field represents the full path name of the
                        printer the user wishes to print to.
                    
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            void SetPrinterText
            (
                const char * printer /** printer */ 
            );
            /** Set the pages to be printed.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void AddSelectedPages
            (
                const std::vector<NXOpen::NXObject *> & pages /** pages */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
