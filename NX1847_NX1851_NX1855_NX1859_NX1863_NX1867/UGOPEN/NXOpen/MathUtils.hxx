#ifndef NXOpen_MATHUTILS_HXX_INCLUDED
#define NXOpen_MATHUTILS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MathUtils.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class MathUtils;
    class Session;
    class MathUtilsImpl;
    /** Contains various math utility methods  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
     <br>  Created in NX3.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  MathUtils
    {
        private: MathUtilsImpl * m_mathutils_impl;
        private: NXOpen::Session* m_owner;
        /// \cond NX_NO_DOC 
        public: explicit MathUtils(NXOpen::Session *owner);


        /// \endcond 
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~MathUtils();
        /** Orthonormalizes a matrix  @return  An orthonormalized version of the input matrix. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Matrix3x3 Orthonormalize
        (
            const NXOpen::Matrix3x3 & original /** The original matrix.  Must have a non-zero determinant. */
        );
        /** Returns a vector which is the product of a 3x3 matrix and a 3D vector  @return  The product of the matrix and original vector. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Vector3d Multiply
        (
            const NXOpen::Matrix3x3 & matrix /** The transform matrix. */,
            const NXOpen::Vector3d & originalVector /** The original vector we want to multiply with the matrix */
        );
        /** Returns a point which is the product of a 3x3 matrix and a 3D point  @return  The product of the matrix and original point. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Point3d Multiply
        (
            const NXOpen::Matrix3x3 & matrix /** The transform matrix. */,
            const NXOpen::Point3d & originalPoint /** The original point we want to multiply with the matrix */
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
