#ifndef NXOpen_ROUTING_SEGMENTPAIRBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_SEGMENTPAIRBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_SegmentPairBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class SegmentPairBuilder;
    }
    class Builder;
    class SelectNXObjectList;
    namespace Routing
    {
        class _SegmentPairBuilderBuilder;
        class SegmentPairBuilderImpl;
        /** The builder for creating the list item of SegmentPairs  <br> To create a new instance of this class, use @link NXOpen::Routing::AssignDiscontinuityBuilder::SegmentPairBuilder  NXOpen::Routing::AssignDiscontinuityBuilder::SegmentPairBuilder @endlink  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  SegmentPairBuilder : public NXOpen::Builder
        {
            private: SegmentPairBuilderImpl * m_segmentpairbuilder_impl;
            private: friend class  _SegmentPairBuilderBuilder;
            protected: SegmentPairBuilder();
            public: ~SegmentPairBuilder();
            /**Returns  the list item of Segment Pairs 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::SelectNXObjectList * PairSegment
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
