#ifndef NXOpen_CAM_FLOWBUILDER_HXX_INCLUDED
#define NXOpen_CAM_FLOWBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_FlowBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class FlowBuilder;
    }
    namespace CAM
    {
        class FlowCutSteepContainment;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class InheritableToolDepBuilder;
    }
    namespace CAM
    {
        class _FlowBuilderBuilder;
        class FlowBuilderImpl;
        /** Represents a FlowBuilder Builder  <br> This is an abstract class and cannot be instantiated.  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  FlowBuilder : public NXOpen::TaggedObject
        {
            /** Available types for Flow Cut/Offset Mode in scop  */
            public: enum FlowOffsetModeType
            {
                FlowOffsetModeTypeSingle/**Single Pass*/,
                FlowOffsetModeTypeMultiple/**Multiple Offsets*/,
                FlowOffsetModeTypeReftool/**Reference Tool Offsets*/
            };

            /** Available types for Flow Cut/Manual Assembly in scop  */
            public: enum FlowEditTypes
            {
                FlowEditTypesAutomatic/** Automatic */,
                FlowEditTypesUserDefined/** User Defined*/
            };

            private: FlowBuilderImpl * m_flowbuilder_impl;
            private: friend class  _FlowBuilderBuilder;
            protected: FlowBuilder();
            public: ~FlowBuilder();
            /**Returns  the flow max concavity 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * MaxConcavityAngleBuilder
            (
            );
            /**Returns  the flow min cut length 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableToolDepBuilder * MinCutLengthBuilder
            (
            );
            /**Returns  the builder of flow merge distance
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableToolDepBuilder * MergeDistBuilder
            (
            );
            /**Returns  the Flow Cut/Offset Mode 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::FlowBuilder::FlowOffsetModeType FlowOffsetMode
            (
            );
            /**Sets  the Flow Cut/Offset Mode 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFlowOffsetMode
            (
                NXOpen::CAM::FlowBuilder::FlowOffsetModeType flowOffsetMode /** the Flow Cut/Offset Mode value */
            );
            /**Returns  the Cleanup Output, Contact Boundary  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool ContactBnd
            (
            );
            /**Sets  the Cleanup Output, Contact Boundary  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetContactBnd
            (
                bool contactBnd /** the Contact Boundary value */
            );
            /**Returns  the Cleanup Output, Tool End Boundary  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool CenterCurve
            (
            );
            /**Sets  the Cleanup Output, Tool End Boundary  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCenterCurve
            (
                bool centerCurve /** the Tool End Boundary value */
            );
            /**Returns  the flow reference tool diameter 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double TlDiameter
            (
            );
            /**Sets  the flow reference tool diameter 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetTlDiameter
            (
                double tlDiameter /** The flow reference tool diameter */
            );
            /**Returns  the flow overlap distance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * FlowOverlapDistBuilder
            (
            );
            /**Returns  the Manual Assembly 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::FlowBuilder::FlowEditTypes FlowEdit
            (
            );
            /**Sets  the Manual Assembly 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFlowEdit
            (
                NXOpen::CAM::FlowBuilder::FlowEditTypes flowEdit /** the Manual Assembly value */
            );
            /**Returns  the Steep Angle 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * SteepAngleBuilder
            (
            );
            /**Returns  the Non-steep Cutting Builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::FlowCutSteepContainment * NonSteepCutting
            (
            );
            /**Returns  the Steep Cutting Builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::FlowCutSteepContainment * SteepCutting
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
