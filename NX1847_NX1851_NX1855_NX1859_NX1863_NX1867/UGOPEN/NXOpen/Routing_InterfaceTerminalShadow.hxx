#ifndef NXOpen_ROUTING_INTERFACETERMINALSHADOW_HXX_INCLUDED
#define NXOpen_ROUTING_INTERFACETERMINALSHADOW_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_InterfaceTerminalShadow.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Routing_InterfaceTerminalBase.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class InterfaceTerminalShadow;
    }
    namespace Routing
    {
        class InterfaceTerminalBase;
    }
    namespace Routing
    {
        class _InterfaceTerminalShadowBuilder;
        class InterfaceTerminalShadowImpl;
        /** Represents the defining data for a physical @link NXOpen::Routing::Port NXOpen::Routing::Port@endlink .

                 <br> 
                @link NXOpen::Routing::InterfaceTerminalShadow NXOpen::Routing::InterfaceTerminalShadow@endlink  is an assembly shadow of @link NXOpen::Routing::InterfaceTerminalBase NXOpen::Routing::InterfaceTerminalBase@endlink .  
                Component assignment associates the physical NX @link NXOpen::Routing::Port NXOpen::Routing::Port@endlink  to the logical port defined by this
                @link NXOpen::Routing::InterfaceTerminalShadow NXOpen::Routing::InterfaceTerminalShadow@endlink .
                 <br>        
                 <br> 
                @link NXOpen::Routing::InterfaceTerminalShadow NXOpen::Routing::InterfaceTerminalShadow@endlink  objects reside in the work part (in assembly context) and
                carries the same GUID as the source @link NXOpen::Routing::Port NXOpen::Routing::Port@endlink .  It syncs with the source anytime necessary or possible.
                 <br> 
                 <br> 
                Shadow objects are like extracted objects and stand in for the source objects, when source parts are
                unavailable or unloaded.
                 <br> 
                 <br> 
                See NX Routing help for the Connectivity data model documentation.
                 <br> 
             <br> Creator not available in KF.  <br> 
         <br>  Created in NX4.0.2.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  InterfaceTerminalShadow : public NXOpen::Routing::InterfaceTerminalBase
        {
            private: InterfaceTerminalShadowImpl * m_interfaceterminalshadow_impl;
            private: friend class  _InterfaceTerminalShadowBuilder;
            protected: InterfaceTerminalShadow();
            public: ~InterfaceTerminalShadow();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
