#ifndef NXOpen_CAE_CONNECTIONS_ELEMENT_HXX_INCLUDED
#define NXOpen_CAE_CONNECTIONS_ELEMENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Connections_Element.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Connections_CommonTypes.hxx>
#include <NXOpen/CAE_Connections_IConnection.hxx>
#include <NXOpen/CAE_Connections_Types.hxx>
#include <NXOpen/CAE_IExportableFEEntity.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Connections
        {
            class Element;
        }
    }
    namespace CAE
    {
        class CaeGroup;
    }
    namespace CAE
    {
        namespace Connections
        {
            class IConnection;
        }
    }
    namespace CAE
    {
        class FEElement;
    }
    namespace CAE
    {
        class FENode;
    }
    namespace CAE
    {
        class IExportableFEEntity;
    }
    namespace CAE
    {
        class PropertyTable;
    }
    class Expression;
    class NXObject;
    namespace CAE
    {
        namespace Connections
        {
            class _ElementBuilder;
            class ElementImpl;
            /**  @brief  This is the class to access a connection element  

               <br> To obtain an instance of this object use the Create creator in @link CAE::Connections::ElementCollection CAE::Connections::ElementCollection@endlink .  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  Element : public NXOpen::NXObject, public virtual NXOpen::CAE::IExportableFEEntity
            {
                private: ElementImpl * m_element_impl;
                private: friend class  _ElementBuilder;
                protected: Element();
                public: ~Element();
                /**Returns the status of the element
                            
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::Connections::ElementStatusType Status
                (
                );
                /**Returns  the compatibility of the element
                                (whether it accepts compatible or incompatible meshes)
                            
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: bool IsCompatibleType
                (
                );
                /**Returns the type of the element
                            
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::Connections::ElementType Type
                (
                );
                /**Sets the type of the element
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetType
                (
                    NXOpen::CAE::Connections::ElementType type /** type */ 
                );
                /** Adds connections to this element
                            
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void AddConnections
                (
                    const std::vector<NXOpen::CAE::Connections::IConnection *> & connections /** connections */ 
                );
                /** Removes a connection from this element. This does not delete/destroy the connection, instead
                                this element will no longer keep a reference to the connection.
                            
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void RemoveConnections
                (
                    const std::vector<NXOpen::CAE::Connections::IConnection *> & connections /** connections */ 
                );
                /** Gets connections from this element
                            
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void GetConnections
                (
                    std::vector<NXOpen::CAE::Connections::IConnection *> & connections /** connections */ 
                );
                /**Returns the min bar length.
                 <br>  @deprecated Deprecated in NX1847.0.0.  This functionality is no longer supported. <br>  

                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX1847.0.0.  This functionality is no longer supported.") NXOpen::Expression * MinBarLength
                (
                );
                /**Returns  the property table. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::PropertyTable * PropertyTable
                (
                );
                /** Mesh the Connection Element.
                            
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void GenerateElements
                (
                );
                /** Mark the Connection Element as changed. To be used when the Property Table has been modified before calling @link NXOpen::CAE::Connections::Element::GenerateElements NXOpen::CAE::Connections::Element::GenerateElements@endlink .
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void MarkAsModifiedByPropertyTable
                (
                );
                /**Returns  the flag telling if the connection element is set up manually.
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: bool Manual
                (
                );
                /**Sets  the flag telling if the connection element is set up manually.
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetManual
                (
                    bool manual /** manual */ 
                );
                /**Returns  the node selection method.
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::Connections::SeamWeldNodeSelectionMethod NodeSelectionMethod
                (
                );
                /**Sets  the node selection method.
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetNodeSelectionMethod
                (
                    NXOpen::CAE::Connections::SeamWeldNodeSelectionMethod method /** method */ 
                );
                /** Get node groups.
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void GetNodeGroups
                (
                    std::vector<NXOpen::CAE::CaeGroup *> & groups /** groups */ 
                );
                /** Set node groups.
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetNodeGroups
                (
                    const std::vector<NXOpen::CAE::CaeGroup *> & groups /** groups */ 
                );
                /** Get nodes.
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void GetNodes
                (
                    std::vector<NXOpen::CAE::FENode *> & nodes /** nodes */ 
                );
                /** Set nodes.
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetNodes
                (
                    const std::vector<NXOpen::CAE::FENode *> & nodes /** nodes */ 
                );
                /** Get element groups.
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void GetElementGroups
                (
                    std::vector<NXOpen::CAE::CaeGroup *> & groups /** groups */ 
                );
                /** Set element groups.
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetElementGroups
                (
                    const std::vector<NXOpen::CAE::CaeGroup *> & groups /** groups */ 
                );
                /** Get elements.
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void GetElements
                (
                    std::vector<NXOpen::CAE::FEElement *> & elems /** elems */ 
                );
                /** Set elements.
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetElements
                (
                    const std::vector<NXOpen::CAE::FEElement *> & elems /** elems */ 
                );
                /** Returns the solver card syntax strings for this entity.  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: virtual std::vector<NXString> GetSolverCardSyntax
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
