#ifndef NXOpen_FEATURES_UNITCELLEDITORBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_UNITCELLEDITORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_UnitCellEditorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_RodItemListBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class UnitCellEditorBuilder;
    }
    class Builder;
    namespace GeometricUtilities
    {
        class RodItemListBuilder;
    }
    class Section;
    namespace Features
    {
        class _UnitCellEditorBuilderBuilder;
        class UnitCellEditorBuilderImpl;
        /**
            The unit cell editor allows an application to create, store and edit a lattice unit cell.
            The application can open an existing unit cell file and the rods will be available for deselection. 
            The application can select curves and edges in the work part to be included in a new unit cell file.
            Note that the method @link Builder::Commit Builder::Commit@endlink  will simply call @link Save Save@endlink .
             <br> To create a new instance of this class, use @link NXOpen::Features::LatticeFeatureCollection::CreateUnitCellEditorBuilder  NXOpen::Features::LatticeFeatureCollection::CreateUnitCellEditorBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  UnitCellEditorBuilder : public NXOpen::Builder
        {
            private: UnitCellEditorBuilderImpl * m_unitcelleditorbuilder_impl;
            private: friend class  _UnitCellEditorBuilderBuilder;
            protected: UnitCellEditorBuilder();
            public: ~UnitCellEditorBuilder();
            /**Returns  the unit cell file name to open or save 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXString FileBrowser
            (
            );
            /**Sets  the unit cell file name to open or save 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetFileBrowser
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the unit cell file name to open or save 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            void SetFileBrowser
            (
                const char * filename /** filename */ 
            );
            /**Returns  an option to show the unit cell pattern 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowPattern
            (
            );
            /**Sets  an option to show the unit cell pattern 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetShowPattern
            (
                bool showPattern /** showpattern */ 
            );
            /**Returns  the unit cell rod diameter 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: double RodDiameter
            (
            );
            /**Sets  the unit cell rod diameter 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetRodDiameter
            (
                double rodDiameter /** roddiameter */ 
            );
            /**Returns  the number of unit cells to display along X axis when show pattern is ON 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int CellCountX
            (
            );
            /**Sets  the number of unit cells to display along X axis when show pattern is ON 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetCellCountX
            (
                int cellCountX /** cellcountx */ 
            );
            /**Returns  the number of unit cells to display along Y axis when show pattern is ON 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int CellCountY
            (
            );
            /**Sets  the number of unit cells to display along Y axis when show pattern is ON 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetCellCountY
            (
                int cellCountY /** cellcounty */ 
            );
            /**Returns  the number of unit cells to display along Z axis when show pattern is ON 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int CellCountZ
            (
            );
            /**Sets  the number of unit cells to display along Z axis when show pattern is ON 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetCellCountZ
            (
                int cellCountZ /** cellcountz */ 
            );
            /** Open an existing unit cell file 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: int Open
            (
                NXOpen::Section * section /** section */ 
            );
            /** Save the unit cell file using the file name registered in this builder 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void Save
            (
            );
            /**Returns  an option to keep all the curves in the part when opening a unit cell file 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool KeepRods
            (
            );
            /**Sets  an option to keep all the curves in the part when opening a unit cell file 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetKeepRods
            (
                bool keepRods /** keeprods */ 
            );
            /**Returns  a rod item list
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: NXOpen::GeometricUtilities::RodItemListBuilder * RodItemList
            (
            );
            /**  Create the working cube to view the space where the unit cell must be defined. The edges and the faces of the working cube can be used to define the rod start and end locations.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void CreateWorkingCube
            (
            );
            /** Journaling for the Creation of Snap Handles  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void CreateSnapHandles
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
