#ifndef NXOpen_FEATURES_CUSTOMFEATUREMODIFYFEATUREGEOMETRYEVENT_HXX_INCLUDED
#define NXOpen_FEATURES_CUSTOMFEATUREMODIFYFEATUREGEOMETRYEVENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_CustomFeatureModifyFeatureGeometryEvent.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_CustomFeatureEvent.hxx>
#include <NXOpen/Features_TrackingData.hxx>
#include <NXOpen/Features_CustomFeatureEvent.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class CustomFeatureModifyFeatureGeometryEvent;
    }
    namespace Features
    {
        class CustomFeatureEvent;
    }
    namespace Features
    {
        class TrackingData;
    }
    class TaggedObject;
    namespace Features
    {
        class _CustomFeatureModifyFeatureGeometryEventBuilder;
        class CustomFeatureModifyFeatureGeometryEventImpl;
        /**  @brief Represents the event data for a modify geometry callback for a custom feature.  

         
                
                Only modify the geometry here and specify tracking. Addition of the attributes and any dependency can be done in @link NXOpen::Features::CustomFeaturePostUpdateEvent NXOpen::Features::CustomFeaturePostUpdateEvent@endlink .
                
              <br> This class cannot be created  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  CustomFeatureModifyFeatureGeometryEvent : public NXOpen::Features::CustomFeatureEvent
        {
            private: CustomFeatureModifyFeatureGeometryEventImpl * m_customfeaturemodifyfeaturegeometryevent_impl;
            private: friend class  _CustomFeatureModifyFeatureGeometryEventBuilder;
            protected: CustomFeatureModifyFeatureGeometryEvent();
            public: ~CustomFeatureModifyFeatureGeometryEvent();
            /** Gets the Parasolid bodies of a custom feature  @return  The Array of output Bodies 
             <br>  @deprecated Deprecated in NX12.0.1.  Please use @link CustomFeatureModifyFeatureGeometryEvent::GetCreatedBodies CustomFeatureModifyFeatureGeometryEvent::GetCreatedBodies@endlink  instead, this api will not return any bodies. <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX12.0.1.  Please use CustomFeatureModifyFeatureGeometryEvent::GetCreatedBodies instead, this api will not return any bodies.") std::vector<NXOpen::Features::CustomFeatureEvent::ParasolidId> Getbodies
            (
            );
            /** Gets the Parasolid bodies created by a custom feature in a create geometry callback @return  The Array of output Bodies 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: std::vector<NXOpen::Features::CustomFeatureEvent::ParasolidId> GetCreatedBodies
            (
            );
            /** Creates the tracking data for an NX object
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::TrackingData * CreateTrackingDataForNXObject
            (
                NXOpen::TaggedObject * nxObject /** The NX object for which create tracking data */
            );
            /** Appends the tracking data for a custom feature
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void AppendOutputTrackingData
            (
                const std::vector<NXOpen::Features::TrackingData *> & trackingData /** trackingdata */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
