#ifndef NXOpen_CAE_CONNECTIONS_CONNECTIONDBITEMDATA_HXX_INCLUDED
#define NXOpen_CAE_CONNECTIONS_CONNECTIONDBITEMDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Connections_ConnectionDBItemData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Connections_Types.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Connections
        {
            class ConnectionDBItemData;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class _ConnectionDBItemDataBuilder;
            class ConnectionDBItemDataImpl;
            /** Connection DB item data. Use this interface to set/get properties and parameters of the Connection DB item data.  
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  ConnectionDBItemData : public NXOpen::TaggedObject
            {
                private: ConnectionDBItemDataImpl * m_connectiondbitemdata_impl;
                private: friend class  _ConnectionDBItemDataBuilder;
                protected: ConnectionDBItemData();
                public: ~ConnectionDBItemData();
                /**Returns  the name  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString Name
                (
                );
                /**Sets  the name  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                public: void SetName
                (
                    const NXString & name /** name */ 
                );
                /**Sets  the name  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                void SetName
                (
                    const char * name /** name */ 
                );
                /**Returns  the screw diameter  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: double ScrewDiameter
                (
                );
                /**Sets  the screw diameter  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                public: void SetScrewDiameter
                (
                    double screwDiameter /** screwdiameter */ 
                );
                /**Returns  the material ID  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: int MaterialID
                (
                );
                /**Sets  the material ID  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                public: void SetMaterialID
                (
                    int materialID /** materialid */ 
                );
                /**Returns  the mass  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: double Mass
                (
                );
                /**Sets  the mass  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                public: void SetMass
                (
                    double mass /** mass */ 
                );
                /**Returns  the mass  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::ConnectionDBItemStiffnessType StiffnessType
                (
                );
                /**Sets  the mass  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                public: void SetStiffnessType
                (
                    NXOpen::CAE::Connections::ConnectionDBItemStiffnessType stiffnessType /** stiffnesstype */ 
                );
                /**Returns  the stiffness X  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: double StiffnessX
                (
                );
                /**Sets  the stiffness X  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                public: void SetStiffnessX
                (
                    double stiffnessX /** stiffnessx */ 
                );
                /**Returns  the stiffness Y  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: double StiffnessY
                (
                );
                /**Sets  the stiffness Y  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                public: void SetStiffnessY
                (
                    double stiffnessY /** stiffnessy */ 
                );
                /**Returns  the stiffness Z  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: double StiffnessZ
                (
                );
                /**Sets  the stiffness Z  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                public: void SetStiffnessZ
                (
                    double stiffnessZ /** stiffnessz */ 
                );
                /**Returns  the stiffness R  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: double StiffnessR
                (
                );
                /**Sets  the stiffness R  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                public: void SetStiffnessR
                (
                    double stiffnessR /** stiffnessr */ 
                );
                /**Returns  the stiffness RS  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: double StiffnessS
                (
                );
                /**Sets  the stiffness RS  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                public: void SetStiffnessS
                (
                    double stiffnessS /** stiffnesss */ 
                );
                /**Returns  the stiffness RX  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: double StiffnessRX
                (
                );
                /**Sets  the stiffness RX  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                public: void SetStiffnessRX
                (
                    double stiffnessRX /** stiffnessrx */ 
                );
                /**Returns  the stiffness RY  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: double StiffnessRY
                (
                );
                /**Sets  the stiffness RY  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                public: void SetStiffnessRY
                (
                    double stiffnessRY /** stiffnessry */ 
                );
                /**Returns  the stiffness RZ  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: double StiffnessRZ
                (
                );
                /**Sets  the stiffness RZ  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                public: void SetStiffnessRZ
                (
                    double stiffnessRZ /** stiffnessrz */ 
                );
                /**Returns  the stiffness RR  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: double StiffnessRR
                (
                );
                /**Sets  the stiffness RR  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                public: void SetStiffnessRR
                (
                    double stiffnessRR /** stiffnessrr */ 
                );
                /**Returns  the stiffness RS  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: double StiffnessRS
                (
                );
                /**Sets  the stiffness RS  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_nv_comp (" Simcenter NVH Composer") OR sc_gso_comp (" Simcenter NVH Composer") */
                public: void SetStiffnessRS
                (
                    double stiffnessRS /** stiffnessrs */ 
                );
                /** The Dofs  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<int> GetDofs
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
