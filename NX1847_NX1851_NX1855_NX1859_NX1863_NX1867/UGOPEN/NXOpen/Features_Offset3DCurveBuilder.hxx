#ifndef NXOpen_FEATURES_OFFSET3DCURVEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_OFFSET3DCURVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_Offset3DCurveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_CurveFitData.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class Offset3DCurveBuilder;
    }
    class Direction;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class CurveFitData;
    }
    class ICurve;
    class Section;
    namespace Features
    {
        class _Offset3DCurveBuilderBuilder;
        class Offset3DCurveBuilderImpl;
        /**Represents a @link Features::Offset3DCurveBuilder Features::Offset3DCurveBuilder@endlink  builder which implements 
            offset curves along a direction with offset distance in three dimension.  <br> To create a new instance of this class, use @link NXOpen::Features::CurveFeatureCollection::CreateOffset3dCurveBuilder  NXOpen::Features::CurveFeatureCollection::CreateOffset3dCurveBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Associative </td> <td> 
         
        true </td> </tr> 

        <tr><td> 
         
        CurveFitData.CurveJoinMethod </td> <td> 
         
        No </td> </tr> 

        <tr><td> 
         
        CurveFitData.Degree </td> <td> 
         
        7 </td> </tr> 

        <tr><td> 
         
        CurveFitData.FitMethod </td> <td> 
         
        DegreeAndSegments </td> </tr> 

        <tr><td> 
         
        CurveFitData.IsAdvancedFit </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        CurveFitData.IsAlignShape </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        CurveFitData.MaximumDegree </td> <td> 
         
        7 </td> </tr> 

        <tr><td> 
         
        CurveFitData.MaximumSegments </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        CurveFitData.MinimumDegree </td> <td> 
         
        5 </td> </tr> 

        <tr><td> 
         
        CurveFitData.Segments </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        OffsetDistance.Value </td> <td> 
         
        10 (millimeters part), 0.5 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  Offset3DCurveBuilder : public NXOpen::Features::FeatureBuilder
        {
            private: Offset3DCurveBuilderImpl * m_offset3dcurvebuilder_impl;
            private: friend class  _Offset3DCurveBuilderBuilder;
            protected: Offset3DCurveBuilder();
            public: ~Offset3DCurveBuilder();
            /**Returns  the curves to offset. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * OffsetCurves
            (
            );
            /**Sets  the curves to offset. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetOffsetCurves
            (
                NXOpen::Section * offsetCurves /** offsetcurves */ 
            );
            /**Returns  the reference direction from which to get the offset direction. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * OffsetViewDirection
            (
            );
            /**Sets  the reference direction from which to get the offset direction. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetOffsetViewDirection
            (
                NXOpen::Direction * offsetViewDirection /** offsetviewdirection */ 
            );
            /**Returns  the distance by which to offset the curves. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * OffsetDistance
            (
            );
            /**Returns  the flag of reverse all offset direction. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseSide
            (
            );
            /**Sets  the flag of reverse all offset direction. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReverseSide
            (
                bool reverseDirection /** reversedirection */ 
            );
            /**Returns  the flag for creating associative or non-associative feature. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool Associative
            (
            );
            /**Sets  the flag for creating associative or non-associative feature. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAssociative
            (
                bool associative /** associative */ 
            );
            /**Returns  the curve fit settings 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::CurveFitData * CurveFitData
            (
            );
            /** Routine to store the output curves and the flip logical in the builder 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void FlipOffsetCurveDirection
            (
                NXOpen::ICurve * inputCurve /** inputcurve */ ,
                const NXOpen::Point3d & point /** point */ ,
                bool reverseDirection /** reversedirection */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
