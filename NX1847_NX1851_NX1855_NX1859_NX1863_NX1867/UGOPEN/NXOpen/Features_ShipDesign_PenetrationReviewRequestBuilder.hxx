#ifndef NXOpen_FEATURES_SHIPDESIGN_PENETRATIONREVIEWREQUESTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_PENETRATIONREVIEWREQUESTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_PenetrationReviewRequestBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class PenetrationReviewRequestBuilder;
        }
    }
    class Builder;
    namespace Features
    {
        namespace ShipDesign
        {
            class _PenetrationReviewRequestBuilderBuilder;
            class PenetrationReviewRequestBuilderImpl;
            /** Represents a @link Features::ShipDesign::PenetrationRequest Features::ShipDesign::PenetrationRequest@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Features::ShipDesign::PenetrationRequestCollection::CreatePenetrationReviewRequestBuilder  NXOpen::Features::ShipDesign::PenetrationRequestCollection::CreatePenetrationReviewRequestBuilder @endlink  <br> 
             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  PenetrationReviewRequestBuilder : public NXOpen::Builder
            {
                private: PenetrationReviewRequestBuilderImpl * m_penetrationreviewrequestbuilder_impl;
                private: friend class  _PenetrationReviewRequestBuilderBuilder;
                protected: PenetrationReviewRequestBuilder();
                public: ~PenetrationReviewRequestBuilder();
                /**Returns  the review decisions 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: int ReviewDecisions
                (
                );
                /**Sets  the review decisions 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SetReviewDecisions
                (
                    int enumReviewDecisions /** enumreviewdecisions */ 
                );
                /**Returns  the due date 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString DueDate
                (
                );
                /**Sets  the due date 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SetDueDate
                (
                    const NXString & stringDueDate /** stringduedate */ 
                );
                /**Sets  the due date 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                void SetDueDate
                (
                    const char * stringDueDate /** stringduedate */ 
                );
                /** Returns the multiline string comments 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetMultilineStringComments
                (
                );
                /** Sets the multiline string comments 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SetMultilineStringComments
                (
                    const std::vector<NXString> & multilineStringComments /** multilinestringcomments */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
