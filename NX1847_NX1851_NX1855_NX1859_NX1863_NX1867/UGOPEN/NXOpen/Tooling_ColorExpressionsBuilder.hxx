#ifndef NXOpen_TOOLING_COLOREXPRESSIONSBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_COLOREXPRESSIONSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ColorExpressionsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ColorExpressionsBuilder;
    }
    class Builder;
    class NXColor;
    class ScCollector;
    namespace UserDefinedObjects
    {
        class UserDefinedObject;
    }
    namespace Tooling
    {
        class _ColorExpressionsBuilderBuilder;
        class ColorExpressionsBuilderImpl;
        /** 
            Represents a @link NXOpen::Tooling::ColorExpressionsBuilder NXOpen::Tooling::ColorExpressionsBuilder@endlink  builder.
             <br> To create a new instance of this class, use @link NXOpen::Tooling::MoldwizardManager::CreateColorExpressionsBuilder  NXOpen::Tooling::MoldwizardManager::CreateColorExpressionsBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ColorExpressionsBuilder : public NXOpen::Builder
        {
            private: ColorExpressionsBuilderImpl * m_colorexpressionsbuilder_impl;
            private: friend class  _ColorExpressionsBuilderBuilder;
            protected: ColorExpressionsBuilder();
            public: ~ColorExpressionsBuilder();
            /**Returns  the solid faces selected by user
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SelectFaces
            (
            );
            /**Returns  the color picker 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * ColorPicker
            (
            );
            /**Sets  the color picker 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetColorPicker
            (
                NXOpen::NXColor * colorPicker /** colorpicker */ 
            );
            /**Returns  the color name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ColorName
            (
            );
            /**Sets  the color name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetColorName
            (
                const NXString & colorName /** colorname */ 
            );
            /**Sets  the color name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            void SetColorName
            (
                const char * colorName /** colorname */ 
            );
            /** Select current udo 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetCurrentUDO
            (
                NXOpen::UserDefinedObjects::UserDefinedObject * udo /** The udo object */
            );
            /** Delete current udo 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void DeleteCurrentUDO
            (
            );
            /** Block current udo 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void BlockCurrentUDO
            (
                bool blocked /** blocked */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
