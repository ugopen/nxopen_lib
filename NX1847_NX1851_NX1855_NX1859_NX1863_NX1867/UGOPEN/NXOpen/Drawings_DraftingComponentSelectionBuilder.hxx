#ifndef NXOpen_DRAWINGS_DRAFTINGCOMPONENTSELECTIONBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_DRAFTINGCOMPONENTSELECTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_DraftingComponentSelectionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_drawings_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drawings
    {
        class DraftingComponentSelectionBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class NXObject;
    class Part;
    class SelectNXObjectList;
    namespace Drawings
    {
        class _DraftingComponentSelectionBuilderBuilder;
        class DraftingComponentSelectionBuilderImpl;
        /** This builder allows the user to select a view in which
                component objects can be designated as primary or secondary geometry 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_DRAWINGSEXPORT  DraftingComponentSelectionBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** type of geometry */
            public: enum Geometry
            {
                GeometryPrimaryGeometry/** indicates the component objects are to be rendered with Primary geometry color/font/width */,
                GeometrySecondaryGeometry/** indicates the component objects are to be rendered with Secondary geometry color/font/width */
            };

            private: DraftingComponentSelectionBuilderImpl * m_draftingcomponentselectionbuilder_impl;
            private: friend class  _DraftingComponentSelectionBuilderBuilder;
            protected: DraftingComponentSelectionBuilder();
            public: ~DraftingComponentSelectionBuilder();
            /**Returns  the object type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::DraftingComponentSelectionBuilder::Geometry ObjectType
            (
            );
            /**Sets  the object type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetObjectType
            (
                NXOpen::Drawings::DraftingComponentSelectionBuilder::Geometry objectType /** objecttype */ 
            );
            /** Reset list of components to those specified by Properties->Drawings->Secondary Geometry 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void ResetListToGlobal
            (
            );
            /** Initialize list of components from the input object's components list. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void InitializeListFromObject
            (
                NXOpen::NXObject * inputObject /** inputobject */ 
            );
            /** Clears the secondary component list. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void ClearSecondaryComponentList
            (
            );
            /**Returns  the selected objects (part occurrences) based on current object type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * Objects
            (
            );
            /**Returns  the part to use for populating the primary and secondary components object list 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Part * Part
            (
            );
            /**Sets  the part to use for populating the primary and secondary components object list 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPart
            (
                NXOpen::Part * part /** part */ 
            );
            /**Returns  the part to use for populating the primary and secondary components object list 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Part * PartForKF
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
