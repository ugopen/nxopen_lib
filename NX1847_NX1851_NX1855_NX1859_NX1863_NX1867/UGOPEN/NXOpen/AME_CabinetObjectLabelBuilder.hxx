#ifndef NXOpen_AME_CABINETOBJECTLABELBUILDER_HXX_INCLUDED
#define NXOpen_AME_CABINETOBJECTLABELBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_CabinetObjectLabelBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_OriginBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class CabinetObjectLabelBuilder;
    }
    namespace Annotations
    {
        class OriginBuilder;
    }
    class Builder;
    class NXObject;
    namespace AME
    {
        class _CabinetObjectLabelBuilderBuilder;
        class CabinetObjectLabelBuilderImpl;
        /** JA class for the cabinet object label dialog  <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateCabinetObjectLabelBuilder  NXOpen::AME::AMEManager::CreateCabinetObjectLabelBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  CabinetObjectLabelBuilder : public NXOpen::Builder
        {
            private: CabinetObjectLabelBuilderImpl * m_cabinetobjectlabelbuilder_impl;
            private: friend class  _CabinetObjectLabelBuilderBuilder;
            protected: CabinetObjectLabelBuilder();
            public: ~CabinetObjectLabelBuilder();
            /**Returns  the toggle reference designation set 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ToggleReferenceDesignationSet
            (
            );
            /**Sets  the toggle reference designation set 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetToggleReferenceDesignationSet
            (
                bool toggleReferenceDesignationSet /** togglereferencedesignationset */ 
            );
            /**Returns  the toggle function 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ToggleFunction
            (
            );
            /**Sets  the toggle function 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetToggleFunction
            (
                bool toggleFunction /** togglefunction */ 
            );
            /**Returns  the toggle location 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ToggleLocation
            (
            );
            /**Sets  the toggle location 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetToggleLocation
            (
                bool toggleLocation /** togglelocation */ 
            );
            /**Returns  the toggle product 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ToggleProduct
            (
            );
            /**Sets  the toggle product 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetToggleProduct
            (
                bool toggleProduct /** toggleproduct */ 
            );
            /**Returns  a cursor location
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::Point3d CursorLocation
            (
            );
            /**Sets  a cursor location
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetCursorLocation
            (
                const NXOpen::Point3d & position /** position */ 
            );
            /**Returns  a component selected
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::NXObject * EngObject
            (
            );
            /**Sets  a component selected
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetEngObject
            (
                NXOpen::NXObject * eo /** eo */ 
            );
            /**Returns  the cabinet object label 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::NXObject * CabinetObjectLabel
            (
            );
            /**Sets  the cabinet object label 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetCabinetObjectLabel
            (
                NXOpen::NXObject * eoLabel /** eolabel */ 
            );
            /**Returns  the origin 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::Annotations::OriginBuilder * Origin
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
