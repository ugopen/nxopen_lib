#ifndef NXOpen_DRAFTING_ANNOTATEVIEWSBUILDER_HXX_INCLUDED
#define NXOpen_DRAFTING_ANNOTATEVIEWSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drafting_AnnotateViewsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_drafting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drafting
    {
        class AnnotateViewsBuilder;
    }
    class Builder;
    namespace Drawings
    {
        class SelectDraftingViewList;
    }
    namespace Drafting
    {
        class _AnnotateViewsBuilderBuilder;
        class AnnotateViewsBuilderImpl;
        /** This class is used to annotate views based on the knowledge fusion rules.  <br> To create a new instance of this class, use @link NXOpen::Drafting::AutomationManager::CreateAnnotateViewsBuilder  NXOpen::Drafting::AutomationManager::CreateAnnotateViewsBuilder @endlink  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_DRAFTINGEXPORT  AnnotateViewsBuilder : public NXOpen::Builder
        {
            /** Option to delete or preserve existing automatic annotations when annotation views command
                    is run. */
            public: enum ExistingAutomaticAnnotation
            {
                ExistingAutomaticAnnotationDelete/** delete */ ,
                ExistingAutomaticAnnotationPreserve/** preserve */ 
            };

            private: AnnotateViewsBuilderImpl * m_annotateviewsbuilder_impl;
            private: friend class  _AnnotateViewsBuilderBuilder;
            protected: AnnotateViewsBuilder();
            public: ~AnnotateViewsBuilder();
            /**Returns  the views to annotate 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_drawing_auto ("NX Drawing Automation") */
            public: NXOpen::Drawings::SelectDraftingViewList * Views
            (
            );
            /**Returns  the existing automatic annotation option 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drafting::AnnotateViewsBuilder::ExistingAutomaticAnnotation ExistingAutomaticAnnotationOption
            (
            );
            /**Sets  the existing automatic annotation option 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_drawing_auto ("NX Drawing Automation") */
            public: void SetExistingAutomaticAnnotationOption
            (
                NXOpen::Drafting::AnnotateViewsBuilder::ExistingAutomaticAnnotation existingAutomaticAnnotationOption /** existingautomaticannotationoption */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
