#ifndef NXOpen_MOTION_MARKERBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_MARKERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_MarkerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class MarkerBuilder;
    }
    class Builder;
    class CoordinateSystem;
    class Point;
    class SelectNXObject;
    namespace Motion
    {
        class _MarkerBuilderBuilder;
        class MarkerBuilderImpl;
        /** Represents a builder of Marker  <br> To create a new instance of this class, use @link NXOpen::Motion::MarkerCollection::CreateMarkerBuilder  NXOpen::Motion::MarkerCollection::CreateMarkerBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        DisplayScale </td> <td> 
         
        1 </td> </tr> 

        </table>  

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  MarkerBuilder : public NXOpen::Builder
        {
            private: MarkerBuilderImpl * m_markerbuilder_impl;
            private: friend class  _MarkerBuilderBuilder;
            protected: MarkerBuilder();
            public: ~MarkerBuilder();
            /**Returns  the select motion body 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObject * SelectLink
            (
            );
            /**Returns   @brief the override state of the action motion body 

             
                        It should only be used for occurrences
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState SelectLinkOvrCtrl
            (
            );
            /**Sets   @brief the override state of the action motion body 

             
                        It should only be used for occurrences
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetSelectLinkOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the origin point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * OriginPoint
            (
            );
            /**Sets  the origin point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetOriginPoint
            (
                NXOpen::Point * originPoint /** originpoint */ 
            );
            /**Returns   @brief the override state of the action point 

             
                        It should only be used for occurrences
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState OriginPointOvrCtrl
            (
            );
            /**Sets   @brief the override state of the action point 

             
                        It should only be used for occurrences
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetOriginPointOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the csys 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * Csys
            (
            );
            /**Sets  the csys 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCsys
            (
                NXOpen::CoordinateSystem * csys /** csys */ 
            );
            /**Returns   @brief the override state of the coordinate system 

             
                        It should only be used for occurrences
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState CsysOvrCtrl
            (
            );
            /**Sets   @brief the override state of the coordinate system 

             
                        It should only be used for occurrences
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCsysOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the display scale 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double DisplayScale
            (
            );
            /**Sets  the display scale 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDisplayScale
            (
                double displayScale /** displayscale */ 
            );
            /**Returns  the name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
