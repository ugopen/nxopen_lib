#ifndef NXOpen_CAE_SELECTIONRECIPECOLLECTION_HXX_INCLUDED
#define NXOpen_CAE_SELECTIONRECIPECOLLECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SelectionRecipeCollection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <iterator>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SelRecipeBuilder.hxx>
#include <NXOpen/CAE_SetObject.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/TaggedObjectCollection.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SelectionRecipeCollection;
    }
    namespace CAE
    {
        class CaePart;
    }
    namespace CAE
    {
        class SelectionRecipe;
    }
    namespace CAE
    {
        class AttributeSelectionRecipe;
    }
    namespace CAE
    {
        class BoundingVolumeSelectionRecipe;
    }
    namespace CAE
    {
        class CoordinateSelectionRecipe;
    }
    namespace CAE
    {
        class LabelRangeSelectionRecipe;
    }
    namespace CAE
    {
        class PointSelectionRecipe;
    }
    namespace CAE
    {
        class SelRecipeBuilder;
    }
    namespace CAE
    {
        class SingleLabelSelectionRecipe;
    }
    class CoordinateSystem;
    class Expression;
    class Point;
    namespace CAE
    {
        class SelectionRecipeCollectionImpl;
        /**  @brief  Provides methods for managing Selection Recipes @link NXOpen::CAE::SelectionRecipe NXOpen::CAE::SelectionRecipe@endlink  

           <br> To obtain an instance of this class, refer to @link NXOpen::CAE::CaePart  NXOpen::CAE::CaePart @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SelectionRecipeCollection : public NXOpen::TaggedObjectCollection
        {
            private: SelectionRecipeCollectionImpl * m_selectionrecipecollection_impl;
            private: NXOpen::CAE::CaePart* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit SelectionRecipeCollection(NXOpen::CAE::CaePart *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~SelectionRecipeCollection();
            /** Iterator for accessing the contents of the collection. */
            //lint -sem(NXOpen::CAE::SelectionRecipeCollection::iterator::copy,initializer)
            class iterator : public std::iterator<std::forward_iterator_tag, NXOpen::CAE::SelectionRecipe *>
            {
            public:
                /** Default constructor */
                iterator() : m_context(nullptr), m_current(NULL_TAG)
                {
                    // coverity[uninit_member]
                } //lint !e1401 m_state is not initialized
                /// \cond NX_NO_DOC
                explicit iterator(NXOpen::CAE::SelectionRecipeCollection *context) : m_context(context), m_current(NULL_TAG)
                {
                    // coverity[uninit_member]
                }//lint !e1401 m_state is not initialized
                /// \endcond
                /** Copy constructor */
                iterator(const iterator &other): m_context(nullptr), m_current(NULL_TAG)
                {
                    copy(other);
                }
                /** Copy constructor */
                iterator &operator =(const iterator &other)
                {
                    if (&other != this)
                        copy(other);
                    return *this;
                }
                /** Tests if the iterator objects on the left side and the right side of the operator are equal. */
                bool operator ==(const iterator &other) const
                {
                    return m_current == other.m_current && m_context == other.m_context;
                }
                /** Tests if the iterator objects on the left side and the right side of the operator are not equal. */
                bool operator !=(const iterator &other) const
                {
                    return !operator == (other);
                }
                /** Return the element currently pointed to by the iterator. */
                NXOPENCPP_CAEEXPORT  value_type operator * () const;
                /** Points the iterator to next element. */
                iterator & operator ++()
                {
                    next();
                    return *this;
                }
                /** Points the iterator to next element. */
                iterator operator ++(int)
                {
                    iterator tmp(*this);
                    ++*this;
                    return tmp;
                }
            private:
                void copy(const iterator &other)
                {
                    m_context = other.m_context;
                    m_current = other.m_current;
                    for (int i = 0; i < sizeof(m_state)/sizeof(m_state[0]); i++)
                         m_state[i] = other.m_state[i];
                }
                NXOPENCPP_CAEEXPORT  void next();
                NXOpen::CAE::SelectionRecipeCollection *m_context;
                tag_t m_current;
                unsigned int m_state[8];
            };
            /** Returns an iterator addressing the first element. */
            iterator begin();
            /** Returns an iterator addressing one past the last element. */
            iterator end()
            {
                return iterator(this);
            }
            /** Create a Bounding Volume Selection Recipe
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::SelRecipeBuilder instead.") NXOpen::CAE::BoundingVolumeSelectionRecipe * CreateBoxBoundingVolumeRecipe
            (
                const NXString & name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                NXOpen::CoordinateSystem * centerCsys /** centercsys */ ,
                NXOpen::Expression * length /** length */ ,
                NXOpen::Expression * width /** width */ ,
                NXOpen::Expression * height /** height */ ,
                const std::vector<NXOpen::CAE::CaeSetGroupFilterType> & entityTypes /** Entity types to which this recipe resolves to. If NULL default will be Nodes */
            );
            /** Create a Bounding Volume Selection Recipe
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            NXOpen::CAE::BoundingVolumeSelectionRecipe * CreateBoxBoundingVolumeRecipe
            (
                const char * name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                NXOpen::CoordinateSystem * centerCsys /** centercsys */ ,
                NXOpen::Expression * length /** length */ ,
                NXOpen::Expression * width /** width */ ,
                NXOpen::Expression * height /** height */ ,
                const std::vector<NXOpen::CAE::CaeSetGroupFilterType> & entityTypes /** Entity types to which this recipe resolves to. If NULL default will be Nodes */
            );
            /** Create a Bounding Volume Selection Recipe @return  
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::SelRecipeBuilder instead.") NXOpen::CAE::BoundingVolumeSelectionRecipe * CreateBoxBoundingVolumeRecipe
            (
                const NXString & name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                NXOpen::Point * centerPoint /** centerpoint */ ,
                NXOpen::Point * targetPoint /** targetpoint */ ,
                const std::vector<NXOpen::CAE::CaeSetGroupFilterType> & entityTypes /** Entity types to which this recipe resolves to. If NULL default will be Nodes */
            );
            /** Create a Bounding Volume Selection Recipe @return  
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            NXOpen::CAE::BoundingVolumeSelectionRecipe * CreateBoxBoundingVolumeRecipe
            (
                const char * name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                NXOpen::Point * centerPoint /** centerpoint */ ,
                NXOpen::Point * targetPoint /** targetpoint */ ,
                const std::vector<NXOpen::CAE::CaeSetGroupFilterType> & entityTypes /** Entity types to which this recipe resolves to. If NULL default will be Nodes */
            );
            /** Create a Bounding Volume Selection Recipe @return  
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::SelRecipeBuilder instead.") NXOpen::CAE::BoundingVolumeSelectionRecipe * CreateCylinderBoundingVolumeRecipe
            (
                const NXString & name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                NXOpen::CoordinateSystem * centerCsys /** centercsys */ ,
                NXOpen::Expression * diameter /** diameter */ ,
                NXOpen::Expression * cylinderHeight /** cylinderheight */ ,
                const std::vector<NXOpen::CAE::CaeSetGroupFilterType> & entityTypes /** Entity types to which this recipe resolves to. If NULL default will be Nodes */
            );
            /** Create a Bounding Volume Selection Recipe @return  
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            NXOpen::CAE::BoundingVolumeSelectionRecipe * CreateCylinderBoundingVolumeRecipe
            (
                const char * name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                NXOpen::CoordinateSystem * centerCsys /** centercsys */ ,
                NXOpen::Expression * diameter /** diameter */ ,
                NXOpen::Expression * cylinderHeight /** cylinderheight */ ,
                const std::vector<NXOpen::CAE::CaeSetGroupFilterType> & entityTypes /** Entity types to which this recipe resolves to. If NULL default will be Nodes */
            );
            /** Create a Bounding Volume Selection Recipe @return  
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::SelRecipeBuilder instead.") NXOpen::CAE::BoundingVolumeSelectionRecipe * CreateCylinderBoundingVolumeRecipe
            (
                const NXString & name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                NXOpen::Expression * diameter /** diameter */ ,
                NXOpen::Point * baseCenter /** basecenter */ ,
                NXOpen::Point * topCenter /** topcenter */ ,
                const std::vector<NXOpen::CAE::CaeSetGroupFilterType> & entityTypes /** Entity types to which this recipe resolves to. If NULL default will be Nodes */
            );
            /** Create a Bounding Volume Selection Recipe @return  
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            NXOpen::CAE::BoundingVolumeSelectionRecipe * CreateCylinderBoundingVolumeRecipe
            (
                const char * name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                NXOpen::Expression * diameter /** diameter */ ,
                NXOpen::Point * baseCenter /** basecenter */ ,
                NXOpen::Point * topCenter /** topcenter */ ,
                const std::vector<NXOpen::CAE::CaeSetGroupFilterType> & entityTypes /** Entity types to which this recipe resolves to. If NULL default will be Nodes */
            );
            /** Create a Bounding Volume Selection Recipe @return  
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::SelRecipeBuilder instead.") NXOpen::CAE::BoundingVolumeSelectionRecipe * CreateSphereBoundingVolumeRecipe
            (
                const NXString & name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                NXOpen::Point * centerPoint /** centerpoint */ ,
                NXOpen::Expression * diameter /** diameter */ ,
                const std::vector<NXOpen::CAE::CaeSetGroupFilterType> & entityTypes /** Entity types to which this recipe resolves to. If NULL default will be Nodes */
            );
            /** Create a Bounding Volume Selection Recipe @return  
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            NXOpen::CAE::BoundingVolumeSelectionRecipe * CreateSphereBoundingVolumeRecipe
            (
                const char * name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                NXOpen::Point * centerPoint /** centerpoint */ ,
                NXOpen::Expression * diameter /** diameter */ ,
                const std::vector<NXOpen::CAE::CaeSetGroupFilterType> & entityTypes /** Entity types to which this recipe resolves to. If NULL default will be Nodes */
            );
            /** Creates a Single Node Label Selection Recipe 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::SelRecipeBuilder instead.") NXOpen::CAE::SingleLabelSelectionRecipe * CreateSingleLabelRecipe
            (
                const NXString & name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                int nodeLabel /** The label of the node to which the recipe resolves to. */
            );
            /** Creates a Single Node Label Selection Recipe 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            NXOpen::CAE::SingleLabelSelectionRecipe * CreateSingleLabelRecipe
            (
                const char * name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                int nodeLabel /** The label of the node to which the recipe resolves to. */
            );
            /** Creates a Label Range Selection Recipe 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::SelRecipeBuilder instead.") NXOpen::CAE::LabelRangeSelectionRecipe * CreateLabelRangeRecipe
            (
                const NXString & name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                const std::vector<int> & singleLabels /** singlelabels */ ,
                const std::vector<int> & startLabels /** startlabels */ ,
                const std::vector<int> & endLabels /** endlabels */ ,
                const std::vector<int> & increments /** increments */ ,
                NXOpen::CAE::CaeSetGroupFilterType entityType /** entitytype */ 
            );
            /** Creates a Label Range Selection Recipe 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            NXOpen::CAE::LabelRangeSelectionRecipe * CreateLabelRangeRecipe
            (
                const char * name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                const std::vector<int> & singleLabels /** singlelabels */ ,
                const std::vector<int> & startLabels /** startlabels */ ,
                const std::vector<int> & endLabels /** endlabels */ ,
                const std::vector<int> & increments /** increments */ ,
                NXOpen::CAE::CaeSetGroupFilterType entityType /** entitytype */ 
            );
            /** Creates a Coordinate based Single Node Selection Recipe 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::SelRecipeBuilder instead.") NXOpen::CAE::CoordinateSelectionRecipe * CreateCoordinateRecipe
            (
                const NXString & name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                const NXOpen::Point3d & coordinates /** The coordinates to be used in the search. */,
                double tolerance /** The search tolerance. */
            );
            /** Creates a Coordinate based Single Node Selection Recipe 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            NXOpen::CAE::CoordinateSelectionRecipe * CreateCoordinateRecipe
            (
                const char * name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                const NXOpen::Point3d & coordinates /** The coordinates to be used in the search. */,
                double tolerance /** The search tolerance. */
            );
            /** Creates a Point based Single Node Selection Recipe 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::SelRecipeBuilder instead.") NXOpen::CAE::PointSelectionRecipe * CreatePointRecipe
            (
                const NXString & name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                NXOpen::Point * point /** The point whom coordinates will be used in the search. */,
                double tolerance /** The search tolerance. */
            );
            /** Creates a Point based Single Node Selection Recipe 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            NXOpen::CAE::PointSelectionRecipe * CreatePointRecipe
            (
                const char * name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                NXOpen::Point * point /** The point whom coordinates will be used in the search. */,
                double tolerance /** The search tolerance. */
            );
            /** Creates an Attribute based Selection Recipe 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::SelRecipeBuilder instead.") NXOpen::CAE::AttributeSelectionRecipe * CreateAttributeRecipe
            (
                const NXString & name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                NXOpen::CAE::CaeSetGroupFilterType entityType /** The main enitity type to which the recipe resolves to. */,
                bool resolveRelatedFeEntity /** Resolve to FE entity type related to main entity type. */,
                NXOpen::CAE::CaeSetGroupFilterType relatedFeEntityType /** The FE enitity type related to the main entity type. Recipe will only resolve to the FE entity type, not the main entity type.*/
            );
            /** Creates an Attribute based Selection Recipe 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            NXOpen::CAE::AttributeSelectionRecipe * CreateAttributeRecipe
            (
                const char * name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */,
                NXOpen::CAE::CaeSetGroupFilterType entityType /** The main enitity type to which the recipe resolves to. */,
                bool resolveRelatedFeEntity /** Resolve to FE entity type related to main entity type. */,
                NXOpen::CAE::CaeSetGroupFilterType relatedFeEntityType /** The FE enitity type related to the main entity type. Recipe will only resolve to the FE entity type, not the main entity type.*/
            );
            /** Creates a builder for Selection Recipe 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SelRecipeBuilder * CreateSelRecipeBuilder
            (
            );
            /** Finds the @link  NXOpen::CAE::SelectionRecipe   NXOpen::CAE::SelectionRecipe @endlink  with the given identifier as recorded in a journal. 
                        An object may not return the same value as its JournalIdentifier in different versions of 
                        the software. However newer versions of the software should find the same object when 
                        FindObject is passed older versions of its journal identifier. In general, this method 
                        should not be used in handwritten code and exists to support record and playback of journals.

                        An exception will be thrown if no object can be found with the given journal identifier. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SelectionRecipe * FindObject
            (
                const NXString & journalIdentifier /** Identifier of the Set you want */
            );
            /** Finds the @link  NXOpen::CAE::SelectionRecipe   NXOpen::CAE::SelectionRecipe @endlink  with the given identifier as recorded in a journal. 
                        An object may not return the same value as its JournalIdentifier in different versions of 
                        the software. However newer versions of the software should find the same object when 
                        FindObject is passed older versions of its journal identifier. In general, this method 
                        should not be used in handwritten code and exists to support record and playback of journals.

                        An exception will be thrown if no object can be found with the given journal identifier. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            NXOpen::CAE::SelectionRecipe * FindObject
            (
                const char * journalIdentifier /** Identifier of the Set you want */
            );
            /** Copies a Selection Recipe with all attributes and add it to the collection.
                        This method gives proper unique name to the created Selection Recipe. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SelectionRecipe * Copy
            (
                NXOpen::CAE::SelectionRecipe * recipeToCopy /** recipetocopy */ ,
                const NXString & name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */
            );
            /** Copies a Selection Recipe with all attributes and add it to the collection.
                        This method gives proper unique name to the created Selection Recipe. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            NXOpen::CAE::SelectionRecipe * Copy
            (
                NXOpen::CAE::SelectionRecipe * recipeToCopy /** recipetocopy */ ,
                const char * name /** Name of the selection recipe. If NULL, then a valid unique name will be generated. */
            );
            /** Delete a list of selection recipes
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void Delete
            (
                const std::vector<NXOpen::CAE::SelectionRecipe *> & recipes /** The recipes to be deleted */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
