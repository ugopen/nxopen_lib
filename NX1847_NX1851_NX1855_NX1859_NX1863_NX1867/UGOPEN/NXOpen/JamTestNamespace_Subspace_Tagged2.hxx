#ifndef NXOpen_JAMTESTNAMESPACE_SUBSPACE_TAGGED2_HXX_INCLUDED
#define NXOpen_JAMTESTNAMESPACE_SUBSPACE_TAGGED2_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     JamTestNamespace_Subspace_Tagged2.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/JamTestNamespace_Tagged.hxx>
#include <NXOpen/libnxopenjamtestcpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace JamTestNamespace
    {
        namespace Subspace
        {
            class Tagged2;
        }
    }
    namespace JamTestNamespace
    {
        class Tagged;
    }
    namespace JamTestNamespace
    {
        namespace Subspace
        {
            class _Tagged2Builder;
            class Tagged2Impl;
            /** Test class for testing a class inside a nested namespace  <br> not done yet  <br> 
             <br>  Created in NX4.0.0.  <br>  
            */
            class NXOPENJAMTESTCPPEXPORT  Tagged2 : public NXOpen::JamTestNamespace::Tagged
            {
                /** Object type */
                public: enum ObjType
                {
                    ObjTypeTypeTwo/** type two */ ,
                    ObjTypeTypeTwoB/** type two b */ 
                };

                 /** Data struct */
                public:
                struct Struct1
                {
                    public: /** i */ int I;
                    public: /** d */ double D;
                    public: Struct1() :
                        I(),
                        D()
                    {
                    }
                    /** Constructor for the Struct1 struct. */ 
                    public: Struct1(int iInitial /** i */ , 
                            double dInitial /** d */ ) :
                        I(iInitial),
                        D(dInitial)
                    {
                    }
                };

                private: Tagged2Impl * m_tagged2_impl;
                private: friend class  _Tagged2Builder;
                protected: Tagged2();
                public: ~Tagged2();
                /** Test method  @return  
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: int NegateAndAddId
                (
                    int input /** input */ 
                );
                /**Returns  the type 
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::JamTestNamespace::Subspace::Tagged2::ObjType Type
                (
                );
                /** Test method  @return  
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: int AddToId
                (
                    int x /** x */ 
                );
                /** Sets the struct 
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetStruct
                (
                    const NXOpen::JamTestNamespace::Subspace::Tagged2::Struct1 & input /** input */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
