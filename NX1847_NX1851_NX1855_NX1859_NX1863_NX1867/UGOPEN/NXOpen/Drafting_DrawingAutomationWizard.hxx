#ifndef NXOpen_DRAFTING_DRAWINGAUTOMATIONWIZARD_HXX_INCLUDED
#define NXOpen_DRAFTING_DRAWINGAUTOMATIONWIZARD_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drafting_DrawingAutomationWizard.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drafting_DrawingCreationWizardBuilder.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_drafting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drafting
    {
        class DrawingAutomationWizard;
    }
    namespace Drafting
    {
        class DrawingCreationWizardBuilder;
    }
    class Part;
    namespace Drafting
    {
    }
    namespace Drafting
    {
        class DrawingAutomationWizardImpl;
        /** Represents callback data for the drawing automation wizard. 
         <br>  Created in NX8.5.3.  <br>  
        */
        class NXOPENCPP_DRAFTINGEXPORT  DrawingAutomationWizard : public NXOpen::TransientObject
        {
            private: DrawingAutomationWizardImpl * m_drawingautomationwizard_impl;
            /// \cond NX_NO_DOC 
            public: explicit DrawingAutomationWizard(void *ptr);
            /// \endcond 
            /** Free resources associated with the instance. After this method
                    is called, it is illegal to use the object.  In .NET, this method
                    is automatically called when the object is deleted by the garbage
                    collector. 
             <br>  Created in NX8.5.3.  <br>  
             <br> License requirements : None */
            public: virtual ~DrawingAutomationWizard();
            /**Returns  the part from which the booklet drawings are created 
             <br>  Created in NX8.5.3.  <br>  
             <br> License requirements : None */
            public: NXOpen::Part * Part
            (
            );
            /**Sets  the part from which the booklet drawings are created 
             <br>  Created in NX8.5.3.  <br>  
             <br> License requirements : None */
            public: void SetPart
            (
                NXOpen::Part * part /** part from which the booklet drawings are created */
            );
            /**Returns  the flag denoting whether or not to create the booklet in the current session 
             <br>  Created in NX8.5.3.  <br>  
             <br> License requirements : None */
            public: bool ContinueProcessing
            (
            );
            /**Sets  the flag denoting whether or not to create the booklet in the current session 
             <br>  Created in NX8.5.3.  <br>  
             <br> License requirements : None */
            public: void SetContinueProcessing
            (
                bool continueProcessing /** flag denoting whether or not to create the booklet in the current session */
            );
            /**Returns  the drawing automation wizard builder 
             <br>  Created in NX8.5.3.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drafting::DrawingCreationWizardBuilder * Builder
            (
            );
            /**Sets  the drawing automation wizard builder 
             <br>  Created in NX8.5.3.  <br>  
             <br> License requirements : None */
            public: void SetBuilder
            (
                NXOpen::Drafting::DrawingCreationWizardBuilder * builder /** drawing automation wizard builder */
            );
            /**Returns  the error code to be returned from the callback 
             <br>  Created in NX8.5.3.  <br>  
             <br> License requirements : None */
            public: int ErrorCode
            (
            );
            /**Sets  the error code to be returned from the callback 
             <br>  Created in NX8.5.3.  <br>  
             <br> License requirements : None */
            public: void SetErrorCode
            (
                int errorCode /** error code returned from callback */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
