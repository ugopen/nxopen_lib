#ifndef NXOpen_AME_ADDPROPERTYCOLUMNBUILDER_HXX_INCLUDED
#define NXOpen_AME_ADDPROPERTYCOLUMNBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_AddPropertyColumnBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class AddPropertyColumnBuilder;
    }
    class Builder;
    namespace AME
    {
        class _AddPropertyColumnBuilderBuilder;
        class AddPropertyColumnBuilderImpl;
        /** Represents configure result table class builder  <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateAddPropertyColumnBuilder  NXOpen::AME::AMEManager::CreateAddPropertyColumnBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  AddPropertyColumnBuilder : public NXOpen::Builder
        {
            /** Represents the property of*/
            public: enum Types
            {
                TypesObjects/** objects */ ,
                TypesTargets/** targets */ ,
                TypesSources/** sources */ ,
                TypesConnections/** connections */ ,
                TypesObjectPorts/** object ports */ ,
                TypesTargetPorts/** target ports */ ,
                TypesSourcePorts/** source ports */ ,
                TypesObjectParents/** object parents */ ,
                TypesTargetParents/** target parents */ ,
                TypesSourceParents/** source parents */ ,
                TypesConnectionParents/** connection parents */ 
            };

            /** Represents the parent object property*/
            public: enum ParentObjectTypes
            {
                ParentObjectTypesFunction/** function */ ,
                ParentObjectTypesLocation/** location */ ,
                ParentObjectTypesProduct/** product */ ,
                ParentObjectTypesAutomation/** automation */ 
            };

            private: AddPropertyColumnBuilderImpl * m_addpropertycolumnbuilder_impl;
            private: friend class  _AddPropertyColumnBuilderBuilder;
            protected: AddPropertyColumnBuilder();
            public: ~AddPropertyColumnBuilder();
            /**Returns  the Property Of type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::AddPropertyColumnBuilder::Types PropertyOf
            (
            );
            /**Sets  the Property Of type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetPropertyOf
            (
                NXOpen::AME::AddPropertyColumnBuilder::Types type /** type */ 
            );
            /**Returns  the Parent Object Type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::AddPropertyColumnBuilder::ParentObjectTypes ParentObjectType
            (
            );
            /**Sets  the Parent Object Type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetParentObjectType
            (
                NXOpen::AME::AddPropertyColumnBuilder::ParentObjectTypes type /** type */ 
            );
            /** The action to add properties 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void Add
            (
                const NXString & propertyOf /** propertyof */ ,
                const NXString & groupName /** groupname */ ,
                const NXString & propertyName /** propertyname */ 
            );
            /** The action to add properties 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void Add
            (
                const char * propertyOf /** propertyof */ ,
                const char * groupName /** groupname */ ,
                const char * propertyName /** propertyname */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
