#ifndef NXOpen_DIAGRAMMING_DATATYPE_HXX_INCLUDED
#define NXOpen_DIAGRAMMING_DATATYPE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Diagramming_DataType.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Diagramming
    {
        /** Represents the axis type. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum Axis
        {
            AxisX/** X axis */ = 1,
            AxisY/** Y axis */
        };

        /** Represents the direction type. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum Direction
        {
            DirectionIn/** In direction */ = 1,
            DirectionOut/** Out direction */,
            DirectionBoth/** Both direction */
        };

        /** Represents the sizing policy type. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum DiagrammingSizingpolicy
        {
            DiagrammingSizingpolicyLength/** Length policy */,
            DiagrammingSizingpolicyAuto/** Auto policy */,
            DiagrammingSizingpolicyPercent/** Percent policy */,
            DiagrammingSizingpolicyInherit/** Inherit policy */ = 4
        };

        /** Represents the stub side type. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum DiagrammingStubsides
        {
            DiagrammingStubsidesAuto/** Auto side */,
            DiagrammingStubsidesLeft/** Left side */,
            DiagrammingStubsidesRight/** Right side */
        };

        /** Represents the boundary type of annotation. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum DiagrammingAnnotationboundarytype
        {
            DiagrammingAnnotationboundarytypeNone/** No Boundary Type */,
            DiagrammingAnnotationboundarytypeCircle/** Circle Type */,
            DiagrammingAnnotationboundarytypeEllipse/** Ellipse Type */,
            DiagrammingAnnotationboundarytypeRectangle/** Rectangle Type */,
            DiagrammingAnnotationboundarytypeRoundedRectangle/** Rounded Rectangle Type */
        };

        /** Represents the arrow type. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum DiagrammingArrowtype
        {
            DiagrammingArrowtypeNone/** Setting the arrow type none arrow*/,
            DiagrammingArrowtypeOpen/** Setting the arrow type open arrow*/,
            DiagrammingArrowtypeFilled/** Setting the arrow type filled arrow*/,
            DiagrammingArrowtypeClosedSolid/** Setting the arrow type closed solid arrow*/
        };

        /** Represents the alignment. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum DiagrammingAlignment
        {
            DiagrammingAlignmentLeft/** Setting the left alignment */,
            DiagrammingAlignmentCenter/** Setting the center alignment */,
            DiagrammingAlignmentRight/** Setting the right alignment */,
            DiagrammingAlignmentJustify/** Setting the justify alignment */
        };

        /** Represents the location style. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum DiagrammingLocationstyle
        {
            DiagrammingLocationstyleAbsolute/** Absolute */,
            DiagrammingLocationstyleRelative/** Relative */
        };

        /** Represents the jumper type. 
         <br>  Created in NX11.0.0.  <br>  
        */
        enum DiagrammingJumpertype
        {
            DiagrammingJumpertypeU/** U shape */ = 1,
            DiagrammingJumpertypeBreak/** Break */
        };

        /** Represents the jumper priority. 
         <br>  Created in NX11.0.0.  <br>  
        */
        enum DiagrammingJumperprioritytype
        {
            DiagrammingJumperprioritytypeHorizontal/** Horizontal */,
            DiagrammingJumperprioritytypeVertical/** Vertical */
        };

        /** Represents the horizontal connection label offset position. 
         <br>  Created in NX11.0.0.  <br>  
        */
        enum DiagrammingConnectionlabelhorizontaloffsetposition
        {
            DiagrammingConnectionlabelhorizontaloffsetpositionAbove/** Above */,
            DiagrammingConnectionlabelhorizontaloffsetpositionBelow/** Below */
        };

        /** Represents the vertical connection label offset position. 
         <br>  Created in NX11.0.0.  <br>  
        */
        enum DiagrammingConnectionlabelverticaloffsetposition
        {
            DiagrammingConnectionlabelverticaloffsetpositionLeft/** Left */,
            DiagrammingConnectionlabelverticaloffsetpositionRight/** Right */
        };

        /** Represents the connection label position. 
         <br>  Created in NX11.0.0.  <br>  
        */
        enum DiagrammingConnectionlabelposition
        {
            DiagrammingConnectionlabelpositionStart/** Start */ = 1,
            DiagrammingConnectionlabelpositionEnd/** End */,
            DiagrammingConnectionlabelpositionCenter/** Centered */ = 4,
            DiagrammingConnectionlabelpositionSpaced/** Spaced */ = 8
        };

        /** Represents the repeat start position. 
         <br>  Created in NX11.0.0.  <br>  
        */
        enum DiagrammingRepeatstartposition
        {
            DiagrammingRepeatstartpositionCenter/** Center */,
            DiagrammingRepeatstartpositionStart/** Start */,
            DiagrammingRepeatstartpositionEnd/** End */
        };

        /** Represents the flow direction arrow style. 
         <br>  Created in NX11.0.1.  <br>  
        */
        enum DiagrammingFlowdirectionarrowstyle
        {
            DiagrammingFlowdirectionarrowstyleBottomFilledArrow/** bottom filled arrow */ ,
            DiagrammingFlowdirectionarrowstyleBottomOpenArrow/** bottom open arrow */ ,
            DiagrammingFlowdirectionarrowstyleClosedArrow/** closed arrow */ ,
            DiagrammingFlowdirectionarrowstyleClosedDoubleArrow/** closed double arrow */ ,
            DiagrammingFlowdirectionarrowstyleClosedDoubleSolidArrow/** closed double solid arrow */ ,
            DiagrammingFlowdirectionarrowstyleClosedSolidArrow/** closed solid arrow */ ,
            DiagrammingFlowdirectionarrowstyleFilledArrow/** filled arrow */ ,
            DiagrammingFlowdirectionarrowstyleFilledDoubleArrow/** filled double arrow */ ,
            DiagrammingFlowdirectionarrowstyleOpenArrow/** open arrow */ ,
            DiagrammingFlowdirectionarrowstyleOpenDoubleArrow/** open double arrow */ ,
            DiagrammingFlowdirectionarrowstyleTopFilledArrow/** top filled arrow */ ,
            DiagrammingFlowdirectionarrowstyleTopOpenArrow/** top open arrow */ 
        };

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#endif
