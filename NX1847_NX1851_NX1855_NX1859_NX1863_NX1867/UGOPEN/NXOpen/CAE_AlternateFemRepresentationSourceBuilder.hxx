#ifndef NXOpen_CAE_ALTERNATEFEMREPRESENTATIONSOURCEBUILDER_HXX_INCLUDED
#define NXOpen_CAE_ALTERNATEFEMREPRESENTATIONSOURCEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AlternateFemRepresentationSourceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AlternateFemRepresentationSource.hxx>
#include <NXOpen/CAE_SimResultReference.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class AlternateFemRepresentationSourceBuilder;
    }
    class Builder;
    namespace CAE
    {
        class AlternateFemRepresentationSource;
    }
    namespace CAE
    {
        class SimResultReference;
    }
    class Unit;
    namespace CAE
    {
        class _AlternateFemRepresentationSourceBuilderBuilder;
        class AlternateFemRepresentationSourceBuilderImpl;
        /**  @brief  Represents a @link NXOpen::CAE::AlternateFemRepresentationSourceBuilder NXOpen::CAE::AlternateFemRepresentationSourceBuilder@endlink  
            which can be used to create FemDataSets.  

           <br> Not support KF.  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  AlternateFemRepresentationSourceBuilder : public NXOpen::Builder
        {
            private: AlternateFemRepresentationSourceBuilderImpl * m_alternatefemrepresentationsourcebuilder_impl;
            private: friend class  _AlternateFemRepresentationSourceBuilderBuilder;
            protected: AlternateFemRepresentationSourceBuilder();
            public: ~AlternateFemRepresentationSourceBuilder();
            /** Commits the changes that have been applied to the builder and returns
                    the edited or newly created @link NXOpen::CAE::AlternateFemRepresentationSource NXOpen::CAE::AlternateFemRepresentationSource@endlink   @return  The object being edited, or the new object. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::AlternateFemRepresentationSource * CommitAlternateFemRepresentationSource
            (
            );
            /** Sets the name of the FemDataSet 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /** Sets the name of the FemDataSet 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetName
            (
                const char * name /** name */ 
            );
            /** Sets the file path 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetFilePath
            (
                const NXString & filepath /** Name of the file associated to the Fem Data Set. */
            );
            /** Sets the file path 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetFilePath
            (
                const char * filepath /** Name of the file associated to the Fem Data Set. */
            );
            /** Sets the result reference 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetResultReference
            (
                NXOpen::CAE::SimResultReference * pResultRef /** Result Reference associated to the Fem Data Set. */
            );
            /** Sets the length unit 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetLengthUnit
            (
                NXOpen::Unit * lengthUnit /** Length unit used to read the data file. */
            );
            /** Sets the mass unit 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetMassUnit
            (
                NXOpen::Unit * massUnit /** Mass unit used to read the data file. */
            );
            /** Sets the mesh creation mode 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetMeshCreationMode
            (
                NXOpen::CAE::AlternateFemRepresentationSource::CreateMeshMode creationMode /** Mesh creation mode used to read the data file. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
