#ifndef NXOpen_TOOLING_INSERTEDITTOOLSBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_INSERTEDITTOOLSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_InsertEditToolsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class InsertEditToolsBuilder;
    }
    namespace Assemblies
    {
        class SelectComponentList;
    }
    class Builder;
    class NXObject;
    class Point;
    class ScCollector;
    class SelectBodyList;
    namespace Tooling
    {
        class _InsertEditToolsBuilderBuilder;
        class InsertEditToolsBuilderImpl;
        /** Represents a @link NXOpen::Tooling::InsertEditToolsBuilder NXOpen::Tooling::InsertEditToolsBuilder@endlink  which is 
              used to copy or delete the insert edit.  <br> To create a new instance of this class, use @link NXOpen::Tooling::ProgressiveDieManager::CreateInsertEditToolsBuilder  NXOpen::Tooling::ProgressiveDieManager::CreateInsertEditToolsBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  InsertEditToolsBuilder : public NXOpen::Builder
        {
            /** Specifies the insert edit tools type. */
            public: enum Types
            {
                TypesCopy/** copy */,
                TypesDelete/** delete */,
                TypesChangeParent/** change parent */,
                TypesUpdateAllInsertPosition/** update all insert position */
            };

            private: InsertEditToolsBuilderImpl * m_insertedittoolsbuilder_impl;
            private: friend class  _InsertEditToolsBuilderBuilder;
            protected: InsertEditToolsBuilder();
            public: ~InsertEditToolsBuilder();
            /**Returns  the copy select insert 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * CopySelectInsert
            (
            );
            /**Returns  the control point 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * ControlPoint
            (
            );
            /**Sets  the control point 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetControlPoint
            (
                NXOpen::Point * controlPoint /** controlpoint */ 
            );
            /**Returns  the destination point 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * DestinationPoint
            (
            );
            /**Sets  the destination point 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetDestinationPoint
            (
                NXOpen::Point * destinationPoint /** destinationpoint */ 
            );
            /**Returns  the inserts to delete 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * InsertsToDelete
            (
            );
            /**Returns  the shanks to delete 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * ShanksToDelete
            (
            );
            /**Returns  the reparent select insert 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::SelectComponentList * ReparentSelectInsert
            (
            );
            /**Returns  the insert edit type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::InsertEditToolsBuilder::Types Type
            (
            );
            /**Sets  the insert edit type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetType
            (
                NXOpen::Tooling::InsertEditToolsBuilder::Types type /** type */ 
            );
            /** Reparent component 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void ReparentComponent
            (
                const NXString & componentName /** componentname */ ,
                const NXString & parentName /** parentname */ 
            );
            /** Reparent component 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            void ReparentComponent
            (
                const char * componentName /** componentname */ ,
                const char * parentName /** parentname */ 
            );
            /** Get all need reparent insert groups 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void GetAllNeedReparentInsertGroups
            (
                std::vector<NXOpen::NXObject *> & insertTags /** inserttags */ 
            );
            /** Ask new parent name of insert 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXString AskNewParentNameOfInsert
            (
                NXOpen::NXObject * insertTag /** inserttag */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
