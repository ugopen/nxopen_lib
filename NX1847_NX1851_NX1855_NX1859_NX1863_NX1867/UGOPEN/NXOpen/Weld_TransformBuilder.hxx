#ifndef NXOpen_WELD_TRANSFORMBUILDER_HXX_INCLUDED
#define NXOpen_WELD_TRANSFORMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_TransformBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Weld_CharacteristicsBuilder.hxx>
#include <NXOpen/libnxopencpp_weld_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Weld
    {
        class TransformBuilder;
    }
    class CoordinateSystem;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class Plane;
    class SelectNXObjectList;
    namespace Weld
    {
        class CharacteristicsBuilder;
    }
    namespace Weld
    {
        class _TransformBuilderBuilder;
        class TransformBuilderImpl;
        /** Represents a @link NXOpen::Weld::TransformBuilder NXOpen::Weld::TransformBuilder@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Weld::WeldManager::CreateTransformBuilder  NXOpen::Weld::WeldManager::CreateTransformBuilder @endlink  <br> 
         <br>  Created in NX11.0.1.  <br>  
        */
        class NXOPENCPP_WELDEXPORT  TransformBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** The transformation types */
            public: enum TransformationTypes
            {
                TransformationTypesMirror/** Mirror */,
                TransformationTypesTranslate/** Translate */
            };

            /** The type to define the method used to find connected parts */
            public: enum ConnectedPartMethods
            {
                ConnectedPartMethodsTransformBody/** Use the location of the transform body to help find connected parts */,
                ConnectedPartMethodsParentFaces/** Use transformed parent faces to find connected parts */
            };

            private: TransformBuilderImpl * m_transformbuilder_impl;
            private: friend class  _TransformBuilderBuilder;
            protected: TransformBuilder();
            public: ~TransformBuilder();
            /**Returns  the weld features to transform 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * Features
            (
            );
            /**Returns  the transformation type 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::TransformBuilder::TransformationTypes Type
            (
            );
            /**Sets  the transformation type 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetType
            (
                NXOpen::Weld::TransformBuilder::TransformationTypes transType /** transtype */ 
            );
            /**Returns  the method used to find connected parts 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::TransformBuilder::ConnectedPartMethods ConnectedPartMethod
            (
            );
            /**Sets  the method used to find connected parts 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetConnectedPartMethod
            (
                NXOpen::Weld::TransformBuilder::ConnectedPartMethods method /** method */ 
            );
            /**Returns  the mirror plane, used when @link NXOpen::Weld::TransformBuilder::TransformationTypes NXOpen::Weld::TransformBuilder::TransformationTypes@endlink  is set to @link  NXOpen::Weld::TransformBuilder::TransformationTypesMirror   NXOpen::Weld::TransformBuilder::TransformationTypesMirror @endlink  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Plane * MirrorPlane
            (
            );
            /**Sets  the mirror plane, used when @link NXOpen::Weld::TransformBuilder::TransformationTypes NXOpen::Weld::TransformBuilder::TransformationTypes@endlink  is set to @link  NXOpen::Weld::TransformBuilder::TransformationTypesMirror   NXOpen::Weld::TransformBuilder::TransformationTypesMirror @endlink  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetMirrorPlane
            (
                NXOpen::Plane * mirrorPlane /** mirrorplane */ 
            );
            /**Returns  the coordinate system that defines the translate offset directions. If not specified the absolute coordinate system will be used.
                        Used when @link NXOpen::Weld::TransformBuilder::TransformationTypes NXOpen::Weld::TransformBuilder::TransformationTypes@endlink  is set to @link  NXOpen::Weld::TransformBuilder::TransformationTypesTranslate   NXOpen::Weld::TransformBuilder::TransformationTypesTranslate @endlink  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * TranslateCsys
            (
            );
            /**Sets  the coordinate system that defines the translate offset directions. If not specified the absolute coordinate system will be used.
                        Used when @link NXOpen::Weld::TransformBuilder::TransformationTypes NXOpen::Weld::TransformBuilder::TransformationTypes@endlink  is set to @link  NXOpen::Weld::TransformBuilder::TransformationTypesTranslate   NXOpen::Weld::TransformBuilder::TransformationTypesTranslate @endlink  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetTranslateCsys
            (
                NXOpen::CoordinateSystem * csys /** csys */ 
            );
            /**Returns  the expression containing the value of the x translation distance. 
                        Used when @link NXOpen::Weld::TransformBuilder::TransformationTypes NXOpen::Weld::TransformBuilder::TransformationTypes@endlink  is set to @link  NXOpen::Weld::TransformBuilder::TransformationTypesTranslate   NXOpen::Weld::TransformBuilder::TransformationTypesTranslate @endlink  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TranslateX
            (
            );
            /**Returns  the expression containing the value of the y translation distance. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TranslateY
            (
            );
            /**Returns  the expression containing the value of the z translation distance. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TranslateZ
            (
            );
            /**Returns  the expression containing the value of the connected part tolerance. This is used to find connected part information for the transformed weld. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ConnectedPartTolerance
            (
            );
            /**Returns  the collection of welding characteristics defined by attributes. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::CharacteristicsBuilder * Characteristics
            (
            );
            /**Returns  the indication to create associative feature 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: bool Associative
            (
            );
            /**Sets  the indication to create associative feature 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetAssociative
            (
                bool associative /** associative */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
