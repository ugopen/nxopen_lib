#ifndef NXOpen_FEATURES_SHIPDESIGN_COPYOBJECTSBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_COPYOBJECTSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_CopyObjectsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ShipDesign_ShipNamesListBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class CopyObjectsBuilder;
        }
    }
    class Builder;
    namespace Features
    {
        namespace ShipDesign
        {
            class ShipNamesListBuilder;
        }
    }
    class SelectNXObject;
    class SelectNXObjectList;
    namespace Features
    {
        namespace ShipDesign
        {
            class _CopyObjectsBuilderBuilder;
            class CopyObjectsBuilderImpl;
            /**  Represents a @link NXOpen::Features::ShipDesign::CopyObjectsBuilder NXOpen::Features::ShipDesign::CopyObjectsBuilder@endlink   
                    It is used in Ship Building Application. The operation 
                    copies one or more components and pastes them to new parts while re-parenting 
                    and maintaining WAVE links
                 <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateCopyObjectsBuilder  NXOpen::Features::ShipCollection::CreateCopyObjectsBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            AngularTolerance </td> <td> 
             
            5 </td> </tr> 

            <tr><td> 
             
            CopySection </td> <td> 
             
            false </td> </tr> 

            <tr><td> 
             
            ObjectType </td> <td> 
             
            Part </td> </tr> 

            </table>  

             <br>  Created in NX10.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  CopyObjectsBuilder : public NXOpen::Builder
            {
                /** Type of Source Objects. */
                public: enum Type
                {
                    TypePart/** part */ ,
                    TypeFeature/** feature */ 
                };

                /** add version identifiers for the different revisions of the copy objects builder.*/
                public: enum VersionID
                {
                    VersionIDNx11/** nx11 */ ,
                    VersionIDNx12/** nx12 */ 
                };

                private: CopyObjectsBuilderImpl * m_copyobjectsbuilder_impl;
                private: friend class  _CopyObjectsBuilderBuilder;
                protected: CopyObjectsBuilder();
                public: ~CopyObjectsBuilder();
                /**Returns  the type of objects to copy. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::CopyObjectsBuilder::Type ObjectType
                (
                );
                /**Sets  the type of objects to copy. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetObjectType
                (
                    NXOpen::Features::ShipDesign::CopyObjectsBuilder::Type objectType /** objecttype */ 
                );
                /**Returns  the source input objects to copy. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObjectList * InputObjects
                (
                );
                /**Returns  the plane where the source objects to be copied from. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObject * CopyFrom
                (
                );
                /**Returns  the target objects where the source objects to be copied to. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObjectList * CopyTo
                (
                );
                /**Returns  the Ship Names builder, used to assign names to the copied objects created. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ShipNamesListBuilder * ShipNames
                (
                );
                /**Returns  the flag to indicate whether or not to show the xml report on copy basic design part results 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ShowXmlReport
                (
                );
                /**Sets  the flag to indicate whether or not to show the xml report on copy basic design part results 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetShowXmlReport
                (
                    bool showXmlReport /** showxmlreport */ 
                );
                /**Returns  the flag is used to define if linear tolerance on UI would be used when matching geometry.
                            If false, the linear tolerance will be set with max double value as default. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CopySection
                (
                );
                /**Sets  the flag is used to define if linear tolerance on UI would be used when matching geometry.
                            If false, the linear tolerance will be set with max double value as default. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetCopySection
                (
                    bool copySection /** copysection */ 
                );
                /**Returns  the value of linear tolerance is used to define the tolerance between candidate object and transformed source object.
                            For example, the distance from the qualified candidate curve to the transformed sample points of source curve shoud be within linear tolerance.
                            And for body, it checks the distance from the qualified body's faces and the transformed sample points of source body's corresponding faces. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: double LinearTolerance
                (
                );
                /**Sets  the value of linear tolerance is used to define the tolerance between candidate object and transformed source object.
                            For example, the distance from the qualified candidate curve to the transformed sample points of source curve shoud be within linear tolerance.
                            And for body, it checks the distance from the qualified body's faces and the transformed sample points of source body's corresponding faces. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetLinearTolerance
                (
                    double tolerance /** tolerance */ 
                );
                /**Returns  the value of angular tolerance is used to define the angular difference from the qualified candidate face / plane normal to source face / plane normal. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: double AngularTolerance
                (
                );
                /**Sets  the value of angular tolerance is used to define the angular difference from the qualified candidate face / plane normal to source face / plane normal. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetAngularTolerance
                (
                    double tolerance /** tolerance */ 
                );
                /**Returns  the value of algorithm version is used to define the version information. 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::CopyObjectsBuilder::VersionID AlgorithmVersion
                (
                );
                /**Sets  the value of algorithm version is used to define the version information. 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetAlgorithmVersion
                (
                    NXOpen::Features::ShipDesign::CopyObjectsBuilder::VersionID algorithmVersion /** algorithmversion */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
