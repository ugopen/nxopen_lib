#ifndef NXOpen_CAE_BASERESULTTYPE_HXX_INCLUDED
#define NXOpen_CAE_BASERESULTTYPE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_BaseResultType.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Result.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class BaseResultType;
    }
    class Unit;
    namespace CAE
    {
        class _BaseResultTypeBuilder;
        class BaseResultTypeImpl;
        /** This class provides interfaces to query result type attributes  <br> An instance of this class can not be obtained  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  BaseResultType : public NXOpen::TaggedObject
        {
            private: BaseResultTypeImpl * m_baseresulttype_impl;
            private: friend class  _BaseResultTypeBuilder;
            protected: BaseResultType();
            public: ~BaseResultType();
            /**Returns  the @link NXOpen::CAE::Result::Quantity NXOpen::CAE::Result::Quantity@endlink  for this result type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXOpen::CAE::Result::Quantity Quantity
            (
            );
            /**Returns  the @link NXOpen::CAE::Result::Location NXOpen::CAE::Result::Location@endlink  where this result type is defined
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXOpen::CAE::Result::Location Location
            (
            );
            /**Returns  the @link NXOpen::CAE::Result::DataType NXOpen::CAE::Result::DataType@endlink  for this result type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXOpen::CAE::Result::DataType Datatype
            (
            );
            /**Returns  the name for this result type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXString Name
            (
            );
            /**Returns  the user defined name of this result type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXString UserName
            (
            );
            /**Sets  the user defined name of this result type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetUserName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the user defined name of this result type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            void SetUserName
            (
                const char * name /** name */ 
            );
            /**Returns a value indicating whether the result type is a complex value 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: bool Complex
            (
            );
            /**Returns the sections where this result is defined. 
                       This method should be used to find out what are those sections.
                       If a result contain both shell and beam elements and this result is defined
                       in different sections of respective elements, say TOP, BOTTOM, StressRecoveryPointC etc.,
                       then all of them will be returned in this array.
                     @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: std::vector<NXOpen::CAE::Result::Section> GetSectionDefined
            (
            );
            /** Return all results components available for this result type     @return  
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: std::vector<NXString> AskComponents
            (
                std::vector<NXOpen::CAE::Result::Component> & components /** components */ 
            );
            /** Returns default unit for a given component of this Result Type @return  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXOpen::Unit * AskDefaultUnitForComponent
            (
                NXOpen::CAE::Result::Component component /** component */ 
            );
            /** Returns an array and a number of plies for a given result type
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void AskPlies
            (
                std::vector<int> & plyIDs /** plyids */ 
            );
            /** Returns an array of all the locations on which the result exists for the particular ply for a given result type
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void AskPlyLocations
            (
                int plyID /** plyid */ ,
                std::vector<NXOpen::CAE::Result::PlyLocation> & locations /** locations */ 
            );
            /** Returns all shell sections for result type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void AskShellLocations
            (
                std::vector<NXOpen::CAE::Result::ShellSection> & shellLocations /** shelllocations */ 
            );
            /** Returns all beam sections for result type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void AskBeamLocations
            (
                std::vector<NXOpen::CAE::Result::BeamSection> & beamLocations /** beamlocations */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
