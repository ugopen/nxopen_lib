#ifndef NXOpen_CAE_MESHPOINTPROJECTBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MESHPOINTPROJECTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_MeshPointProjectBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_MeshPointBaseBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class MeshPointProjectBuilder;
    }
    namespace CAE
    {
        class MeshPointBaseBuilder;
    }
    class Direction;
    class Point;
    class SelectDisplayableObjectList;
    class SelectTaggedObjectList;
    namespace CAE
    {
        class _MeshPointProjectBuilderBuilder;
        class MeshPointProjectBuilderImpl;
        /**
            Represents a @link NXOpen::CAE::MeshPointProjectBuilder NXOpen::CAE::MeshPointProjectBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::MeshPointCollection::CreateMeshpointProjectBuilder  NXOpen::CAE::MeshPointCollection::CreateMeshpointProjectBuilder @endlink  <br> 
         <br>  Created in NX5.0.2.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  MeshPointProjectBuilder : public NXOpen::CAE::MeshPointBaseBuilder
        {
            /** the projection method types */
            public: enum ProjectionMethod
            {
                ProjectionMethodTypeNearestPoint/** type nearest point */ ,
                ProjectionMethodTypeAlongVector/** type along vector */ 
            };

            private: MeshPointProjectBuilderImpl * m_meshpointprojectbuilder_impl;
            private: friend class  _MeshPointProjectBuilderBuilder;
            protected: MeshPointProjectBuilder();
            public: ~MeshPointProjectBuilder();
            /**Returns  the target 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * Target
            (
            );
            /**Returns  the point 
             <br>  Created in NX5.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the point 
             <br>  Created in NX5.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the points selection list  
             <br>  @deprecated Deprecated in NX12.0.0.  use @link NXOpen::CAE::MeshPointProjectBuilder::PointsList NXOpen::CAE::MeshPointProjectBuilder::PointsList@endlink  as the replacement for this property. <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  use NXOpen::CAE::MeshPointProjectBuilder::PointsList as the replacement for this property.") NXOpen::SelectDisplayableObjectList * Points
            (
            );
            /**Returns  the points selection list 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * PointsList
            (
            );
            /**Returns  the direction 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * Direction
            (
            );
            /**Sets  the direction 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetDirection
            (
                NXOpen::Direction * direction /** direction */ 
            );
            /**Returns  the projection method type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::MeshPointProjectBuilder::ProjectionMethod ProjectionOption
            (
            );
            /**Sets  the projection method type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetProjectionOption
            (
                NXOpen::CAE::MeshPointProjectBuilder::ProjectionMethod projectionType /** projection type */ 
            );
            /**Returns  the projection tolerance 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double ProjectionTolerance
            (
            );
            /**Sets  the projection tolerance 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetProjectionTolerance
            (
                double projectionTol /** projection tol */ 
            );
            /**Returns  the toggle 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool ProjectToNearestGeometry
            (
            );
            /**Sets  the toggle 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetProjectToNearestGeometry
            (
                bool toggle /** toggle */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
