#ifndef NXOpen_ANNOTATIONS_SINGLESIDEDDISPLAYBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_SINGLESIDEDDISPLAYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_SingleSidedDisplayBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class SingleSidedDisplayBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Annotations
    {
        class _SingleSidedDisplayBuilderBuilder;
        class SingleSidedDisplayBuilderImpl;
        /** Represents a @link NXOpen::Annotations::SingleSidedDisplayBuilder NXOpen::Annotations::SingleSidedDisplayBuilder@endlink . <br> This is a sub-builder class and cannot be directly instantiated  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  SingleSidedDisplayBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: SingleSidedDisplayBuilderImpl * m_singlesideddisplaybuilder_impl;
            private: friend class  _SingleSidedDisplayBuilderBuilder;
            protected: SingleSidedDisplayBuilder();
            public: ~SingleSidedDisplayBuilder();
            /**Returns  the display as single sided 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool DisplayAsSingleSided
            (
            );
            /**Sets  the display as single sided 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetDisplayAsSingleSided
            (
                bool displayAsSingleSided /** displayassinglesided */ 
            );
            /** Flips the side of single sided dimension 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void Flip
            (
            );
            /**Returns  the arrow line length on the open side of single sided dimension 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double SingleSidedArrowLineLength
            (
            );
            /**Sets  the arrow line length on the open side of single sided dimension 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetSingleSidedArrowLineLength
            (
                double singleSidedArrowLineLength /** singlesidedarrowlinelength */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
