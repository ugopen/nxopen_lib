#ifndef NXOpen_CAM_COLLISIONPAIRBUILDER_HXX_INCLUDED
#define NXOpen_CAM_COLLISIONPAIRBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_CollisionPairBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class CollisionPairBuilder;
    }
    class Builder;
    namespace CAM
    {
        class _CollisionPairBuilderBuilder;
        class CollisionPairBuilderImpl;
        /**
            Represents a @link NXOpen::CAM::CollisionPairBuilder NXOpen::CAM::CollisionPairBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::SIM::KinematicConfigurator::CreateCollisionPairBuilder  NXOpen::SIM::KinematicConfigurator::CreateCollisionPairBuilder @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  CollisionPairBuilder : public NXOpen::Builder
        {
            /** the collision selection filter value */
            public: enum Filter
            {
                FilterComponent/** component filter*/,
                FilterClass/** class filter*/,
                FilterComponentParent/** component parent filter*/
            };

            private: CollisionPairBuilderImpl * m_collisionpairbuilder_impl;
            private: friend class  _CollisionPairBuilderBuilder;
            protected: CollisionPairBuilder();
            public: ~CollisionPairBuilder();
            /**Returns  the first collision selection filter 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CollisionPairBuilder::Filter FirstObjectFilter
            (
            );
            /**Sets  the first collision selection filter 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFirstObjectFilter
            (
                NXOpen::CAM::CollisionPairBuilder::Filter filter /** filter */ 
            );
            /**Returns  the second collision selection filter 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CollisionPairBuilder::Filter SecondObjectFilter
            (
            );
            /**Sets  the second collision selection filter 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSecondObjectFilter
            (
                NXOpen::CAM::CollisionPairBuilder::Filter filter /** filter */ 
            );
            /**Returns  the first collision selection name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString FirstObjectName
            (
            );
            /**Sets  the first collision selection name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFirstObjectName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the first collision selection name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetFirstObjectName
            (
                const char * name /** name */ 
            );
            /**Returns  the second collision selection name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString SecondObjectName
            (
            );
            /**Sets  the second collision selection name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSecondObjectName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the second collision selection name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetSecondObjectName
            (
                const char * name /** name */ 
            );
            /**Returns  the collision clearance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double CollisionClearance
            (
            );
            /**Sets  the collision clearance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCollisionClearance
            (
                double collisionClearance /** collisionclearance */ 
            );
            /**Returns  the collision enable 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool CollisionEnable
            (
            );
            /**Sets  the collision enable 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCollisionEnable
            (
                bool collisionEnable /** collisionenable */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
