#ifndef NXOpen_TOOLING_ELECTRODEEDMOUTPUTBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_ELECTRODEEDMOUTPUTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ElectrodeEDMOutputBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ElectrodeEDMOutputBuilder;
    }
    namespace Assemblies
    {
        class SelectComponentList;
    }
    class Builder;
    class TaggedObject;
    namespace Tooling
    {
        class _ElectrodeEDMOutputBuilderBuilder;
        class ElectrodeEDMOutputBuilderImpl;
        /** Design electrode attribute transport builder to input and output an electrode attribute.  <br> To create a new instance of this class, use @link NXOpen::Tooling::ElectrodeDesignCollection::CreateEDMOutputBuilder  NXOpen::Tooling::ElectrodeDesignCollection::CreateEDMOutputBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        AttributeTemplate </td> <td> 
         
        Template1 </td> </tr> 

        <tr><td> 
         
        InputName </td> <td> 
         
        Template1 </td> </tr> 

        <tr><td> 
         
        MultipleFile </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ReplaceOption </td> <td> 
         
        1 </td> </tr> 

        </table>  

         <br>  Created in NX12.0.1.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ElectrodeEDMOutputBuilder : public NXOpen::Builder
        {
            /** the attribute template name option */
            public: enum NameOption
            {
                NameOptionTemplate1/** template1 name */,
                NameOptionTemplate2/** template2 name */
            };

            /** the attribute template file type */
            public: enum FileType
            {
                FileTypeTxt/** text document */,
                FileTypeXml/** XML document */
            };

            private: ElectrodeEDMOutputBuilderImpl * m_electrodeedmoutputbuilder_impl;
            private: friend class  _ElectrodeEDMOutputBuilderBuilder;
            protected: ElectrodeEDMOutputBuilder();
            public: ~ElectrodeEDMOutputBuilder();
            /**Returns  the blank to be edited. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::SelectComponentList * Blank
            (
            );
            /**Returns  the template path browser. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXString TemplateFolderNames
            (
            );
            /**Sets  the template path browser. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetTemplateFolderNames
            (
                const NXString & foldername /** foldername */ 
            );
            /**Sets  the template path browser. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            void SetTemplateFolderNames
            (
                const char * foldername /** foldername */ 
            );
            /**Returns  the output file path browser. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXString OutputFileFolderNames
            (
            );
            /**Sets  the output file path browser. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetOutputFileFolderNames
            (
                const NXString & foldername /** foldername */ 
            );
            /**Sets  the output file path browser. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            void SetOutputFileFolderNames
            (
                const char * foldername /** foldername */ 
            );
            /**Returns  the attribute template option. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ElectrodeEDMOutputBuilder::NameOption AttributeTemplate
            (
            );
            /**Sets  the attribute template option. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetAttributeTemplate
            (
                NXOpen::Tooling::ElectrodeEDMOutputBuilder::NameOption attributeTemplate /** attributetemplate */ 
            );
            /**Returns  the input name as project name. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXString InputName
            (
            );
            /**Sets  the input name as project name. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInputName
            (
                const NXString & inputName /** inputname */ 
            );
            /**Sets  the input name as project name. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            void SetInputName
            (
                const char * inputName /** inputname */ 
            );
            /**Returns  the name rule used to create output file. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXString NameRule
            (
            );
            /**Sets  the name rule used to create output file. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetNameRule
            (
                const NXString & nameRule /** namerule */ 
            );
            /**Sets  the name rule used to create output file. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            void SetNameRule
            (
                const char * nameRule /** namerule */ 
            );
            /**Returns  the option that allow user replace the existing file. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool ReplaceOption
            (
            );
            /**Sets  the option that allow user replace the existing file. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetReplaceOption
            (
                bool replaceOption /** replaceoption */ 
            );
            /**Returns  the option that allow user output multiple files for each blank. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool MultipleFile
            (
            );
            /**Sets  the option that allow user output multiple files for each blank. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetMultipleFile
            (
                bool multipleFile /** multiplefile */ 
            );
            /** Update blank attributes. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void UpdateEwBlankAttributes
            (
            );
            /** Get the current attribute template file name. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXString GetAttributeTemplateName
            (
            );
            /** Get all the attribute template file names in template folder. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void GetAttributeTemplateTitleNames
            (
                std::vector<NXString> & titleName /** titlename */ 
            );
            /** Set the attribute template file name. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetAttributeTemplateName
            (
                const NXString & attributeTemplateName /** attributetemplatename */ 
            );
            /** Set the attribute template file name. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            void SetAttributeTemplateName
            (
                const char * attributeTemplateName /** attributetemplatename */ 
            );
            /** Create the attribute output file name. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void CreateAttributeOutputFileName
            (
                NXOpen::TaggedObject * blank /** the first selected blank */
            );
            /** Get the attribute template file type. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ElectrodeEDMOutputBuilder::FileType GetTemplateFileType
            (
            );
            /** Set the attribute template file type. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetTemplateFileType
            (
                const NXString & attributeTemplateName /** attributetemplatename */ 
            );
            /** Set the attribute template file type. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            void SetTemplateFileType
            (
                const char * attributeTemplateName /** attributetemplatename */ 
            );
            /** Populate the attribute template file. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void PopulateAttributeTemplate
            (
                const NXString & attributeTemplateFolder /** attributetemplatefolder */ 
            );
            /** Populate the attribute template file. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            void PopulateAttributeTemplate
            (
                const char * attributeTemplateFolder /** attributetemplatefolder */ 
            );
            /** Analyse the attribute template data. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void AnalyseAttributeTemplateData
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
