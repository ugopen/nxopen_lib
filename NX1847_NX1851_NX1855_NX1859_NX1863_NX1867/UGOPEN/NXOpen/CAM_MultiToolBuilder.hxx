#ifndef NXOpen_CAM_MULTITOOLBUILDER_HXX_INCLUDED
#define NXOpen_CAM_MULTITOOLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_MultiToolBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_NCGroupBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class MultiToolBuilder;
    }
    namespace CAM
    {
        class NCGroupBuilder;
    }
    namespace CAM
    {
        class _MultiToolBuilderBuilder;
        class MultiToolBuilderImpl;
        /** Represents a MultiTool Builder  <br> To create a new instance of this class, use @link NXOpen::CAM::NCGroupCollection::CreateMultiToolBuilder  NXOpen::CAM::NCGroupCollection::CreateMultiToolBuilder @endlink  <br> 
         <br>  Created in NX11.0.1.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  MultiToolBuilder : public NXOpen::CAM::NCGroupBuilder
        {
            private: MultiToolBuilderImpl * m_multitoolbuilder_impl;
            private: friend class  _MultiToolBuilderBuilder;
            protected: MultiToolBuilder();
            public: ~MultiToolBuilder();
            /**Returns  the multi tool description 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXString MultiToolDescription
            (
            );
            /**Sets  the multi tool description 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetMultiToolDescription
            (
                const NXString & name /** the multi tool description */
            );
            /**Sets  the multi tool description 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetMultiToolDescription
            (
                const char * name /** the multi tool description */
            );
            /** Update a library multi-tool from the library 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void UpdateFromLibrary
            (
            );
            /**Returns  the multi-tool library reference 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXString MultiToolLibraryReference
            (
            );
            /**Sets  the multi-tool library reference 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetMultiToolLibraryReference
            (
                const NXString & libraryReference /** the multi-tool library reference */
            );
            /**Sets  the multi-tool library reference 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetMultiToolLibraryReference
            (
                const char * libraryReference /** the multi-tool library reference */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
