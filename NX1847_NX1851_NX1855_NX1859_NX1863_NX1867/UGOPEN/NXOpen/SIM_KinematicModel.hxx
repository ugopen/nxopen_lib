#ifndef NXOpen_SIM_KINEMATICMODEL_HXX_INCLUDED
#define NXOpen_SIM_KINEMATICMODEL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_KinematicModel.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        class KinematicModel;
    }
    class NXObject;
    namespace SIM
    {
        class KinematicAxis;
    }
    namespace SIM
    {
        class _KinematicModelBuilder;
        class KinematicModelImpl;
        /**  @brief Represents the Kinematic Model class object. 

         
                 @code 
                Example how to move machine axes:

                Dim kinematicModel As NXOpen.SIM.KinematicModel
                kinematicModel = kinematicConfigurator.CopyKinematicModel()
                    
                Dim kinematicAxis_X1 As NXOpen.SIM.KinematicAxis
                kinematicAxis_X1 = kinematicModel.FindMachineAxis("X1")

                Dim kinematicAxis_Y1 As NXOpen.SIM.KinematicAxis
                kinematicAxis_Y1 = kinematicModel.FindMachineAxis("Y1")

                Dim kinematicAxis_Z1 As NXOpen.SIM.KinematicAxis
                kinematicAxis_Z1 = kinematicModel.FindMachineAxis("Z1")

                kinematicModel.SetMachineAxisValue(kinematicAxis_X1, 100)
                kinematicModel.SetMachineAxisValue(kinematicAxis_Y1, 150)
                kinematicModel.SetMachineAxisValue(kinematicAxis_Z1, 200)

                'Move the axes X1, Y1, Z1 to the position 100, 150, 200 on the graphic window simultaneously
                kinematicModel.UpdateMachineDisplay()
                ...
                    
                kinematicConfigurator.DeleteKinematicModel(kinematicModel)
                 @endcode 
             <br> Use the @link NXOpen::SIM::KinematicConfigurator NXOpen::SIM::KinematicConfigurator@endlink  class to create a KinematicModel object.  <br> 
         <br>  Created in NX10.0.1.  <br>  
        */
        class NXOPENCPP_SIMEXPORT  KinematicModel : public NXOpen::NXObject
        {
            private: KinematicModelImpl * m_kinematicmodel_impl;
            private: friend class  _KinematicModelBuilder;
            protected: KinematicModel();
            public: ~KinematicModel();
            /** Find the machine axis with the given name.  @return  The axis, if found 
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: NXOpen::SIM::KinematicAxis * FindMachineAxis
            (
                const NXString & name /** The name to look for */
            );
            /** Find the machine axis with the given name.  @return  The axis, if found 
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            NXOpen::SIM::KinematicAxis * FindMachineAxis
            (
                const char * name /** The name to look for */
            );
            /** Sets the machine axis to the given value.
                        User need to call @link NXOpen::SIM::KinematicModel::UpdateMachineDisplay NXOpen::SIM::KinematicModel::UpdateMachineDisplay@endlink  to see the axis moving in the graphic window.
                    
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetMachineAxisValue
            (
                NXOpen::SIM::KinematicAxis * axis /** the machine axis to be moved */,
                double value /** the value */
            );
            /** Update machine display.
                        This call is needed after call @link NXOpen::SIM::KinematicModel::SetMachineAxisValue NXOpen::SIM::KinematicModel::SetMachineAxisValue@endlink  to see the axis moving in the graphic window.
                    
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void UpdateMachineDisplay
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
