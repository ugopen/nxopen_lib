#ifndef NXOpen_ANNOTATIONS_PARTSLISTCONTENTSBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_PARTSLISTCONTENTSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_PartsListContentsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class PartsListContentsBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class TaggedObject;
    namespace Annotations
    {
        class _PartsListContentsBuilderBuilder;
        class PartsListContentsBuilderImpl;

        /// \cond NX_NO_DOC 
        /** Represents a @link Annotations::PartsListContentsBuilder Annotations::PartsListContentsBuilder@endlink .  <br> This is a sub-builder class and cannot be directly instantiated  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  PartsListContentsBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /**The options specify the configuration type level for the parts list */
            public: enum ScopeType
            {
                ScopeTypeAllLevels/**All levels. */,
                ScopeTypeTopLevelOnly/**Top level only. */,
                ScopeTypeLeavesOnly/**Leaves only. */
            };

            /**The options specify the top level assembly type for the parts list */
            public: enum TopLevelAssemblyType
            {
                TopLevelAssemblyTypeChildPart/**Child Part. */ = 1,
                TopLevelAssemblyTypeSubChildPart/**Sub Child Part. */
            };

            private: PartsListContentsBuilderImpl * m_partslistcontentsbuilder_impl;
            private: friend class  _PartsListContentsBuilderBuilder;
            protected: PartsListContentsBuilder();
            public: ~PartsListContentsBuilder();
            /**Returns  the scope specifies the configuration type for parts list 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::PartsListContentsBuilder::ScopeType Scope
            (
            );
            /**Sets  the scope specifies the configuration type for parts list 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetScope
            (
                NXOpen::Annotations::PartsListContentsBuilder::ScopeType scope /** scope */ 
            );
            /**Returns  the top level assembly type for parts list 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::PartsListContentsBuilder::TopLevelAssemblyType TopLevelAssembly
            (
            );
            /**Sets  the top level assembly type for parts list 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTopLevelAssembly
            (
                NXOpen::Annotations::PartsListContentsBuilder::TopLevelAssemblyType topLevelAssembly /** toplevelassembly */ 
            );
            /** Adds member to parts list. If 'Select Subassemblies flag' is true then child components
                    of input assembly will also be added to parts list. If 'Select Subassemblies flag' is false,
                    then only input member will be added to parts list.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void AddMember
            (
                NXOpen::TaggedObject * member /** Object of the member to add.*/,
                bool selectSubassemblies /** Select subassemblies flag */
            );
            /** Removes member from parts list. If 'Remove subassemblies flag' is true then child components
                    of input assembly will also be removed from parts list. If 'Remove subassemblies flag' is false,
                    then only  input member will be removed from parts list.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void RemoveMember
            (
                NXOpen::TaggedObject * member /** Object of the member to remove.*/,
                bool removeSubassemblies /** Remove subassemblies flag */
            );
            /**Returns  the Include Subordinate Design Elements for Parts list in 4GD mode
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool IncludeSubOrdinateDesignElements
            (
            );
            /**Sets  the Include Subordinate Design Elements for Parts list in 4GD mode
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetIncludeSubOrdinateDesignElements
            (
                bool includeSubOrdinateDesignElements /** Include Subordinate Design Elements for Parts list flag */
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
