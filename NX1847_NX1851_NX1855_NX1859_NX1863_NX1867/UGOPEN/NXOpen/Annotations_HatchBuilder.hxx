#ifndef NXOpen_ANNOTATIONS_HATCHBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_HATCHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_HatchBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations.hxx>
#include <NXOpen/Annotations_BoundaryBuilder.hxx>
#include <NXOpen/Annotations_HatchFillSettingsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class HatchBuilder;
    }
    namespace Annotations
    {
        class BoundaryBuilder;
    }
    namespace Annotations
    {
        class HatchFillSettingsBuilder;
    }
    class Builder;
    class NXColor;
    class NXObject;
    class SelectDisplayableObjectList;
    namespace Annotations
    {
        class _HatchBuilderBuilder;
        class HatchBuilderImpl;
        /**
            This class is used to construct the crosshatching that lies within a boundary.
             <br> To create a new instance of this class, use @link NXOpen::Annotations::HatchCollection::CreateHatchBuilder  NXOpen::Annotations::HatchCollection::CreateHatchBuilder @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  HatchBuilder : public NXOpen::Builder
        {
            /** Represents types of hatch objects. Use @link NXOpen::Annotations::HatchBuilder::HatchFillSettings NXOpen::Annotations::HatchBuilder::HatchFillSettings@endlink  instead..
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchBuilder::HatchFillSettings NXOpen::Annotations::HatchBuilder::HatchFillSettings@endlink  instead. <br>  
            */
            public: enum NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchBuilder::HatchFillSettings instead.") AnnotationTypes
            {
                AnnotationTypesCrosshatch/** Crosshatch */,
                AnnotationTypesAreaFill/** Area Fill  */
            };

            private: HatchBuilderImpl * m_hatchbuilder_impl;
            private: friend class  _HatchBuilderBuilder;
            protected: HatchBuilder();
            public: ~HatchBuilder();
            /**Returns  the type of hatch object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::HatchBuilder::AnnotationTypes AnnotationType
            (
            );
            /**Sets  the type of hatch object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAnnotationType
            (
                NXOpen::Annotations::HatchBuilder::AnnotationTypes type /** type */ 
            );
            /**Returns  the boundary 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::BoundaryBuilder * Boundary
            (
            );
            /**Returns  the select annotation to exclude 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * AnnotationToExclude
            (
            );
            /**Returns  the exclude text.  This is not used if @link NXOpen::Annotations::BoundaryBuilder::SelectionMethodCurves NXOpen::Annotations::BoundaryBuilder::SelectionMethodCurves@endlink  is set. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool AutomaticallyExcludeText
            (
            );
            /**Sets  the exclude text.  This is not used if @link NXOpen::Annotations::BoundaryBuilder::SelectionMethodCurves NXOpen::Annotations::BoundaryBuilder::SelectionMethodCurves@endlink  is set. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAutomaticallyExcludeText
            (
                bool excludeText /** excludetext */ 
            );
            /**Returns  the HatchFillSetting 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::HatchFillSettingsBuilder * HatchFillSettings
            (
            );
            /**Returns  the crosshatch file.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") NXString CrosshatchFile
            (
            );
            /**Sets  the crosshatch file.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") void SetCrosshatchFile
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the crosshatch file.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void SetCrosshatchFile
            (
                const char * filename /** filename */ 
            );
            /**Returns  the pattern.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") NXString Pattern
            (
            );
            /**Sets  the pattern.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") void SetPattern
            (
                const NXString & identifier /** identifier */ 
            );
            /**Sets  the pattern.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void SetPattern
            (
                const char * identifier /** identifier */ 
            );
            /**Returns  the distance.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") double Distance
            (
            );
            /**Sets  the distance.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") void SetDistance
            (
                double distance /** distance */ 
            );
            /**Returns  the area fill material.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") NXOpen::Annotations::AreaFillMaterial Material
            (
            );
            /**Sets  the area fill material.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") void SetMaterial
            (
                NXOpen::Annotations::AreaFillMaterial areaFillMaterial /** areafillmaterial */ 
            );
            /**Returns  the scale.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") double Scale
            (
            );
            /**Sets  the scale.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") void SetScale
            (
                double scale /** scale */ 
            );
            /**Returns  the angle.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") double Angle
            (
            );
            /**Sets  the angle.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") void SetAngle
            (
                double angle /** angle */ 
            );
            /**Returns  the areafill angle.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") double AreafillAngle
            (
            );
            /**Sets  the areafill angle.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") void SetAreafillAngle
            (
                double angle /** angle */ 
            );
            /**Returns  the color.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") NXOpen::NXColor * Color
            (
            );
            /**Sets  the color.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") void SetColor
            (
                NXOpen::NXColor * color /** color */ 
            );
            /**Returns  the width.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") NXOpen::Annotations::LineWidth Width
            (
            );
            /**Sets  the width.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") void SetWidth
            (
                NXOpen::Annotations::LineWidth width /** width */ 
            );
            /**Returns  the tolerance.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") double Tolerance
            (
            );
            /**Sets  the tolerance.
             <br>  @deprecated Deprecated in NX7.5.0.  Use @link NXOpen::Annotations::HatchFillSettingsBuilder NXOpen::Annotations::HatchFillSettingsBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NX_DEPRECATED("Deprecated in NX7.5.0.  Use NXOpen::Annotations::HatchFillSettingsBuilder instead.") void SetTolerance
            (
                double tolerance /** tolerance */ 
            );
            /** Get margin percent of a annotation
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double GetMarginPercent
            (
                NXOpen::NXObject * annotation /** annotation or DraftingCombinedInstance*/
            );
            /** Set margin percent to a annotation
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetMarginPercent
            (
                NXOpen::NXObject * annotation /** annotation or DraftingCombinedInstance*/,
                double marginpercent /** text islands value*/
            );
            /** Set number of direction map elements to the annotation
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetNumCurrentDirectionMapElements
            (
                int numCurrentDirectionMapElement /** numcurrentdirectionmapelement */ 
            );
            /** Set direction of a curve to the annotation 
                        The number of diection map elements need to specify before to 
                        the direction of the curve elements to the annotation
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetCurveDirection
            (
                NXOpen::NXObject * curveTag /** curvetag */ ,
                int curveDirection /** curvedirection */ 
            );
            /** Set directions of a curve to the annotation 
                        The number of diection map elements need to specify before to 
                        the direction of the curve elements to the annotation
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetSectionCurveDirections
            (
                NXOpen::NXObject * section /** section */ ,
                NXOpen::NXObject * curve /** curve */ ,
                const std::vector<int> & curveDirections /** array of directions for the curve */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
