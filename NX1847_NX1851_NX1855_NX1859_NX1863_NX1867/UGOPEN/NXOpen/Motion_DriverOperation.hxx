#ifndef NXOpen_MOTION_DRIVEROPERATION_HXX_INCLUDED
#define NXOpen_MOTION_DRIVEROPERATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_DriverOperation.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class DriverOperation;
    }
    class Expression;
    namespace Motion
    {
        class PMDCMotor;
    }
    namespace Motion
    {
        class SelectControlPort;
    }
    namespace Motion
    {
        class SelectFieldData;
    }
    namespace Motion
    {
        class SignalChart;
    }
    class NXObject;
    namespace Motion
    {
        class _DriverOperationBuilder;
        class DriverOperationImpl;
        /** Represents a @link NXOpen::Motion::DriverOperation NXOpen::Motion::DriverOperation@endlink  
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  DriverOperation : public NXOpen::TaggedObject
        {
            /** Driver operation type */
            public: enum Type
            {
                TypeUndefined/** Undefined */,
                TypePolynomial/** Polynomial */,
                TypeHarmonic/** Harmonic */,
                TypeFunction/** Function */,
                TypeArticulation/** Articulation */,
                TypeMotor/** Motor */,
                TypeControl/** Control */,
                TypeProfile/** Profile */
            };

            /** Integration type */
            public: enum IntegrationType
            {
                IntegrationTypeDisplacement/** Displacement */,
                IntegrationTypeVelocity/** Velocity */,
                IntegrationTypeAcceleration/** Acceleration */
            };

            private: DriverOperationImpl * m_driveroperation_impl;
            private: friend class  _DriverOperationBuilder;
            protected: DriverOperation();
            public: ~DriverOperation();
            /**Returns  the type option 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::DriverOperation::Type TypeOption
            (
            );
            /**Sets  the type option 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetTypeOption
            (
                NXOpen::Motion::DriverOperation::Type typeOption /** typeoption */ 
            );
            /**Returns  the integration type option 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::DriverOperation::IntegrationType IntegrationTypeOption
            (
            );
            /**Sets  the integration type option 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetIntegrationTypeOption
            (
                NXOpen::Motion::DriverOperation::IntegrationType integrationTypeOption /** integrationtypeoption */ 
            );
            /**Returns  the function  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObject * Function
            (
            );
            /**Sets  the function  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetFunction
            (
                NXOpen::NXObject * function /** function */ 
            );
            /**Returns  the motor  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::PMDCMotor * Motor
            (
            );
            /**Sets  the motor  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetMotor
            (
                NXOpen::Motion::PMDCMotor * motor /** motor */ 
            );
            /**Returns  the signal chart  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::SignalChart * SignalChart
            (
            );
            /**Sets  the signal chart  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetSignalChart
            (
                NXOpen::Motion::SignalChart * signalChart /** signal chart */ 
            );
            /**Returns  the displacement expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * DisplacementExpression
            (
            );
            /**Returns  the velocity expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * VelocityExpression
            (
            );
            /**Returns  the acceleration expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * AccelerationExpression
            (
            );
            /**Returns  the jerk expression 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * JerkExpression
            (
            );
            /**Returns  the amplitude expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * AmplitudeExpression
            (
            );
            /**Returns  the frequency expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FrequencyExpression
            (
            );
            /**Returns  the phase angle expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PhaseAngleExpression
            (
            );
            /**Returns  the harmonic displacement expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * HarmonicDisplacementExpression
            (
            );
            /**Returns  the initial displacement expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * InitialDisplacementExpression
            (
            );
            /**Returns  the initial velocity expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * InitialVelocityExpression
            (
            );
            /**Returns  the control port
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectControlPort * ControlPort
            (
            );
            /**Returns  the profile
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectFieldData * Profile
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
