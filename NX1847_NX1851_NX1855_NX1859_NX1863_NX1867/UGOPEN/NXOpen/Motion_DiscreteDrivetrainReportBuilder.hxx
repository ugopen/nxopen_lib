#ifndef NXOpen_MOTION_DISCRETEDRIVETRAINREPORTBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_DISCRETEDRIVETRAINREPORTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_DiscreteDrivetrainReportBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Motion_LinkAttachmentData.hxx>
#include <NXOpen/Motion_MotionBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class DiscreteDrivetrainReportBuilder;
    }
    class Expression;
    namespace Motion
    {
        class LinkAttachmentData;
    }
    namespace Motion
    {
        class MotionBuilder;
    }
    class SelectNXObjectList;
    namespace Motion
    {
        class _DiscreteDrivetrainReportBuilderBuilder;
        class DiscreteDrivetrainReportBuilderImpl;
        /** Represents a @link Motion::DiscreteDrivetrainReport Motion::DiscreteDrivetrainReport@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Motion::DiscreteDrivetrainBuilder::CreateDiscreteDrivetrainReportBuilder  NXOpen::Motion::DiscreteDrivetrainBuilder::CreateDiscreteDrivetrainReportBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  DiscreteDrivetrainReportBuilder : public NXOpen::Motion::MotionBuilder
        {
            /** Discrete Drivetrain Report type. */
            public: enum ReportType
            {
                ReportTypeSpan/** span */ ,
                ReportTypeSpatial/** spatial */ 
            };

            /** Discrete Drivetrain Report shape type. */
            public: enum ShapeType
            {
                ShapeTypeBox/** box */ ,
                ShapeTypeCylinder/** cylinder */ 
            };

            /** Discrete Drivetrain Report element type. */
            public: enum ElementTypeOption
            {
                ElementTypeOptionAnalyticalContact/** analytical contact */ ,
                ElementTypeOptionBushing/** bushing */ ,
                ElementTypeOptionSpring/** spring */ ,
                ElementTypeOptionDamper/** damper */ ,
                ElementTypeOptionBeamForce/** beam force */ 
            };

            private: DiscreteDrivetrainReportBuilderImpl * m_discretedrivetrainreportbuilder_impl;
            private: friend class  _DiscreteDrivetrainReportBuilderBuilder;
            protected: DiscreteDrivetrainReportBuilder();
            public: ~DiscreteDrivetrainReportBuilder();
            /**Returns  the discrete drivetrain report name. Must be unique across all motion elements. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString Name
            (
            );
            /**Sets  the discrete drivetrain report name. Must be unique across all motion elements. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the discrete drivetrain report name. Must be unique across all motion elements. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the type of discrete drivetrain report. Span is the default value. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::DiscreteDrivetrainReportBuilder::ReportType Type
            (
            );
            /**Sets  the type of discrete drivetrain report. Span is the default value. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetType
            (
                NXOpen::Motion::DiscreteDrivetrainReportBuilder::ReportType type /** type */ 
            );
            /**Returns  the attachement for the discrete drivetrain report. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::LinkAttachmentData * Attachment
            (
            );
            /**Returns  the shape type of discrete drivetrain report. Box is the default value. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::DiscreteDrivetrainReportBuilder::ShapeType Shape
            (
            );
            /**Sets  the shape type of discrete drivetrain report. Box is the default value. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetShape
            (
                NXOpen::Motion::DiscreteDrivetrainReportBuilder::ShapeType type /** type */ 
            );
            /**Returns  the X legnth defined for the discrete drivetrain report. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * XLength
            (
            );
            /**Returns  the Y legnth defined for the discrete drivetrain report. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * YLength
            (
            );
            /**Returns  the Z legnth defined for the discrete drivetrain report. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * ZLength
            (
            );
            /**Returns  the radius defined for the discrete drivetrain report. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * Radius
            (
            );
            /**Returns  the depth defined for the discrete drivetrain report. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * Depth
            (
            );
            /**Returns  the start angle defined for the discrete drivetrain report. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * StartAngle
            (
            );
            /**Returns  the end angle defined for the discrete drivetrain report. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * EndAngle
            (
            );
            /**Returns  the element type of discrete drivetrain report. Analytical contacts is the default value. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::DiscreteDrivetrainReportBuilder::ElementTypeOption ElementType
            (
            );
            /**Sets  the element type of discrete drivetrain report. Analytical contacts is the default value. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetElementType
            (
                NXOpen::Motion::DiscreteDrivetrainReportBuilder::ElementTypeOption type /** type */ 
            );
            /**Returns  the analytical contacts selection. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::SelectNXObjectList * AnalyticalContacts
            (
            );
            /**Returns  the bushings selection. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::SelectNXObjectList * Bushings
            (
            );
            /**Returns  the springs selection. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::SelectNXObjectList * Springs
            (
            );
            /**Returns  the dampers selection. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::SelectNXObjectList * Dampers
            (
            );
            /**Returns  the beam forces selection. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::SelectNXObjectList * BeamForces
            (
            );
            /**Returns  the number of bins 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: int NumberOfBins
            (
            );
            /**Sets  the number of bins 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetNumberOfBins
            (
                int numberOfBins /** numberofbins */ 
            );
            /**Returns  the flag of show visualization 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool ShowVisualization
            (
            );
            /**Sets  the flag of show visualization 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetShowVisualization
            (
                bool showVisualization /** showvisualization */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
