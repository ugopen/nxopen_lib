#ifndef NXOpen_WELD_EDGEPREPVALUESBUILDER_HXX_INCLUDED
#define NXOpen_WELD_EDGEPREPVALUESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_EdgePrepValuesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Weld_JointExitBuilder.hxx>
#include <NXOpen/libnxopencpp_weld_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Weld
    {
        class EdgePrepValuesBuilder;
    }
    class Builder;
    class Curve;
    namespace Features
    {
        class Feature;
    }
    class SelectCurve;
    class SelectCurveList;
    namespace Weld
    {
        class JointExitBuilder;
    }
    namespace Weld
    {
        class _EdgePrepValuesBuilderBuilder;
        class EdgePrepValuesBuilderImpl;
        /** Used to view or edit the values used to define the welding joint and edge preparation.  <br> This sub feature is created via the main feature builder.  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        JointExitBuilder.NumberSegments </td> <td> 
         
        2 </td> </tr> 

        <tr><td> 
         
        JointExitBuilder.RootOpening </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        JointExitBuilder.SplitAngle </td> <td> 
         
        5.0 </td> </tr> 

        <tr><td> 
         
        RootOpening </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_WELDEXPORT  EdgePrepValuesBuilder : public NXOpen::Builder
        {
            /** Option to indicate how the values are to be used. */
            public: enum Option
            {
                OptionEntered/** Use the values entered as edge prep values. */,
                OptionComputed/** Use the computed values as edge prep values. */
            };

            /** Option to indicate how the values are to be updated. */
            public: enum Apply
            {
                ApplyToAllValues/** Update all values of each selected joint. */,
                ApplyToChangedValuesOnly/** Update only the changed values to each selected joint. */
            };

            private: EdgePrepValuesBuilderImpl * m_edgeprepvaluesbuilder_impl;
            private: friend class  _EdgePrepValuesBuilderBuilder;
            protected: EdgePrepValuesBuilder();
            public: ~EdgePrepValuesBuilder();
            /**Returns  the welding joint curves. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectCurveList * Joint
            (
            );
            /**Returns  the selected segment. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectCurve * ValueSegment
            (
            );
            /**Returns  the root opening 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double RootOpening
            (
            );
            /**Sets  the root opening 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetRootOpening
            (
                double rootOpening /** rootopening */ 
            );
            /**Returns  the indication that the edges are prepared for welding 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool EdgesPrepared
            (
            );
            /**Sets  the indication that the edges are prepared for welding 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetEdgesPrepared
            (
                bool prepared /** prepared */ 
            );
            /**Returns  the user defined value for primary thickness 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : None */
            public: double PrimaryThicknessUser
            (
            );
            /**Sets  the user defined value for primary thickness 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetPrimaryThicknessUser
            (
                double thickness /** thickness */ 
            );
            /**Returns  the user defined value for secondary thickness 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : None */
            public: double SecondaryThicknessUser
            (
            );
            /**Sets  the user defined value for secondary thickness 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetSecondaryThicknessUser
            (
                double thickness /** thickness */ 
            );
            /**Returns  the values option which indicates whether the entered or computed values should be used. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Weld::EdgePrepValuesBuilder::Option ValuesOption
            (
            );
            /**Sets  the values option which indicates whether the entered or computed values should be used. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetValuesOption
            (
                NXOpen::Weld::EdgePrepValuesBuilder::Option option /** option */ 
            );
            /**Returns  the apply values option which indicates whether the all the values of each selected joint should be updated or just the values that were changed in the @link NXOpen::Weld::JointExitBuilder NXOpen::Weld::JointExitBuilder@endlink . 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Weld::EdgePrepValuesBuilder::Apply ValuesApplyOption
            (
            );
            /**Sets  the apply values option which indicates whether the all the values of each selected joint should be updated or just the values that were changed in the @link NXOpen::Weld::JointExitBuilder NXOpen::Weld::JointExitBuilder@endlink . 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetValuesApplyOption
            (
                NXOpen::Weld::EdgePrepValuesBuilder::Apply option /** option */ 
            );
            /** Recreates the curves after changes to edge prep values. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void RecreateCurves
            (
            );
            /** Deletes the @link NXOpen::Weld::JointExitBuilder NXOpen::Weld::JointExitBuilder@endlink . 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void DeleteExitBuilder
            (
            );
            /** Reads the edge prep values from the feature. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void ReadEdgePrepValues
            (
                NXOpen::Features::Feature * feature /** Welding Joint feature */
            );
            /** Reads the edge prep values from joint curve. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void ReadEdgePrepValuesFromCurve
            (
                NXOpen::Curve * curve /** Welding Joint curve */
            );
            /**Returns  the @link NXOpen::Weld::JointExitBuilder NXOpen::Weld::JointExitBuilder@endlink . 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: NXOpen::Weld::JointExitBuilder * JointExitBuilder
            (
            );
            /** Creates the path to be used for the limits.  @return  Segment. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Curve * GetSegmentFromIndex
            (
                int value /** index of curve. */
            );
            /**Returns  the indication that the modifications will be applied to a Managed Attribute Group, not the feature 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: bool EditingManagedAttributeGroup
            (
            );
            /**Sets  the indication that the modifications will be applied to a Managed Attribute Group, not the feature 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetEditingManagedAttributeGroup
            (
                bool editingManagedAttributeGroup /** editingmanagedattributegroup */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
