#ifndef NXOpen_DISPLAY_SELPREF_HXX_INCLUDED
#define NXOpen_DISPLAY_SELPREF_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_SelPref.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class SelPref;
    }
    class Builder;
    namespace Display
    {
        class _SelPrefBuilder;
        class SelPrefImpl;
        /**
            Represents a @link NXOpen::Display::SelPref NXOpen::Display::SelPref@endlink 
             <br> To obtain a instance of this class use @link Display::SelPrefCollection::CreateSelPref Display::SelPrefCollection::CreateSelPref@endlink   <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  SelPref : public NXOpen::Builder
        {
            /** Represents the mouse gesture type */
            public: enum MouseGesture
            {
                MouseGestureLasso/** multi-select using lasso */,
                MouseGestureRectangle/** multi-select using rectangle */,
                MouseGestureCircle/** multi-select using circle */
            };

            /** Represents the selection rule type */
            public: enum SelectionRule
            {
                SelectionRuleInside/** multi-select rule inside */,
                SelectionRuleOutside/** multi-select rule outside */,
                SelectionRuleCrossing/** multi-select rule crossing */,
                SelectionRuleInsideCrossing/** multi-select rule inside or crossing */,
                SelectionRuleOutsideCrossing/** multi-select rule outside or crossing*/
            };

            /** Represents the shaded views type */
            public: enum ShadedViews
            {
                ShadedViewsHighlightEdges/** highlight face by edges */,
                ShadedViewsHighlightFaces/** highlight face by face */
            };

            /** Represents the face analysis views type */
            public: enum FaceAnalysisViews
            {
                FaceAnalysisViewsHighlightEdges/** highlight face by edges */,
                FaceAnalysisViewsHighlightFaces/** highlight face by face */
            };

            /** Represents the selection radius type */
            public: enum SelectionRadius
            {
                SelectionRadiusMedium/** selection ball size medium */,
                SelectionRadiusSmall/** selection ball size small */,
                SelectionRadiusLarge/** selection ball size large */
            };

            /** Represents the chaining method type */
            public: enum Method
            {
                MethodSimple/** chaining method simple */,
                MethodWcs/** chaining method wcs */,
                MethodWcsLeft/** chaining method wcs left */,
                MethodWcsRight/** chaining method wcs right */
            };

            private: SelPrefImpl * m_selpref_impl;
            private: friend class  _SelPrefBuilder;
            protected: SelPref();
            public: ~SelPref();
            /**Returns  the mouse gesture type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::SelPref::MouseGesture MouseGestureType
            (
            );
            /**Sets  the mouse gesture type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMouseGestureType
            (
                NXOpen::Display::SelPref::MouseGesture mouseGestureType /** mousegesturetype */ 
            );
            /**Returns  the selection rule type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::SelPref::SelectionRule SelectionRuleType
            (
            );
            /**Sets  the selection rule type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSelectionRuleType
            (
                NXOpen::Display::SelPref::SelectionRule selectionRuleType /** selectionruletype */ 
            );
            /**Returns  the highlight selection on rollover toggle 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool HighlightSelectionOnRolloverToggle
            (
            );
            /**Sets  the highlight selection on rollover toggle 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetHighlightSelectionOnRolloverToggle
            (
                bool highlightSelectionOnRolloverToggle /** highlightselectiononrollovertoggle */ 
            );
            /**Returns  the tooltip on rollover toggle 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool TooltipOnRolloverToggle
            (
            );
            /**Sets  the tooltip on rollover toggle 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTooltipOnRolloverToggle
            (
                bool tooltipOnRolloverToggle /** tooltiponrollovertoggle */ 
            );
            /**Returns  the highlight original
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool HighlightOriginalToggle
            (
            );
            /**Sets  the highlight original
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetHighlightOriginalToggle
            (
                bool highlightOriginalToggle /** highlightoriginaltoggle */ 
            );
            /**Returns  the rollover delay 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int RolloverDelay
            (
            );
            /**Sets  the rollover delay 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRolloverDelay
            (
                int rolloverDelay /** rolloverdelay */ 
            );
            /**Returns  the highlight with thick width toggle 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool HighlightWithThickWidthToggle
            (
            );
            /**Sets  the highlight with thick width toggle 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetHighlightWithThickWidthToggle
            (
                bool highlightWithThickWidthToggle /** highlightwiththickwidthtoggle */ 
            );
            /**Returns  the highlight hidden edges toggle 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool HighlightHiddenEdgesToggle
            (
            );
            /**Sets  the highlight hidden edges toggle 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetHighlightHiddenEdgesToggle
            (
                bool highlightHiddenEdgesToggle /** highlighthiddenedgestoggle */ 
            );
            /**Returns  the shaded views type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::SelPref::ShadedViews ShadedViewsType
            (
            );
            /**Sets  the shaded views type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShadedViewsType
            (
                NXOpen::Display::SelPref::ShadedViews shadedViewsType /** shadedviewstype */ 
            );
            /**Returns  the face analysis views type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::SelPref::FaceAnalysisViews FaceAnalysisViewsType
            (
            );
            /**Sets  the face analysis views type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFaceAnalysisViewsType
            (
                NXOpen::Display::SelPref::FaceAnalysisViews faceAnalysisViewsType /** faceanalysisviewstype */ 
            );
            /**Returns  the quick pick on delay toggle 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool QuickPickOnDelayToggle
            (
            );
            /**Sets  the quick pick on delay toggle 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetQuickPickOnDelayToggle
            (
                bool quickPickOnDelayToggle /** quickpickondelaytoggle */ 
            );
            /**Returns  the delay 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int Delay
            (
            );
            /**Sets  the delay 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDelay
            (
                int delay /** delay */ 
            );
            /**Returns  the quick pick lock dialog position 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool QuickPickLockDialogPosition
            (
            );
            /**Sets  the quick pick lock dialog position 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetQuickPickLockDialogPosition
            (
                bool quickPickLockDialogPosition /** quickpicklockdialogposition */ 
            );
            /**Returns  the selection radius type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::SelPref::SelectionRadius SelectionRadiusType
            (
            );
            /**Sets  the selection radius type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSelectionRadiusType
            (
                NXOpen::Display::SelPref::SelectionRadius selectionRadiusType /** selectionradiustype */ 
            );
            /**Returns  the show crosshairs toggle 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowCrosshairsToggle
            (
            );
            /**Sets  the show crosshairs toggle 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShowCrosshairsToggle
            (
                bool showCrosshairsToggle /** showcrosshairstoggle */ 
            );
            /**Returns  the tolerance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double Tolerance
            (
            );
            /**Sets  the tolerance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTolerance
            (
                double tolerance /** tolerance */ 
            );
            /**Returns  the method type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::SelPref::Method MethodType
            (
            );
            /**Sets  the method type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMethodType
            (
                NXOpen::Display::SelPref::Method methodType /** methodtype */ 
            );
            /**Returns  the tangency tolerance 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: double TangencyTolerance
            (
            );
            /**Sets  the tangency tolerance 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: void SetTangencyTolerance
            (
                double tangencyTolerance /** tangencytolerance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
