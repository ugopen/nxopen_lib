#ifndef NXOpen_GEOMETRICUTILITIES_REDUCESURFACERADIUSBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_REDUCESURFACERADIUSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_ReduceSurfaceRadiusBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_OnPathDimensionBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class ReduceSurfaceRadiusBuilder;
    }
    class Builder;
    namespace GeometricUtilities
    {
        class OnPathDimensionBuilder;
    }
    namespace GeometricUtilities
    {
        class ReduceSurfaceRadiusFaceGroupBuilderList;
    }
    class ScCollector;
    namespace GeometricUtilities
    {
        class _ReduceSurfaceRadiusBuilderBuilder;
        class ReduceSurfaceRadiusBuilderImpl;
        /** Reduce Surface Radius Builder of Geometric Utilities. This builder's Commit can produce more than one object, 
                the GetCommittedObjects can be used to get the objects.  <br> To create a new instance of this class, use @link NXOpen::GeometricUtilities::CAMDataPrepManager::CreateReduceSurfaceRadiusBuilder  NXOpen::GeometricUtilities::CAMDataPrepManager::CreateReduceSurfaceRadiusBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        HighRadius </td> <td> 
         
        10.0 (millimeters part), 0.4 (inches part) </td> </tr> 

        <tr><td> 
         
        LowRadius </td> <td> 
         
        0.5 (millimeters part), 0.02 (inches part) </td> </tr> 

        <tr><td> 
         
        PercentReduction </td> <td> 
         
        100 </td> </tr> 

        <tr><td> 
         
        ReduceValueType </td> <td> 
         
        Percentage </td> </tr> 

        <tr><td> 
         
        TargetReduction </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ValueReduction </td> <td> 
         
        0.1 </td> </tr> 

        </table>  

         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  ReduceSurfaceRadiusBuilder : public NXOpen::Builder
        {
            /** Specify the face selection type. There are three types: Select Faces by Radius, Select Faces by Chain and Single Selection. */
            public: enum FaceSelectionSpecification
            {
                FaceSelectionSpecificationRadius/** radius */ ,
                FaceSelectionSpecificationChain/** chain */ ,
                FaceSelectionSpecificationSelect/** select */ 
            };

            /** Specify the reduction method. There are three types: percentage reduction, reduction value and target value. */
            public: enum ReduceValueTypeSpecification
            {
                ReduceValueTypeSpecificationPercentage/** percentage */ ,
                ReduceValueTypeSpecificationValue/** value */ ,
                ReduceValueTypeSpecificationDelta/** delta */ 
            };

            /** Specify three ways to do preview.
                        FaceGroup: Preview all list items.
                        SingleChainInGroup: Preview selected list item.
                        SingleChain: Preview face chain which is selected by "Select Faces by Chain" and "Single Face" */
            public: enum ReducedFaceTypeSpecification
            {
                ReducedFaceTypeSpecificationFaceGroup/** Preview all items in face group list when using "Select Faces by Radius" to select input objects. */,
                ReducedFaceTypeSpecificationSingleChainInGroup/** Preview single item in face group list when using "Select Faces by Radius" to select input objects. */,
                ReducedFaceTypeSpecificationSingleChain/** Preview single chain when using "Select Faces by Chain" and "Single Selection" to select input objects. */
            };

            private: ReduceSurfaceRadiusBuilderImpl * m_reducesurfaceradiusbuilder_impl;
            private: friend class  _ReduceSurfaceRadiusBuilderBuilder;
            protected: ReduceSurfaceRadiusBuilder();
            public: ~ReduceSurfaceRadiusBuilder();
            /**Returns  the selected entities for performing the radius reduction operation, which selected by "Select Faces by Chain" and "Single Selection" 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SelectChain
            (
            );
            /**Returns  the start position of reduced sheet body 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * OnPathDimStart
            (
            );
            /**Returns  the end position of reduced sheet body 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * OnPathDimEnd
            (
            );
            /**Returns  the selected entities for performing the radius reduction operation, which selected by "Select Faces by Radius" 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SelectFace
            (
            );
            /**Returns  the direction which specifies concave face respect to the body face normal 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool Direction
            (
            );
            /**Sets  the direction which specifies concave face respect to the body face normal 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetDirection
            (
                bool direction /** direction */ 
            );
            /**Returns  the low radius which specifies lower limit to filter out all qualified faces 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double LowRadius
            (
            );
            /**Sets  the low radius which specifies lower limit to filter out all qualified faces 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetLowRadius
            (
                double lowRadius /** lowradius */ 
            );
            /**Returns  the high radius which specifies lower limit to filter out all qualified faces 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double HighRadius
            (
            );
            /**Sets  the high radius which specifies lower limit to filter out all qualified faces 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetHighRadius
            (
                double highRadius /** highradius */ 
            );
            /**Returns  the list containing the face chains as input objects used to do reduction.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ReduceSurfaceRadiusFaceGroupBuilderList * FaceGroupList
            (
            );
            /**Returns  the type of reduced value which results surface shape 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ReduceSurfaceRadiusBuilder::ReduceValueTypeSpecification ReduceValueType
            (
            );
            /**Sets  the type of reduced value which results surface shape 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetReduceValueType
            (
                NXOpen::GeometricUtilities::ReduceSurfaceRadiusBuilder::ReduceValueTypeSpecification reduceValueType /** reducevaluetype */ 
            );
            /**Returns  the value of percentage reduction method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double PercentReduction
            (
            );
            /**Sets  the value of percentage reduction method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetPercentReduction
            (
                double percentReduction /** percentreduction */ 
            );
            /**Returns  the value of reduction value method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double ValueReduction
            (
            );
            /**Sets  the value of reduction value method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetValueReduction
            (
                double valueReduction /** valuereduction */ 
            );
            /**Returns  the target value method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double TargetReduction
            (
            );
            /**Sets  the target value method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetTargetReduction
            (
                double targetReduction /** targetreduction */ 
            );
            /**Returns  the position tolerance between two faces connection 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double PositionTolerance
            (
            );
            /**Sets  the position tolerance between two faces connection 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetPositionTolerance
            (
                double positionTolerance /** positiontolerance */ 
            );
            /**Returns  the tangent tolerance between two faces connection 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double TangentTolerance
            (
            );
            /**Sets  the tangent tolerance between two faces connection 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetTangentTolerance
            (
                double tangentTolerance /** tangenttolerance */ 
            );
            /**Returns  the type of performing the radius reduction preview 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ReduceSurfaceRadiusBuilder::ReducedFaceTypeSpecification ReducedFaceType
            (
            );
            /**Sets  the type of performing the radius reduction preview 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetReducedFaceType
            (
                NXOpen::GeometricUtilities::ReduceSurfaceRadiusBuilder::ReducedFaceTypeSpecification reducedFaceType /** reducedfacetype */ 
            );
            /**Returns  the index of list item 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: int IndexListItem
            (
            );
            /**Sets  the index of list item 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetIndexListItem
            (
                int index /** index */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
