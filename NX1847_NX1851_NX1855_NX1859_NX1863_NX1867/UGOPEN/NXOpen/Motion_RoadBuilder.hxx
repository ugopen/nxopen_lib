#ifndef NXOpen_MOTION_ROADBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_ROADBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_RoadBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/ExternalFileReferenceAdapter.hxx>
#include <NXOpen/Motion.hxx>
#include <NXOpen/Motion_Road.hxx>
#include <NXOpen/Motion_SegmentBuilder.hxx>
#include <NXOpen/IExternalFileReferencer.hxx>
#include <NXOpen/Motion_MotionBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class RoadBuilder;
    }
    class CoordinateSystem;
    class Expression;
    class ExternalFileReferenceAdapter;
    class IExternalFileReferencer;
    namespace Motion
    {
        class MotionBuilder;
    }
    namespace Motion
    {
        class MotionFunction;
    }
    namespace Motion
    {
        class Road;
    }
    namespace Motion
    {
        class SegmentBuilder;
    }
    namespace Motion
    {
        class SegmentBuilderList;
    }
    namespace Motion
    {
        class SelectFieldData;
    }
    namespace Motion
    {
        class SelectLink;
    }
    class NXColor;
    class Point;
    namespace Motion
    {
        class _RoadBuilderBuilder;
        class RoadBuilderImpl;
        /**
            Represents a @link NXOpen::Motion::RoadBuilder NXOpen::Motion::RoadBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::Motion::RoadCollection::CreateRoadBuilder  NXOpen::Motion::RoadCollection::CreateRoadBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  RoadBuilder : public NXOpen::Motion::MotionBuilder, public virtual NXOpen::IExternalFileReferencer
        {
            /** type attribute of the road */
            public: enum TypeChoices
            {
                TypeChoicesSurface/** Surface */,
                TypeChoicesPath/** Path */
            };

            /** data type attribute of the surface data */
            public: enum SurfaceDatatypeChoices
            {
                SurfaceDatatypeChoicesSplineCurve/** Function */,
                SurfaceDatatypeChoicesSplineSurface/** Spline Surface defined by 3D Profile */,
                SurfaceDatatypeChoicesRsm1000/** RSM1000 */,
                SurfaceDatatypeChoicesRsm1002/** RSM1002 */,
                SurfaceDatatypeChoicesRsm2000/** RSM2000 */,
                SurfaceDatatypeChoicesRsm3000/** RSM3000 */,
                SurfaceDatatypeChoicesOpenCRG/** OpenCRG */,
                SurfaceDatatypeChoicesRoadDataFile/** Road Data File */,
                SurfaceDatatypeChoicesProfile2D/** Profile 2D */
            };

            /** data type attribute of the path data */
            public: enum PathDatatypeChoices
            {
                PathDatatypeChoicesSplineCurves/** Spline Curves */,
                PathDatatypeChoicesSegments/** Segments */,
                PathDatatypeChoicesFileImport/** FileImport */
            };

            /** data type attribute of the spline data */
            public: enum SplineDatatypeChoices
            {
                SplineDatatypeChoicesFunction/** Function */,
                SplineDatatypeChoicesProfile2D/** Profile 2D */
            };

            /** the enum for external file reference object id of road */
            public: enum ReferenceObjectId
            {
                ReferenceObjectIdSurfaceFile/** surface file */ ,
                ReferenceObjectIdPathFile/** path file */ 
            };

            private: RoadBuilderImpl * m_roadbuilder_impl;
            private: friend class  _RoadBuilderBuilder;
            protected: RoadBuilder();
            public: ~RoadBuilder();
            /**Returns  the name of the road object selected from motion objects 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString Name
            (
            );
            /**Sets  the name of the road object selected from motion objects 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name of the road object selected from motion objects 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the road object selected from motion objects 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::Road * RoadObject
            (
            );
            /**Sets  the road object selected from motion objects 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetRoadObject
            (
                NXOpen::Motion::Road * roadobject /** roadobject */ 
            );
            /**Returns  the road type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::RoadBuilder::TypeChoices RoadType
            (
            );
            /**Sets  the road type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetRoadType
            (
                NXOpen::Motion::RoadBuilder::TypeChoices roadtype /** roadtype */ 
            );
            /**Returns  the optional motion body object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectLink * Link
            (
            );
            /**Returns   @brief the override state of the action motion body 

             
                        It should only be used for occurrences
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState LinkOvrCtrl
            (
            );
            /**Sets   @brief the override state of the action motion body 

             
                        It should only be used for occurrences
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetLinkOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the reference point of the optional motion body object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Point * ReferencePoint
            (
            );
            /**Sets  the reference point of the optional motion body object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetReferencePoint
            (
                NXOpen::Point * referencePoint /** referencepoint */ 
            );
            /**Returns   @brief the override state of the action point 

             
                        It should only be used for occurrences
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState ReferencePointOvrCtrl
            (
            );
            /**Sets   @brief the override state of the action point 

             
                        It should only be used for occurrences
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetReferencePointOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the coordinate system of the optional motion body object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::CoordinateSystem * Csys
            (
            );
            /**Sets  the coordinate system of the optional motion body object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCsys
            (
                NXOpen::CoordinateSystem * csys /** csys */ 
            );
            /**Returns   @brief the override state of the coordinate system 

             
                        It should only be used for occurrences
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState CsysOvrCtrl
            (
            );
            /**Sets   @brief the override state of the coordinate system 

             
                        It should only be used for occurrences
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCsysOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the surface data type of the road object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::RoadBuilder::SurfaceDatatypeChoices SurfaceDatatype
            (
            );
            /**Sets  the surface data type of the road object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetSurfaceDatatype
            (
                NXOpen::Motion::RoadBuilder::SurfaceDatatypeChoices surfacedatatype /** surfacedatatype */ 
            );
            /**Returns  the path datatype of the road object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::RoadBuilder::PathDatatypeChoices PathDatatype
            (
            );
            /**Sets  the path datatype of the road object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetPathDatatype
            (
                NXOpen::Motion::RoadBuilder::PathDatatypeChoices pathdatatype /** pathdatatype */ 
            );
            /**Returns  the spline curve of the road object of surface type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::MotionFunction * SplineCurve
            (
            );
            /**Sets  the spline curve of the road object of surface type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetSplineCurve
            (
                NXOpen::Motion::MotionFunction * spline /** spline */ 
            );
            /**Returns  the path and file name of the surface curve 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::IExternalFileReferencer::GetExternalFileReferenceAdapter NXOpen::IExternalFileReferencer::GetExternalFileReferenceAdapter@endlink  <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::IExternalFileReferencer::GetExternalFileReferenceAdapter") NXString SurfaceFileName
            (
            );
            /**Sets  the path and file name of the surface curve 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::ExternalFileReferenceAdapter::EstablishReference NXOpen::ExternalFileReferenceAdapter::EstablishReference@endlink  <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::ExternalFileReferenceAdapter::EstablishReference") void SetSurfaceFileName
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the path and file name of the surface curve 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::ExternalFileReferenceAdapter::EstablishReference NXOpen::ExternalFileReferenceAdapter::EstablishReference@endlink  <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetSurfaceFileName
            (
                const char * filename /** filename */ 
            );
            /**Returns  the x spline curve for the road object of path type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::MotionFunction * XCurve
            (
            );
            /**Sets  the x spline curve for the road object of path type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetXCurve
            (
                NXOpen::Motion::MotionFunction * spline /** spline */ 
            );
            /**Returns  the y spline curve for the road object of path type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::MotionFunction * YCurve
            (
            );
            /**Sets  the y spline curve for the road object of path type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetYCurve
            (
                NXOpen::Motion::MotionFunction * spline /** spline */ 
            );
            /**Returns  the z spline curve for the road object of path type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::MotionFunction * ZCurve
            (
            );
            /**Sets  the z spline curve for the road object of path type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetZCurve
            (
                NXOpen::Motion::MotionFunction * spline /** spline */ 
            );
            /**Returns  the bank angle spline curve for the road object of path type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::MotionFunction * BankAngleCurve
            (
            );
            /**Sets  the bank angle spline curve for the road object of path type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetBankAngleCurve
            (
                NXOpen::Motion::MotionFunction * spline /** spline */ 
            );
            /**Returns  the path and file name of the path curve 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::IExternalFileReferencer::GetExternalFileReferenceAdapter NXOpen::IExternalFileReferencer::GetExternalFileReferenceAdapter@endlink  <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::IExternalFileReferencer::GetExternalFileReferenceAdapter") NXString PathFileName
            (
            );
            /**Sets  the path and file name of the path curve 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::ExternalFileReferenceAdapter::EstablishReference NXOpen::ExternalFileReferenceAdapter::EstablishReference@endlink  <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::ExternalFileReferenceAdapter::EstablishReference") void SetPathFileName
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the path and file name of the path curve 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::ExternalFileReferenceAdapter::EstablishReference NXOpen::ExternalFileReferenceAdapter::EstablishReference@endlink  <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetPathFileName
            (
                const char * filename /** filename */ 
            );
            /**Returns  the x origin coord for the segments for the road object of type path 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * XSegmentOriginCoord
            (
            );
            /**Returns  the y origin coord for the segments for the road object of type path 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * YSegmentOriginCoord
            (
            );
            /**Returns  the z origin coord for the segments for the road object of type path 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * ZSegmentOriginCoord
            (
            );
            /** Creates a new segment builder for the road object of type path  @return  SegmentBuilder object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SegmentBuilder * CreateSegmentBuilder
            (
            );
            /**Returns  the segment builder list for the road object of type path 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SegmentBuilderList * SegmentBuilderList
            (
            );
            /** Get a specific segment builder from the list 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SegmentBuilder * GetSegmentBuilder
            (
                int segmentBuilderIndex /** segmentbuilderindex */ 
            );
            /** Remove a segment 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void RemoveSegmentBuilder
            (
                NXOpen::Motion::SegmentBuilder * segment /** segment */ 
            );
            /** Remove a segment 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void RemoveAllSegmentBuilders
            (
            );
            /** Swap two segments 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SwapSegment
            (
                NXOpen::Motion::SegmentBuilder * firstSegment /** firstsegment */ ,
                NXOpen::Motion::SegmentBuilder * secondSegment /** secondsegment */ 
            );
            /**Returns  the show visualization 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool ShowVisualization
            (
            );
            /**Sets  the show visualization 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetShowVisualization
            (
                bool showVisualization /** showvisualization */ 
            );
            /**Returns  the width 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * Width
            (
            );
            /**Returns  the length 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * Length
            (
            );
            /**Returns  the grid density 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * GridDensity
            (
            );
            /**Returns  the color 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::NXColor * Color
            (
            );
            /**Sets  the color 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetColor
            (
                NXOpen::NXColor * color /** color */ 
            );
            /**Returns  the spline type 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::RoadBuilder::SplineDatatypeChoices SplineType
            (
            );
            /**Sets  the spline type 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetSplineType
            (
                NXOpen::Motion::RoadBuilder::SplineDatatypeChoices splineType /** splinetype */ 
            );
            /**Returns  the spline profile of the road object of surface type 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectFieldData * SplineCurveProfile
            (
            );
            /**Returns  the path and file name of the surface curve 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectFieldData * SurfaceProfile
            (
            );
            /**Returns  the x spline curve defined by a profile for the road object of path type 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectFieldData * XCurveProfile
            (
            );
            /**Returns  the y spline curve defined by a profile for the road object of path type 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectFieldData * YCurveProfile
            (
            );
            /**Returns  the z spline curve defined by a profile for the road object of path type 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectFieldData * ZCurveProfile
            (
            );
            /**Returns  the bank angle spline curve defined by a profile for the road object of path type 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectFieldData * BankAngleCurveProfile
            (
            );
            /**  Returns the external file reference object. In case the referencer object has multiple external references,
                     use referenceObjectId to return the correct external file adapter.  @return  external file reference object 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: virtual NXOpen::ExternalFileReferenceAdapter * GetExternalFileReferenceAdapter
            (
                int referenceObjectId /** the unique identifier of the external reference required in case where referencer has multiple external references */
            );
            /**  Sets the external file reference object. In case the referencer object has multiple external references,
                     use referenceObjectId to set the correct reference. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: virtual void SetExternalFileReferenceAdapter
            (
                int referenceObjectId /** the unique identifier of the external reference required in case where referencer has multiple external references */,
                NXOpen::ExternalFileReferenceAdapter * adapter /** external file reference object */
            );
            /**  Gets the file definition to use for external file adapter. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: virtual NXString GetExternalFileDefinitionKey
            (
                NXOpen::ExternalFileReferenceAdapter * adapter /** external file reference object */
            );
            /** Establish the external reference to the given file specification.  @return  external file reference object 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: virtual NXOpen::ExternalFileReferenceAdapter * EstablishReference
            (
                int referenceObjectId /** the unique identifier to use for this reference if referencer has multiple external references */,
                NXOpen::ExternalFileReferenceAdapter::Type referenceType /** the kind of reference to establish */,
                const NXString & externalFileSpec /** the external file specification. */
            );
            /** Establish the external reference to the given file specification.  @return  external file reference object 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            virtual NXOpen::ExternalFileReferenceAdapter * EstablishReference
            (
                int referenceObjectId /** the unique identifier to use for this reference if referencer has multiple external references */,
                NXOpen::ExternalFileReferenceAdapter::Type referenceType /** the kind of reference to establish */,
                const char * externalFileSpec /** the external file specification. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
