#ifndef NXOpen_PDM_TCINUTILS_HXX_INCLUDED
#define NXOpen_PDM_TCINUTILS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDM_TcinUtils.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_pdm_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PDM
    {
        class TcinUtils;
    }
    namespace PDM
    {
        class PdmSession;
    }
    namespace Assemblies
    {
        class Component;
    }
    namespace PDM
    {
        class TcinUtilsImpl;
        /** Contains various TCIN utility methods  <br> To obtain an instance of this class, refer to @link NXOpen::PDM::PdmSession  NXOpen::PDM::PdmSession @endlink  <br> 
         <br>  Created in NX11.0.1.  <br>  
        */
        class NXOPENCPP_PDMEXPORT  TcinUtils
        {
            private: TcinUtilsImpl * m_tcinutils_impl;
            private: NXOpen::PDM::PdmSession* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit TcinUtils(NXOpen::PDM::PdmSession *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~TcinUtils();
            /** Convert legacy Design Control Elements to Stand-alone Design Features 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_4gd_integration ("4th Generation Design") */
            public: void ConvertLegacyDesignControlElements
            (
                const std::vector<NXOpen::Assemblies::Component *> & designControlElements /** designcontrolelements */ ,
                std::vector<NXString> & legacyDCEIds /** array containing list of DCE_ID#REV_ID of DCEs */,
                std::vector<NXString> & newDesignFeatureIds /** array containing list of DF_ID#REV_ID of new Stand-alone design features */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
