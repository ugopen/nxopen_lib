#ifndef NXOpen_MECHATRONICS_MCDSIGNALSERVERCONFIGURATIONBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_MCDSIGNALSERVERCONFIGURATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_MCDSignalServerConfigurationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mechatronics_SHMSignalProviderBuilder.hxx>
#include <NXOpen/Mechatronics_TCPSignalServerBuilder.hxx>
#include <NXOpen/Mechatronics_UDPSignalServerBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class MCDSignalServerConfigurationBuilder;
    }
    class Builder;
    namespace Mechatronics
    {
        class SHMSignalProviderBuilder;
    }
    namespace Mechatronics
    {
        class TCPSignalServerBuilder;
    }
    namespace Mechatronics
    {
        class UDPSignalServerBuilder;
    }
    namespace Mechatronics
    {
        /**  @brief  Represents configration data access type 

          */
        enum McdSignalServerConfigurationtype
        {
            McdSignalServerConfigurationtypeShm/** shm */ ,
            McdSignalServerConfigurationtypeTcp/** tcp */ ,
            McdSignalServerConfigurationtypeUdp/** udp */ 
        };

    }
    namespace Mechatronics
    {
        class _MCDSignalServerConfigurationBuilderBuilder;
        class MCDSignalServerConfigurationBuilderImpl;
        /**  @brief  Represents a @link NXOpen::Mechatronics::MCDSignalServerConfigurationBuilder NXOpen::Mechatronics::MCDSignalServerConfigurationBuilder@endlink   

          
                 It is used to maintain all server builders for MCD signals. Such as  SHM, TCP/UDP, etc.
                
             <br> To create a new instance of this class, use @link NXOpen::Mechatronics::MCDSignalServerConfigurationCollection::CreateMCDSignalServerConfigurationBuilder  NXOpen::Mechatronics::MCDSignalServerConfigurationCollection::CreateMCDSignalServerConfigurationBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  MCDSignalServerConfigurationBuilder : public NXOpen::Builder
        {
            private: MCDSignalServerConfigurationBuilderImpl * m_mcdsignalserverconfigurationbuilder_impl;
            private: friend class  _MCDSignalServerConfigurationBuilderBuilder;
            protected: MCDSignalServerConfigurationBuilder();
            public: ~MCDSignalServerConfigurationBuilder();
            /**Returns   @brief  the SHMSignalProviderBuilder that holds the configuration for SHMSignalProvider.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::SHMSignalProviderBuilder * SHMSignalProvider
            (
            );
            /**Returns   @brief  the TCPSignalServerBuilder that holds the configuration for TCPSignalServer.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::TCPSignalServerBuilder * TCPSignalServer
            (
            );
            /**Returns   @brief  the UDPSignalServer builder that holds the configuration for UDPSignalServer.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::UDPSignalServerBuilder * UDPSignalServer
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
