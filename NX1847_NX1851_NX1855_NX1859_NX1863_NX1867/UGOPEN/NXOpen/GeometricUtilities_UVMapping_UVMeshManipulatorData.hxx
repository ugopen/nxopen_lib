#ifndef NXOpen_GEOMETRICUTILITIES_UVMAPPING_UVMESHMANIPULATORDATA_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_UVMAPPING_UVMESHMANIPULATORDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_UVMapping_UVMeshManipulatorData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_TransformerData.hxx>
#include <NXOpen/GeometricUtilities_UVMapping_SelectUVMeshObjectData.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        namespace UVMapping
        {
            class UVMeshManipulatorData;
        }
    }
    namespace GeometricUtilities
    {
        class TransformerData;
    }
    namespace GeometricUtilities
    {
        namespace UVMapping
        {
            class SelectUVMeshObjectData;
        }
    }
    class NXObject;
    namespace GeometricUtilities
    {
        namespace UVMapping
        {
            class _UVMeshManipulatorDataBuilder;
            class UVMeshManipulatorDataImpl;
            /** UV Mesh manipulation tool.
                    
             <br>  Created in NX1847.0.0.  <br>  
            */
            class NXOPENCPP_GEOMETRICUTILITIESEXPORT  UVMeshManipulatorData : public NXOpen::GeometricUtilities::UVMapping::SelectUVMeshObjectData
            {

                /// \cond NX_NO_DOC 
                 /** Contains object selection information. 
                 <br>  Created in NX1847.0.0.  <br>  
                */
                public:
                struct ObjectSelectionData
                {
                    public: /** The selected object. */NXOpen::NXObject * SelectedObject;
                    public: /** The point at which object is selected, the point
                                                                             under the cursor when seen in view direction.
                                                                         */NXOpen::Point3d SelectionPosition;
                    public: /** The view direction.
                                                                         */NXOpen::Vector3d ViewDirection;
                    public: /** Is SelectionPosition a snapped location. */bool IsSnappedPosition;
                    public: ObjectSelectionData() :
                        SelectedObject(),
                        SelectionPosition(),
                        ViewDirection(),
                        IsSnappedPosition()
                    {
                    }
                    /** Constructor for the ObjectSelectionData struct. */ 
                    public: ObjectSelectionData(NXOpen::NXObject * selectedObjectInitial /** The selected object. */, 
                            const NXOpen::Point3d &selectionPositionInitial /** The point at which object is selected, the point
                                                                                     under the cursor when seen in view direction.
                                                                                 */, 
                            const NXOpen::Vector3d &viewDirectionInitial /** The view direction.
                                                                                 */, 
                            bool isSnappedPositionInitial /** Is SelectionPosition a snapped location. */) :
                        SelectedObject(selectedObjectInitial),
                        SelectionPosition(selectionPositionInitial),
                        ViewDirection(viewDirectionInitial),
                        IsSnappedPosition(isSnappedPositionInitial)
                    {
                    }
                };


                /// \endcond 
                private: UVMeshManipulatorDataImpl * m_uvmeshmanipulatordata_impl;
                private: friend class  _UVMeshManipulatorDataBuilder;
                protected: UVMeshManipulatorData();
                public: ~UVMeshManipulatorData();
                /**Returns  the transformation tool. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::GeometricUtilities::TransformerData * Transformer
                (
                );

                /// \cond NX_NO_DOC 
                /** Repositions the @link NXOpen::GeometricUtilities::TransformerData NXOpen::GeometricUtilities::TransformerData@endlink  to the specified entity. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetTransformerToObject
                (
                    const NXOpen::GeometricUtilities::UVMapping::UVMeshManipulatorData::ObjectSelectionData & selectionData /** selectiondata */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Aligns the U axis to U or V direction. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetUAxisDirection
                (
                    bool canAlignToUDirection /** canaligntoudirection */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Aligns the V axis to U or V direction. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetVAxisDirection
                (
                    bool canAlignToVDirection /** canaligntovdirection */ 
                );

                /// \endcond 
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
