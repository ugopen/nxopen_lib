#ifndef NXOpen_CAM_TOPOLOGY_HXX_INCLUDED
#define NXOpen_CAM_TOPOLOGY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_Topology.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class Topology;
    }
    class Builder;
    namespace CAM
    {
        class _TopologyBuilder;
        class TopologyImpl;
        /** Represents a CAM topology builder  <br> Use the @link NXOpen::CAM::Geometry NXOpen::CAM::Geometry@endlink  class to get a topology builder  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  Topology : public NXOpen::Builder
        {
            private: TopologyImpl * m_topology_impl;
            private: friend class  _TopologyBuilder;
            protected: Topology();
            public: ~Topology();
            /**Returns  the distance tolerance 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double DistanceTolerance
            (
            );
            /**Sets  the distance tolerance 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDistanceTolerance
            (
                double newValue /** the distance tolerance */
            );
            /**Returns  the angle tolerance 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double AngleTolerance
            (
            );
            /**Sets  the angle tolerance 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetAngleTolerance
            (
                double newValue /** the angle tolerance */
            );
            /** Get the count of shell anchors 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int GetShellCount
            (
            );
            /** The action of rebuild topology data 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void Rebuild
            (
            );
            /** The action of unify material side of one connected shell 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void UnifyMaterialSide
            (
                int shellIndex /** the index of shell anchor */
            );
            /** The action of reverse material side of one connected shell 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void ReverseMaterialSide
            (
                int shellIndex /** the index of shell anchor */
            );
            /** Remove shell set 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void RemoveShell
            (
                int shellIndex /** the index of shell anchor */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
