#ifndef NXOpen_ROUTING_NAMINGPATTERNBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_NAMINGPATTERNBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_NamingPatternBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class NamingPatternBuilder;
    }
    class Builder;
    namespace Routing
    {
        class _NamingPatternBuilderBuilder;
        class NamingPatternBuilderImpl;
        /** Builder for selecting a naming pattern for terminal arrays.  <br> To create a new instance of this class, use @link NXOpen::Routing::RouteManager::CreateNamingPatternBuilder  NXOpen::Routing::RouteManager::CreateNamingPatternBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  NamingPatternBuilder : public NXOpen::Builder
        {
            /** Determines the naming sequence for terminal ports */
            public: enum PatternTypes
            {
                PatternTypesNumber/** number */ ,
                PatternTypesUpperChar/** upper char */ ,
                PatternTypesLowerChar/** lower char */ 
            };

            private: NamingPatternBuilderImpl * m_namingpatternbuilder_impl;
            private: friend class  _NamingPatternBuilderBuilder;
            protected: NamingPatternBuilder();
            public: ~NamingPatternBuilder();
            /**Returns  the prefix 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXString Prefix
            (
            );
            /**Sets  the prefix 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetPrefix
            (
                const NXString & prefix /** prefix */ 
            );
            /**Sets  the prefix 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            void SetPrefix
            (
                const char * prefix /** prefix */ 
            );
            /**Returns  the suffix 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXString Suffix
            (
            );
            /**Sets  the suffix 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetSuffix
            (
                const NXString & suffix /** suffix */ 
            );
            /**Sets  the suffix 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            void SetSuffix
            (
                const char * suffix /** suffix */ 
            );
            /**Returns  the pattern type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::NamingPatternBuilder::PatternTypes PatternType
            (
            );
            /**Sets  the pattern type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetPatternType
            (
                NXOpen::Routing::NamingPatternBuilder::PatternTypes patternType /** patterntype */ 
            );
            /**Returns  the start string 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXString StartString
            (
            );
            /**Sets  the start string 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetStartString
            (
                const NXString & startString /** startstring */ 
            );
            /**Sets  the start string 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            void SetStartString
            (
                const char * startString /** startstring */ 
            );
            /**Returns  the end string 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXString EndString
            (
            );
            /**Sets  the end string 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetEndString
            (
                const NXString & endString /** endstring */ 
            );
            /**Sets  the end string 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            void SetEndString
            (
                const char * endString /** endstring */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
