#ifndef NXOpen_TOOLING_CALCULATEAREABUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_CALCULATEAREABUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_CalculateAreaBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class CalculateAreaBuilder;
    }
    class Builder;
    class Expression;
    class NXObject;
    class SelectBodyList;
    namespace Tooling
    {
        class _CalculateAreaBuilderBuilder;
        class CalculateAreaBuilderImpl;
        /** The CalculateArea builder  <br> To create a new instance of this class, use @link NXOpen::Tooling::CalculateAreaCollection::CreateBuilder  NXOpen::Tooling::CalculateAreaCollection::CreateBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        AngularAccuracy.Value </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        ApproximationTolerance.Value </td> <td> 
         
        0.1 (millimeters part), 0.004 (inches part) </td> </tr> 

        <tr><td> 
         
        CreateSheet </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        DimTolerance.Value </td> <td> 
         
        0.01 (millimeters part), 0.001 (inches part) </td> </tr> 

        <tr><td> 
         
        SheetMethod </td> <td> 
         
        Curve </td> </tr> 

        <tr><td> 
         
        ToggleSideArea </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX7.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  CalculateAreaBuilder : public NXOpen::Builder
        {
            /** Represents the methods to create the projected sheet body. */
            public: enum SheetMethodType
            {
                SheetMethodTypeCurve/**Using projected curve method to create the sheet body.*/,
                SheetMethodTypeMesh/**Using mesh method to create the sheet body.*/
            };

            private: CalculateAreaBuilderImpl * m_calculateareabuilder_impl;
            private: friend class  _CalculateAreaBuilderBuilder;
            protected: CalculateAreaBuilder();
            public: ~CalculateAreaBuilder();
            /**Returns  the target body to calculate area. It can be a single solid/sheet body, or multiple solid/sheet bodies.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * SelectionTarget
            (
            );
            /**Returns  the plane defined as the reference plane to calculate area, the type could be planar face, datum plane and plane. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObject * PlaneDefine
            (
            );
            /**Sets  the plane defined as the reference plane to calculate area, the type could be planar face, datum plane and plane. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetPlaneDefine
            (
                NXOpen::NXObject * planeDefine /** planedefine */ 
            );
            /**Returns  the method used to create the projected sheet body. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::CalculateAreaBuilder::SheetMethodType SheetMethod
            (
            );
            /**Sets  the method used to create the projected sheet body. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetSheetMethod
            (
                NXOpen::Tooling::CalculateAreaBuilder::SheetMethodType sheetMethod /** sheetmethod */ 
            );
            /**Returns  the dim tolerance used as the area calculation tolerance. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * DimTolerance
            (
            );
            /**Returns  the area calculation approximation tolerance. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ApproximationTolerance
            (
            );
            /**Returns  the angular accuracy used as the minimum angle between two reference planes. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * AngularAccuracy
            (
            );
            /**Returns  the toggle side area to indicate calculate side area or not. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool ToggleSideArea
            (
            );
            /**Sets  the toggle side area to indicate calculate side area or not. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetToggleSideArea
            (
                bool toggleSideArea /** togglesidearea */ 
            );
            /**Returns  the option to indicate creating projected sheet or not 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: bool CreateSheet
            (
            );
            /**Sets  the option to indicate creating projected sheet or not 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetCreateSheet
            (
                bool createSheet /** createsheet */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
