#ifndef NXOpen_AME_OPTICALCONNECTIONSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_AME_OPTICALCONNECTIONSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_OpticalConnectionSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_ConnectionSubTypes.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class OpticalConnectionSettingsBuilder;
    }
    class Builder;
    class NXColor;
    namespace AME
    {
        class _OpticalConnectionSettingsBuilderBuilder;
        class OpticalConnectionSettingsBuilderImpl;
        /** Builder object for changing optical connection settings on diagramming pages associated with the @link NXOpen::AME::Project NXOpen::AME::Project@endlink   <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateOpticalConnectionSettingsBuilder  NXOpen::AME::AMEManager::CreateOpticalConnectionSettingsBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  OpticalConnectionSettingsBuilder : public NXOpen::Builder
        {
            private: OpticalConnectionSettingsBuilderImpl * m_opticalconnectionsettingsbuilder_impl;
            private: friend class  _OpticalConnectionSettingsBuilderBuilder;
            protected: OpticalConnectionSettingsBuilder();
            public: ~OpticalConnectionSettingsBuilder();
            /** Resets optical connection settings to default 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void ResetToDefault
            (
            );
            /**  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetCoreDiameter
            (
                NXOpen::AME::AmeOpticalConnectionFiberType fiberType /** fibertype */ ,
                double coreDiameter /** corediameter */ 
            );
            /** Fiber core diameter property of a given optical connection sub-type. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: double GetCoreDiameter
            (
                NXOpen::AME::AmeOpticalConnectionFiberType fiberType /** fibertype */ 
            );
            /**  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetCladdingDiameter
            (
                NXOpen::AME::AmeOpticalConnectionFiberType fiberType /** fibertype */ ,
                double claddingDiameter /** claddingdiameter */ 
            );
            /** Fiber cladding diameter property of a given optical connection sub-type. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: double GetCladdingDiameter
            (
                NXOpen::AME::AmeOpticalConnectionFiberType fiberType /** fibertype */ 
            );
            /**  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetStyleColor
            (
                NXOpen::AME::AmeOpticalConnectionFiberType fiberType /** fibertype */ ,
                NXOpen::NXColor * styleColorCode /** stylecolorcode */ 
            );
            /** Style color code property of a given optical connection sub-type. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::NXColor * GetStyleColorCode
            (
                NXOpen::AME::AmeOpticalConnectionFiberType fiberType /** fibertype */ 
            );
            /**  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetStyleFont
            (
                NXOpen::AME::AmeOpticalConnectionFiberType fiberType /** fibertype */ ,
                NXOpen::DisplayableObject::ObjectFont styleFont /** stylefont */ 
            );
            /** Style font property of a given optical connection sub-type. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::DisplayableObject::ObjectFont GetStyleFont
            (
                NXOpen::AME::AmeOpticalConnectionFiberType fiberType /** fibertype */ 
            );
            /**  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetStyleWidth
            (
                NXOpen::AME::AmeOpticalConnectionFiberType fiberType /** fibertype */ ,
                NXOpen::DisplayableObject::ObjectWidth styleWidth /** stylewidth */ 
            );
            /** Style width property of a given optical connection sub-type. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::DisplayableObject::ObjectWidth GetStyleWidth
            (
                NXOpen::AME::AmeOpticalConnectionFiberType fiberType /** fibertype */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
