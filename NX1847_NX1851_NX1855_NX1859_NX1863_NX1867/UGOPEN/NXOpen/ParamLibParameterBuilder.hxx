#ifndef NXOpen_PARAMLIBPARAMETERBUILDER_HXX_INCLUDED
#define NXOpen_PARAMLIBPARAMETERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ParamLibParameterBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/ItemCacheMappedEntityBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class ParamLibParameterBuilder;
    namespace CAE
    {
        class PropertyTable;
    }
    class ItemCacheMappedEntityBuilder;
    class _ParamLibParameterBuilderBuilder;
    class ParamLibParameterBuilderImpl;
    /** Represents a @link ParamLibParameterBuilder ParamLibParameterBuilder@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::ParamLibParameterCollection::CreateParameterBuilder  NXOpen::ParamLibParameterCollection::CreateParameterBuilder @endlink  <br> 
     <br>  Created in NX1847.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  ParamLibParameterBuilder : public NXOpen::ItemCacheMappedEntityBuilder
    {
        private: ParamLibParameterBuilderImpl * m_paramlibparameterbuilder_impl;
        private: friend class  _ParamLibParameterBuilderBuilder;
        protected: ParamLibParameterBuilder();
        public: ~ParamLibParameterBuilder();
        /**Returns  the parameter name value. 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: NXString Name
        (
        );
        /**Sets  the parameter name value. 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetName
        (
            const NXString & name /** name */ 
        );
        /**Sets  the parameter name value. 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        void SetName
        (
            const char * name /** name */ 
        );
        /**Returns  the parameter id value. 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: int Id
        (
        );
        /**Sets  the parameter id value. 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetId
        (
            int id /** id */ 
        );
        /**Returns  the parameter description value. 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: NXString Description
        (
        );
        /**Sets  the parameter description value. 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetDescription
        (
            const NXString & description /** description */ 
        );
        /**Sets  the parameter description value. 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        void SetDescription
        (
            const char * description /** description */ 
        );
        /**Returns  the property table associated with the parameter object. 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::CAE::PropertyTable * PropertyTable
        (
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
