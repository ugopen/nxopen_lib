#ifndef NXOpen_CAE_BASEITERATION_HXX_INCLUDED
#define NXOpen_CAE_BASEITERATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_BaseIteration.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class BaseIteration;
    }
    namespace CAE
    {
        class BaseResultType;
    }
    class TaggedObject;
    class Unit;
    namespace CAE
    {
        class _BaseIterationBuilder;
        class BaseIterationImpl;
        /** This class provides interfaces to query iteration attributes  <br> An instance of this class can not be obtained  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  BaseIteration : public NXOpen::TaggedObject
        {
            /** The type of value that is stored in a iteration object */
            public: enum IterationValueType
            {
                IterationValueTypeUnknown/** Value has an Unknown type  */ = -1,
                IterationValueTypeTime/** Value represents a Time */,
                IterationValueTypeFrequency/** Value represents a Frequency  */,
                IterationValueTypeLoadFactor/** Value represents a LoadFactor  */,
                IterationValueTypeEigenvalue/** Value represents a Eigenvalue  */,
                IterationValueTypeHarmonic/** Value represents a Harmonic  */,
                IterationValueTypeRotationSpeed/** Value represents a RotationSpeed  */,
                IterationValueTypeDesignCycle/** Value represents a DesignCycle  */,
                IterationValueTypeAcoustic/** Value represents a Acoustic Mode  */,
                IterationValueTypeBoltSequence/** Value represents a Bolt Sequence  */
            };

            /** The Analysis type of a iteration object */
            public: enum IterationType
            {
                IterationTypeUnknown/** Iteration has an Unknown type  */ = -1,
                IterationTypeStatic/** Static Analysis Iteration    */,
                IterationTypeMode/** Modal Analysis Iteration    */,
                IterationTypeConstraintMode/** Constraint Modal Analysis Iteration    */,
                IterationTypeTransient/** Transient Analysis Iteration    */,
                IterationTypeBuckling/** Buckling Analysis Iteration    */,
                IterationTypeNonlinear/** NonLinear Analysis Iteration    */,
                IterationTypeFrequencyResponse/** Frequency Response Analysis Iteration    */
            };

            private: BaseIterationImpl * m_baseiteration_impl;
            private: friend class  _BaseIterationBuilder;
            protected: BaseIteration();
            public: ~BaseIteration();
            /**Returns  the type of the iteration 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXOpen::CAE::BaseIteration::IterationType Type
            (
            );
            /**Returns  the iteration value 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::BaseIteration::GetValueOfType NXOpen::CAE::BaseIteration::GetValueOfType@endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::BaseIteration::GetValueOfType instead.") double Value
            (
            );
            /**Returns  the units for the iteration value 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::BaseIteration::GetUnitOfType NXOpen::CAE::BaseIteration::GetUnitOfType@endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::BaseIteration::GetUnitOfType instead.") NXOpen::Unit * Unit
            (
            );
            /**Returns  the iteration value type 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::BaseIteration::GetValueTypes NXOpen::CAE::BaseIteration::GetValueTypes@endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::BaseIteration::GetValueTypes instead.") NXOpen::CAE::BaseIteration::IterationValueType ValueType
            (
            );
            /**Returns  the name of the iteration 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXString Name
            (
            );
            /**Returns the sub iterations present in this iteration 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: std::vector<NXOpen::CAE::BaseIteration *> GetSubIterations
            (
            );
            /**Returns the result types present in this iteration 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: std::vector<NXOpen::CAE::BaseResultType *> GetResultTypes
            (
            );
            /** Returns a @link NXOpen::CAE::BaseResultType NXOpen::CAE::BaseResultType@endlink   @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * Find
            (
                const NXString & journalIdentifier /** Journal identifier of the object */
            );
            /** Returns a @link NXOpen::CAE::BaseResultType NXOpen::CAE::BaseResultType@endlink   @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            NXOpen::TaggedObject * Find
            (
                const char * journalIdentifier /** Journal identifier of the object */
            );
            /** Whether this modal iteration has any mass value  
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: bool HasModalMass
            (
            );
            /**Returns  the method returns mass value of this modal iteration  
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: double ModalMass
            (
            );
            /** The iteration value of iteration type  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: double GetValueOfType
            (
                NXOpen::CAE::BaseIteration::IterationValueType valueType /** valuetype */ 
            );
            /** The array of iteration value types 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void GetValueTypes
            (
                std::vector<NXOpen::CAE::BaseIteration::IterationValueType> & valueType /** valuetype */ 
            );
            /** The unit for the iteration type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXOpen::Unit * GetUnitOfType
            (
                NXOpen::CAE::BaseIteration::IterationValueType valueType /** valuetype */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
