#ifndef NXOpen_CAE_FTK_MATRIXPLOTRECORD_HXX_INCLUDED
#define NXOpen_CAE_FTK_MATRIXPLOTRECORD_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FTK_MatrixPlotRecord.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FTK_BaseUnit.hxx>
#include <NXOpen/CAE_FTK_BaseRecord.hxx>
#include <NXOpen/CAE_FTK_IApplicationDataOwner.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace FTK
        {
            class MatrixPlotRecord;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class BaseRecord;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class BaseUnit;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class IApplicationData;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class IApplicationDataOwner;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class _MatrixPlotRecordBuilder;
            class MatrixPlotRecordImpl;
            /** Represents record data for matrix plot.  <br> Not support KF.  <br> 
             <br>  Created in NX1847.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  MatrixPlotRecord : public NXOpen::CAE::FTK::BaseRecord, public virtual NXOpen::CAE::FTK::IApplicationDataOwner
            {
                private: MatrixPlotRecordImpl * m_matrixplotrecord_impl;
                private: friend class  _MatrixPlotRecordBuilder;
                protected: MatrixPlotRecord();
                public: ~MatrixPlotRecord();
                /**Returns  the title name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString Title
                (
                );
                /**Sets  the title name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetTitle
                (
                    const NXString & titleName /** titlename */ 
                );
                /**Sets  the title name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                void SetTitle
                (
                    const char * titleName /** titlename */ 
                );
                /**Returns  the data unit 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FTK::BaseUnit * DataUnit
                (
                );
                /**Sets  the data unit 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetDataUnit
                (
                    NXOpen::CAE::FTK::BaseUnit * pDataUnit /** pdataunit */ 
                );
                /** Gets the row labels 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetRowLabels
                (
                );
                /** Sets the row labels 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetRowLabels
                (
                    const std::vector<NXString> & rowLabels /** rowlabels */ 
                );
                /** Gets the column labels 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetColumnLabels
                (
                );
                /** Sets the column labels 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetColumnLabels
                (
                    const std::vector<NXString> & columnLabels /** columnlabels */ 
                );
                /**  @brief  Gets real or complex data.  

                 
                            
                                To get real data, the parameter realData will be filled, but the parameter imagData will be empty.
                                To get complex data, both the parameters realData and imagData will all be filled.
                            
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void GetData
                (
                    std::vector<double> & realData /** Real part of data */,
                    std::vector<double> & imagData /** Imaginary part data */
                );
                /**  @brief  Sets real or complex data.  

                 
                            
                                To set real data, the parameter realData must be given, but the parameter imagData can be empty.
                                To set complex data, both the parameters realData and imagData must be given.
                            
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetData
                (
                    const std::vector<double> & realData /** Real part of data */,
                    const std::vector<double> & imagData /** Imaginary part data */
                );
                /** Gets the row count 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: int GetRowCount
                (
                );
                /** Gets the column count 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: int GetColumnCount
                (
                );
                /** Gets the application specific data associated with the record 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual NXOpen::CAE::FTK::IApplicationData * GetApplicationData
                (
                );
                /** Sets the application specific data to the record 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual void SetApplicationData
                (
                    NXOpen::CAE::FTK::IApplicationData * applicationData /** applicationdata */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
