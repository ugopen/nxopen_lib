#ifndef NXOpen_PDM_CONFIGURATIONMANAGER_HXX_INCLUDED
#define NXOpen_PDM_CONFIGURATIONMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDM_ConfigurationManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/PDM_ConfigurationContextBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_pdm_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PDM
    {
        class ConfigurationManager;
    }
    class Session;
    class BasePart;
    class NXObject;
    namespace PDM
    {
        class ConfigurationContextBuilder;
    }
    namespace PDM
    {
        class EffectivityAttributePropertiesBuilder;
    }
    namespace PDM
    {
        class ConfigurationManagerImpl;
        /** Represents Configuration Manager   <br> Use @link NXOpen::Session::ConfigurationManager NXOpen::Session::ConfigurationManager@endlink  to get the instance of this class.  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_PDMEXPORT  ConfigurationManager
        {
            private: ConfigurationManagerImpl * m_configurationmanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit ConfigurationManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~ConfigurationManager();
            /** Creates a new @link NXOpen::PDM::ConfigurationContextBuilder NXOpen::PDM::ConfigurationContextBuilder@endlink  object for 
                        @link  NXOpen::PDM::ConfigurationContextBuilder::ConfigContextModeAssemblies   NXOpen::PDM::ConfigurationContextBuilder::ConfigContextModeAssemblies @endlink 
                        mode configuration. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::PDM::ConfigurationContextBuilder * CreateConfigurationContextBuilder
            (
            );
            /** Creates a new @link NXOpen::PDM::EffectivityAttributePropertiesBuilder NXOpen::PDM::EffectivityAttributePropertiesBuilder@endlink  object. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::PDM::EffectivityAttributePropertiesBuilder * CreateEffectivityAttributePropertiesBuilder
            (
                NXOpen::BasePart * part /** The part that owns the builder. The builder owner is not
                                                                    strictly required (that is, it can be NULL), but it is
                                                                    highly suggested to ensure proper cleanup of the builder in
                                                                    case the client does not explicitly clean it up properly.  */,
                const std::vector<NXOpen::NXObject *> & objects /** the array of objects */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
