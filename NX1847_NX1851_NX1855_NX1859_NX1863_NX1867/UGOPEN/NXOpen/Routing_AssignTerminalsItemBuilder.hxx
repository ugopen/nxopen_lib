#ifndef NXOpen_ROUTING_ASSIGNTERMINALSITEMBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_ASSIGNTERMINALSITEMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_AssignTerminalsItemBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class AssignTerminalsItemBuilder;
    }
    class Builder;
    class Direction;
    class Point;
    namespace Routing
    {
        class _AssignTerminalsItemBuilderBuilder;
        class AssignTerminalsItemBuilderImpl;
        /** Builder for creating/editing terminals.  <br> To create a new instance of this class, use @link NXOpen::Routing::RouteManager::CreateAssignTerminalsItemBuilder  NXOpen::Routing::RouteManager::CreateAssignTerminalsItemBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  AssignTerminalsItemBuilder : public NXOpen::Builder
        {
            private: AssignTerminalsItemBuilderImpl * m_assignterminalsitembuilder_impl;
            private: friend class  _AssignTerminalsItemBuilderBuilder;
            protected: AssignTerminalsItemBuilder();
            public: ~AssignTerminalsItemBuilder();
            /**Returns  the terminal origin point 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Point * TerminalOrigin
            (
            );
            /**Sets  the terminal origin point 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetTerminalOrigin
            (
                NXOpen::Point * originPoint /** originpoint */ 
            );
            /**Returns  the terminal direction 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Direction * TerminalDirection
            (
            );
            /**Sets  the terminal direction 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetTerminalDirection
            (
                NXOpen::Direction * direction /** direction */ 
            );
            /**Returns  the terminal name 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXString TerminalName
            (
            );
            /**Sets  the terminal name 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetTerminalName
            (
                const NXString & terminalName /** terminalname */ 
            );
            /**Sets  the terminal name 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            void SetTerminalName
            (
                const char * terminalName /** terminalname */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
