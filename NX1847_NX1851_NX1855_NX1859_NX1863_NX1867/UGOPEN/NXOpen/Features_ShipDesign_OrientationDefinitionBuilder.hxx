#ifndef NXOpen_FEATURES_SHIPDESIGN_ORIENTATIONDEFINITIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_ORIENTATIONDEFINITIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_OrientationDefinitionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ShipDesign_OrientationRegionItemBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class OrientationDefinitionBuilder;
        }
    }
    class Builder;
    class DisplayableObject;
    namespace Features
    {
        namespace ShipDesign
        {
            class OrientationRegionItemBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class OrientationRegionItemBuilderList;
        }
    }
    class NXObject;
    class SelectNXObject;
    namespace Features
    {
        namespace ShipDesign
        {
            class _OrientationDefinitionBuilderBuilder;
            class OrientationDefinitionBuilderImpl;
            /** This class defines the top level object for use in definining the orientation
                    of stiffeners and edge reinforcements. This object allows you to define
                    regions of a profile and allows you to define a different method of orientation
                    for each region.  <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateOrientationDefinitionBuilder  NXOpen::Features::ShipCollection::CreateOrientationDefinitionBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            MeasureAngles </td> <td> 
             
            NormaltoCurve </td> </tr> 

            <tr><td> 
             
            ShowSurfaceAngles </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            ShowTwistRate </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            ShowWebAngles </td> <td> 
             
            0 </td> </tr> 

            </table>  

             <br>  Created in NX9.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  OrientationDefinitionBuilder : public NXOpen::Builder
            {
                /** Settings to indicate how angles are measured in all orientation objects.*/
                public: enum MeasureAngleTypes
                {
                    MeasureAngleTypesNormaltoCurve/** Angles are measured in a plane normal to the landing curve. */,
                    MeasureAngleTypesOrthogonal/** Angles are measured in an orthogonal plane closest to the normal of the
                                                                                                          landing curve. */
                };

                /** Settings to indicate which side of the placement faces the stiffener is to be placed.*/
                public: enum PlacementSideTypes
                {
                    PlacementSideTypesSameAsNormal/** The stiffener will be placed on the positive normal side of the 
                                                                                                           placement faces. */,
                    PlacementSideTypesOppositeNormal/** The stiffener will be placed on the negative normal side of the 
                                                                                                           placement faces. */
                };

                private: OrientationDefinitionBuilderImpl * m_orientationdefinitionbuilder_impl;
                private: friend class  _OrientationDefinitionBuilderBuilder;
                protected: OrientationDefinitionBuilder();
                public: ~OrientationDefinitionBuilder();
                /** Creates a new region on the landing curve to allow you to change the orientation for this area of the landing curve. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: NXOpen::Features::ShipDesign::OrientationRegionItemBuilder * CreateNewRegion
                (
                    NXOpen::NXObject * regionPoint /** New region boundary point */
                );
                /** Deletes a previously created region. The deleted region will be combined with the previous region. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void DeleteRegion
                (
                    NXOpen::Features::ShipDesign::OrientationRegionItemBuilder * region /** region */ 
                );
                /** Gets the next region to the current one.
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: NXOpen::Features::ShipDesign::OrientationRegionItemBuilder * GetNextRegion
                (
                    NXOpen::Features::ShipDesign::OrientationRegionItemBuilder * region /** region */ 
                );
                /**Returns  the new region point or datum that will be used for the boundary of the new region. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObject * NewRegionPoint
                (
                );
                /**Returns  the list containing all the defined regions. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::OrientationRegionItemBuilderList * RegionList
                (
                );
                /**Returns  the indication if the twist rate analysis display is on or off. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ShowTwistRate
                (
                );
                /**Sets  the indication if the twist rate analysis display is on or off. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetShowTwistRate
                (
                    bool showTwistRate /** showtwistrate */ 
                );
                /**Returns  the indication if the surface angles analysis display is on or off. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ShowSurfaceAngles
                (
                );
                /**Sets  the indication if the surface angles analysis display is on or off. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetShowSurfaceAngles
                (
                    bool showSurfaceAngles /** showsurfaceangles */ 
                );
                /**Returns  the indication if the web angle analysis display is on or off.
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ShowWebAngles
                (
                );
                /**Sets  the indication if the web angle analysis display is on or off.
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetShowWebAngles
                (
                    bool showWebAngles /** showwebangles */ 
                );
                /**Returns  the method in which to measure angles in the orientation objects. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::OrientationDefinitionBuilder::MeasureAngleTypes MeasureAngles
                (
                );
                /**Sets  the method in which to measure angles in the orientation objects. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetMeasureAngles
                (
                    NXOpen::Features::ShipDesign::OrientationDefinitionBuilder::MeasureAngleTypes measureAngles /** measureangles */ 
                );
                /** Sets the landing curve that is being processed into the builder. If regions have already been defined the closest point on this
                            new curve to the region boundaries will be used for the new region boundaries when the boundary has been defined by a specified point
                            otherwise the boundary definition will be reevaluated for this new curve and the boundary set appropriately. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void CreatePathCurve
                (
                    const std::vector<NXOpen::NXObject *> & curves /** The curves defining the path of the profile that is being oriented. */
                );
                /** Sets the faces or datum that are being processed into the builder. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetPlacementFaces
                (
                    const std::vector<NXOpen::DisplayableObject *> & faces /** The faces/datums defining the placement of the profile that is being oriented. */
                );
                /**Returns  the regionItem builder. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::OrientationRegionItemBuilder * RegionItemData
                (
                );
                /**Returns  the distance tolerance used in the orientation objects to determine if locations are coincident. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: double DistanceTolerance
                (
                );
                /**Sets  the distance tolerance used in the orientation objects to determine if locations are coincident. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetDistanceTolerance
                (
                    double tolerance /** tolerance */ 
                );
                /**Returns  the angle tolerance used in the orientation objects to determine if vectors are parallel. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: double AngleTolerance
                (
                );
                /**Sets  the angle tolerance used in the orientation objects to determine if vectors are parallel. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetAngleTolerance
                (
                    double tolerance /** tolerance */ 
                );
                /**Returns  the side of the placement faces the stiffener is to be placed upon. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::OrientationDefinitionBuilder::PlacementSideTypes PlacementSide
                (
                );
                /**Sets  the side of the placement faces the stiffener is to be placed upon. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetPlacementSide
                (
                    NXOpen::Features::ShipDesign::OrientationDefinitionBuilder::PlacementSideTypes placementSide /** placementside */ 
                );
                /** Will create new regions at each frame. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void CreateRegionsAtFrames
                (
                    std::vector<NXOpen::Features::ShipDesign::OrientationRegionItemBuilder *> & regions /** The regions created. */
                );
                /** Will set all angle values of input regions so that web is normal to surface. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetAnglesNormal
                (
                    const std::vector<NXOpen::Features::ShipDesign::OrientationRegionItemBuilder *> & regions /** The regions to process. */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
