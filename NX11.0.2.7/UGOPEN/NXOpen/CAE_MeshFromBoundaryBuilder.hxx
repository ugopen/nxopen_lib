#ifndef NXOpen_CAE_MESHFROMBOUNDARYBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MESHFROMBOUNDARYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_MeshFromBoundaryBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ElemEdgePathMethod.hxx>
#include <NXOpen/CAE_ElementTypeBuilder.hxx>
#include <NXOpen/CAE_MeshFromBoundaryBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class MeshFromBoundaryBuilder;
    }
    class Builder;
    namespace CAE
    {
        class ElemEdgePathMethod;
    }
    namespace CAE
    {
        class ElementTypeBuilder;
    }
    class SelectTaggedObjectList;
    namespace CAE
    {
        class _MeshFromBoundaryBuilderBuilder;
        class MeshFromBoundaryBuilderImpl;
        /**
              Represents a @link NXOpen::CAE::MeshFromBoundaryBuilder NXOpen::CAE::MeshFromBoundaryBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::NodeElementManager::CreateMeshFromBoundaryBuilder  NXOpen::CAE::NodeElementManager::CreateMeshFromBoundaryBuilder @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  MeshFromBoundaryBuilder : public NXOpen::Builder
        {
            /**  Type of loop */
            public: enum LoopOption
            {
                LoopOptionSourceTarget/** source target */,
                LoopOptionClosedLoop/** closed loop */
            };

            /** Type of rail */
            public: enum RailOption
            {
                RailOptionUniform/** single layer */,
                RailOptionTransition/** transitioned layer */
            };

            private: MeshFromBoundaryBuilderImpl * m_meshfromboundarybuilder_impl;
            private: friend class  _MeshFromBoundaryBuilderBuilder;
            protected: MeshFromBoundaryBuilder();
            public: ~MeshFromBoundaryBuilder();
            /** Set the source element path  of the selection
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetSourceElementEdgePathMethod
            (
                NXOpen::CAE::ElemEdgePathMethod * sourceElementEdgePathMethod /** sourceelementedgepathmethod */ 
            );
            /** Set the target elemnt path of the selection 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetTargetElementEdgePathMethod
            (
                NXOpen::CAE::ElemEdgePathMethod * targetElementEdgePathMethod /** targetelementedgepathmethod */ 
            );
            /**Returns  the element type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementTypeBuilder * ElementType
            (
            );
            /**Returns  the layers 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: int Layers
            (
            );
            /**Sets  the layers 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLayers
            (
                int layers /** layers */ 
            );
            /**Returns  the number of elements along rail1 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: int NumElementsOnRail1
            (
            );
            /**Sets  the number of elements along rail1 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetNumElementsOnRail1
            (
                int layers /** layers */ 
            );
            /**Returns  the number of elements along rail2 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: int NumElementsOnRail2
            (
            );
            /**Sets  the number of elements along rail2 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetNumElementsOnRail2
            (
                int layers /** layers */ 
            );
            /**Returns  the type of loop  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::MeshFromBoundaryBuilder::LoopOption LoopType
            (
            );
            /**Sets  the type of loop  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLoopType
            (
                NXOpen::CAE::MeshFromBoundaryBuilder::LoopOption loopoption /** loopoption */ 
            );
            /**Returns  the type of rail mesh  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::MeshFromBoundaryBuilder::RailOption RailType
            (
            );
            /**Sets  the type of rail mesh  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetRailType
            (
                NXOpen::CAE::MeshFromBoundaryBuilder::RailOption option /** option */ 
            );
            /**Returns  the mesh collector name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString CollectorName
            (
            );
            /**Sets  the mesh collector name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetCollectorName
            (
                const NXString & collectorName /** collectorname */ 
            );
            /**Sets  the mesh collector name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetCollectorName
            (
                const char * collectorName /** collectorname */ 
            );
            /**Returns  the selected element edges 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * ClosedLoopSelection
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
