#ifndef NXOpen_CAE_POSTSCENARIOPARAMETERS_HXX_INCLUDED
#define NXOpen_CAE_POSTSCENARIOPARAMETERS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostScenarioParameters.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostScenarioParameters;
    }
    namespace CAE
    {
        class IPostScenarioDataSource;
    }
    namespace CAE
    {
        class PostScenarioDescriptor;
    }
    namespace CAE
    {
    }
    namespace CAE
    {
        class PostScenarioParametersImpl;
        /**  @brief  The class represents the @link NXOpen::CAE::PostScenarioParameters NXOpen::CAE::PostScenarioParameters@endlink  used 
                to instanciate a @link NXOpen::CAE::PostScenarioBuilder NXOpen::CAE::PostScenarioBuilder@endlink .  

           <br> To create a new instance of this class, use @link NXOpen::CAE::PostScenarioManager::NewPostScenarioParameters  NXOpen::CAE::PostScenarioManager::NewPostScenarioParameters @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostScenarioParameters : public NXOpen::TransientObject
        {
            private: PostScenarioParametersImpl * m_postscenarioparameters_impl;
            /// \cond NX_NO_DOC 
            public: explicit PostScenarioParameters(void *ptr);
            /// \endcond 
            /**Returns  the scenario descriptor used by the post scenario. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PostScenarioDescriptor * ScenarioDescriptor
            (
            );
            /**Sets  the scenario descriptor used by the post scenario. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetScenarioDescriptor
            (
                NXOpen::CAE::PostScenarioDescriptor * scenarioDesc /** scenariodesc */ 
            );
            /**Returns  the data source object to be processed by the post scenario. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::IPostScenarioDataSource * DataSource
            (
            );
            /**Sets  the data source object to be processed by the post scenario. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetDataSource
            (
                NXOpen::CAE::IPostScenarioDataSource * dataSource /** datasource */ 
            );
            /**Returns  the index of a view port on the main graphic window, on which the plot graph will be shown. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: int ViewPortIndex
            (
            );
            /**Sets  the index of a view port on the main graphic window, on which the plot graph will be shown. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetViewPortIndex
            (
                int viewPortIndex /** viewportindex */ 
            );
            /** Destroys the object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~PostScenarioParameters();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
