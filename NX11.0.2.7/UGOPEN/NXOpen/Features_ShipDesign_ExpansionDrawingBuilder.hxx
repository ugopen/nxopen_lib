#ifndef NXOpen_FEATURES_SHIPDESIGN_EXPANSIONDRAWINGBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_EXPANSIONDRAWINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_ExpansionDrawingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ShipDesign_DrawingTemplateBuilder.hxx>
#include <NXOpen/Features_ShipDesign_ExpansionDrawingBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class ExpansionDrawingBuilder;
        }
    }
    class Builder;
    namespace Features
    {
        namespace ShipDesign
        {
            class DrawingTemplateBuilder;
        }
    }
    class Plane;
    class SelectNXObjectList;
    namespace Features
    {
        namespace ShipDesign
        {
            class _ExpansionDrawingBuilderBuilder;
            class ExpansionDrawingBuilderImpl;
            /**
                Represents a @link NXOpen::Features::ShipDesign::ExpansionDrawingBuilder NXOpen::Features::ShipDesign::ExpansionDrawingBuilder@endlink . This class is used to create expansion drawing
                and just returns NULL
                 <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateExpansionDrawingBuilder  NXOpen::Features::ShipCollection::CreateExpansionDrawingBuilder @endlink  <br> 
             <br>  Created in NX10.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  ExpansionDrawingBuilder : public NXOpen::Builder
            {
                /** the standard Metric drawing sheet scales */
                public: enum JaExpansiondrawingbuilderMetricScale
                {
                    JaExpansiondrawingbuilderMetricScaleS501/** a scale of 50:1 */,
                    JaExpansiondrawingbuilderMetricScaleS201/** a scale of 20:1 */,
                    JaExpansiondrawingbuilderMetricScaleS101/** a scale of 10:1 */,
                    JaExpansiondrawingbuilderMetricScaleS51/** a scale of 5:1 */,
                    JaExpansiondrawingbuilderMetricScaleS21/** a scale of 2:1 */,
                    JaExpansiondrawingbuilderMetricScaleS11/** a scale of 1:1 */,
                    JaExpansiondrawingbuilderMetricScaleS12/** a scale of 1:2 */,
                    JaExpansiondrawingbuilderMetricScaleS15/** a scale of 1:5 */,
                    JaExpansiondrawingbuilderMetricScaleS110/** a scale of 1:10 */,
                    JaExpansiondrawingbuilderMetricScaleS120/** a scale of 1:20 */,
                    JaExpansiondrawingbuilderMetricScaleS150/** a scale of 1:50 */,
                    JaExpansiondrawingbuilderMetricScaleS1100/** a scale of 1:100 */,
                    JaExpansiondrawingbuilderMetricScaleCustom/** a custom scale */,
                    JaExpansiondrawingbuilderMetricScaleDefault/** default scale */
                };

                /** the standard English drawing sheet scales */
                public: enum JaExpansiondrawingbuilderEnglishScale
                {
                    JaExpansiondrawingbuilderEnglishScaleS81/** a scale of 8:1 */,
                    JaExpansiondrawingbuilderEnglishScaleS41/** a scale of 4:1 */,
                    JaExpansiondrawingbuilderEnglishScaleS21/** a scale of 2:1 */,
                    JaExpansiondrawingbuilderEnglishScaleS11/** a scale of 1:1 */,
                    JaExpansiondrawingbuilderEnglishScaleS12/** a scale of 1:2 */,
                    JaExpansiondrawingbuilderEnglishScaleS14/** a scale of 1:4 */,
                    JaExpansiondrawingbuilderEnglishScaleS18/** a scale of 1:8 */,
                    JaExpansiondrawingbuilderEnglishScaleCustom/** a custom scale */,
                    JaExpansiondrawingbuilderEnglishScaleDefault/** default scale */
                };

                private: ExpansionDrawingBuilderImpl * m_expansiondrawingbuilder_impl;
                private: friend class  _ExpansionDrawingBuilderBuilder;
                protected: ExpansionDrawingBuilder();
                public: ~ExpansionDrawingBuilder();
                /**Returns  the drawing template 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::DrawingTemplateBuilder * DrawingTemplate
                (
                );
                /**Returns  the plates to be expanded 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObjectList * PlatesToExpand
                (
                );
                /**Returns  the base plane 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Plane * BasePlane
                (
                );
                /**Sets  the base plane 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void SetBasePlane
                (
                    NXOpen::Plane * basePlane /** baseplane */ 
                );
                /**Returns  the upper plane 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Plane * UpperPlane
                (
                );
                /**Sets  the upper plane 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void SetUpperPlane
                (
                    NXOpen::Plane * upperPlane /** upperplane */ 
                );
                /**Returns  the fore plane 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Plane * ForePlane
                (
                );
                /**Sets  the fore plane 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void SetForePlane
                (
                    NXOpen::Plane * forePlane /** foreplane */ 
                );
                /**Returns  the aft plane 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Plane * AftPlane
                (
                );
                /**Sets  the aft plane 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void SetAftPlane
                (
                    NXOpen::Plane * aftPlane /** aftplane */ 
                );
                /**Returns  the tolerance 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: double Tolerance
                (
                );
                /**Sets  the tolerance 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void SetTolerance
                (
                    double tolerance /** tolerance */ 
                );
                /**Returns  the flag to indicate to either create or edit a Ship Expansion View. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsEdit
                (
                );
                /**Sets  the flag to indicate to either create or edit a Ship Expansion View. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void SetEdit
                (
                    bool isEdit /** isedit */ 
                );
                /**Returns  the basic design application flag 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool BasicDesignMode
                (
                );
                /**Sets  the basic design application flag 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void SetBasicDesignMode
                (
                    bool isBasic /** isbasic */ 
                );
                /**Returns  the Metric drawing scale 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ExpansionDrawingBuilder::JaExpansiondrawingbuilderMetricScale MetricScale
                (
                );
                /**Sets  the Metric drawing scale 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void SetMetricScale
                (
                    NXOpen::Features::ShipDesign::ExpansionDrawingBuilder::JaExpansiondrawingbuilderMetricScale metricScale /** the Metric drawing scale */
                );
                /**Returns  the English drawing scale 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ExpansionDrawingBuilder::JaExpansiondrawingbuilderEnglishScale EnglishScale
                (
                );
                /**Sets  the English drawing scale 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void SetEnglishScale
                (
                    NXOpen::Features::ShipDesign::ExpansionDrawingBuilder::JaExpansiondrawingbuilderEnglishScale englishScale /** the English drawing scale */
                );
                /**Returns  the numerator of a custom scale 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: double ScaleNumerator
                (
                );
                /**Sets  the numerator of a custom scale 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void SetScaleNumerator
                (
                    double scaleNumerator /** scale numerator */ 
                );
                /**Returns  the denominator of a custom scale 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: double ScaleDenominator
                (
                );
                /**Sets  the denominator of a custom scale 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void SetScaleDenominator
                (
                    double scaleDenominator /** the denominator of a custom scale */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
