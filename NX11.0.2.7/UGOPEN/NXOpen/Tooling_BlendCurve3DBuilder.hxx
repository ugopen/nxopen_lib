#ifndef NXOpen_TOOLING_BLENDCURVE3DBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_BLENDCURVE3DBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_BlendCurve3DBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Tooling_BlendCurve3DBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class BlendCurve3DBuilder;
    }
    class Builder;
    class Curve;
    class Direction;
    class ScCollector;
    namespace Tooling
    {
        class _BlendCurve3DBuilderBuilder;
        class BlendCurve3DBuilderImpl;
        /**Represents a @link NXOpen::Tooling::BlendCurve3DBuilder NXOpen::Tooling::BlendCurve3DBuilder@endlink  builder which implements 
            blend curves in one side where the corner radius is too small. This builder's Commit generally
            can produce only one (sometimes more than one) new blended curve, the GetCommittedObjects can be 
            used to get the objects. The input curves will be deleted.  <br> To create a new instance of this class, use @link NXOpen::Tooling::CAMDataManager::CreateBlendCurve3dBuilder  NXOpen::Tooling::CAMDataManager::CreateBlendCurve3dBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        BlendCurveOption </td> <td> 
         
        Vector </td> </tr> 

        <tr><td> 
         
        DistanceTolerance </td> <td> 
         
        0.0254 (millimeters part), 0.001 (inches part) </td> </tr> 

        <tr><td> 
         
        InputCurves </td> <td> 
         
        Hide </td> </tr> 

        <tr><td> 
         
        MinimalRadius </td> <td> 
         
        10 (millimeters part), 0.4 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  BlendCurve3DBuilder : public NXOpen::Builder
        {
            /** The blend curve creation methods: Best Fit, Variable, Vector, Current View */
            public: enum BlendCurveOptions
            {
                BlendCurveOptionsBestFit/** Create blend curve by best fit method */,
                BlendCurveOptionsVariable/** Create blend curve by variable method */,
                BlendCurveOptionsVector/** Create blend curve by vector method */,
                BlendCurveOptionsCurrentView/** Create blend curve by current view method */
            };

            /** The input curves option to keep, hide or delete input curves */
            public: enum InputCurvesOption
            {
                InputCurvesOptionKeep/** Keep input curves */,
                InputCurvesOptionHide/** Hide input curves */,
                InputCurvesOptionDelete/** Delete input curves */
            };

            private: BlendCurve3DBuilderImpl * m_blendcurve3dbuilder_impl;
            private: friend class  _BlendCurve3DBuilderBuilder;
            protected: BlendCurve3DBuilder();
            public: ~BlendCurve3DBuilder();
            /**Returns  the curves to blend. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * CurveBlend
            (
            );
            /**Returns  the reference direction from which to get the curve blend side. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * ReferenceDirection
            (
            );
            /**Sets  the reference direction from which to get the curve blend side. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") */
            public: void SetReferenceDirection
            (
                NXOpen::Direction * referenceDirection /** referencedirection */ 
            );
            /**Returns  the corners to blend. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * CornerFillet
            (
            );
            /**Returns  the minimal radius of the corner to blend. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double MinimalRadius
            (
            );
            /**Sets  the minimal radius of the corner to blend. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") */
            public: void SetMinimalRadius
            (
                double minimalRadius /** minimalradius */ 
            );
            /**Returns  the flag of reverse curve blend side. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseSide
            (
            );
            /**Sets  the flag of reverse curve blend side. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") */
            public: void SetReverseSide
            (
                bool reverseSide /** reverseside */ 
            );
            /**Returns  the blend curve option 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::BlendCurve3DBuilder::BlendCurveOptions BlendCurveOption
            (
            );
            /**Sets  the blend curve option 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") */
            public: void SetBlendCurveOption
            (
                NXOpen::Tooling::BlendCurve3DBuilder::BlendCurveOptions blendCurveOption /** blendcurveoption */ 
            );
            /**Returns  the input curves 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::BlendCurve3DBuilder::InputCurvesOption InputCurves
            (
            );
            /**Sets  the input curves 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") */
            public: void SetInputCurves
            (
                NXOpen::Tooling::BlendCurve3DBuilder::InputCurvesOption inputCurves /** inputcurves */ 
            );
            /**Returns  the distance tolerance. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double DistanceTolerance
            (
            );
            /**Sets  the distance tolerance. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_freeform_2 ("advanced freeform modeling") OR die_engineering ("DIE ENGINEERING") */
            public: void SetDistanceTolerance
            (
                double distanceTolerance /** distancetolerance */ 
            );
            /** Save the corner fillet curves. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SaveFilletCurves
            (
            );
            /** Creates the blend curves for preview.  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Curve *> CreateBlendCurves
            (
            );
            /** Delete the preview blend curves. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void DeleteBlendCurves
            (
                const std::vector<NXOpen::Curve *> & blendCurves /** blendcurves */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
