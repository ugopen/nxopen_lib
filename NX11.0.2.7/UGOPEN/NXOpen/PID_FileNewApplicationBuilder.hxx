#ifndef NXOpen_PID_FILENEWAPPLICATIONBUILDER_HXX_INCLUDED
#define NXOpen_PID_FILENEWAPPLICATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PID_FileNewApplicationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Assemblies_Partition.hxx>
#include <NXOpen/CollaborativeDesign.hxx>
#include <NXOpen/FileNew.hxx>
#include <NXOpen/Gateway_IGenericFileNewApplicationBuilder.hxx>
#include <NXOpen/PID_FileNewApplicationBuilder.hxx>
#include <NXOpen/Part.hxx>
#include <NXOpen/libpidopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PID
    {
        class FileNewApplicationBuilder;
    }
    namespace Assemblies
    {
        class Partition;
    }
    class CollaborativeDesign;
    namespace Gateway
    {
        class IGenericFileNewApplicationBuilder;
    }
    namespace PID
    {
        class _FileNewApplicationBuilderBuilder;
        class FileNewApplicationBuilderImpl;
        /** Represents a builder class that performs Generic File New operations.
                 <br> To create a new instance of this class, use @link NXOpen::PID::PidManager::CreateFilenewapplicationBuilder  NXOpen::PID::PidManager::CreateFilenewapplicationBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class PIDOPENCPPEXPORT  FileNewApplicationBuilder : public NXOpen::Gateway::IGenericFileNewApplicationBuilder
        {
            private: FileNewApplicationBuilderImpl * m_filenewapplicationbuilder_impl;
            private: friend class  _FileNewApplicationBuilderBuilder;
            protected: FileNewApplicationBuilder();
            public: ~FileNewApplicationBuilder();
            /**Returns  the presentation name of the underlying template which is used for creating new file  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: NXString TemplatePresentationName
            (
            );
            /**Sets  the presentation name of the underlying template which is used for creating new file  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetTemplatePresentationName
            (
                const NXString & presentationName /** presentationname */ 
            );
            /**Sets  the presentation name of the underlying template which is used for creating new file  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            void SetTemplatePresentationName
            (
                const char * presentationName /** presentationname */ 
            );
            /**Returns  the template type for the new file being created 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: NXOpen::FileNewTemplateType TemplateType
            (
            );
            /**Sets  the template type for the new file being created 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetTemplateType
            (
                NXOpen::FileNewTemplateType templateType /** templatetype */ 
            );
            /**Sets  the units for the new file being created 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetTemplateUnits
            (
                NXOpen::Part::Units units /** units */ 
            );
            /**Returns  the units for the new file being created 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: NXOpen::Part::Units TemplateUnits
            (
            );
            /**Returns  the name of the template part from which to create the new file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: NXString TemplateFileName
            (
            );
            /**Sets  the name of the template part from which to create the new file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetTemplateFileName
            (
                const NXString & templateFileName /** templatefilename */ 
            );
            /**Sets  the name of the template part from which to create the new file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            void SetTemplateFileName
            (
                const char * templateFileName /** templatefilename */ 
            );
            /**Returns  the BaseTCType of the template part from which to create the new file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: NXString TemplateBaseTcType
            (
            );
            /**Sets  the BaseTCType of the template part from which to create the new file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetTemplateBaseTcType
            (
                const NXString & baseTCType /** basetctype */ 
            );
            /**Sets  the BaseTCType of the template part from which to create the new file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            void SetTemplateBaseTcType
            (
                const char * baseTCType /** basetctype */ 
            );
            /**Returns  the TCType of the template part from which to create the new file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: NXString TemplateTcType
            (
            );
            /**Sets  the TCType of the template part from which to create the new file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetTemplateTcType
            (
                const NXString & tcType /** tctype */ 
            );
            /**Sets  the TCType of the template part from which to create the new file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            void SetTemplateTcType
            (
                const char * tcType /** tctype */ 
            );
            /** The @link NXOpen::CollaborativeDesign NXOpen::CollaborativeDesign@endlink  of the subset.
                     @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: NXOpen::CollaborativeDesign * GetCollaborativeDesign
            (
            );
            /** The @link NXOpen::CollaborativeDesign NXOpen::CollaborativeDesign@endlink  of the subset.
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetCollaborativeDesign
            (
                NXOpen::CollaborativeDesign * collaborativeDesign /** collaborativedesign */ 
            );
            /** The @link NXOpen::Assemblies::Partition NXOpen::Assemblies::Partition@endlink  of the subset.
                     @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: std::vector<NXOpen::Assemblies::Partition *> GetTargetPartitions
            (
            );
            /** The @link Assemblies::Partition Assemblies::Partition@endlink  of the subset.
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetTargetPartitions
            (
                const std::vector<NXOpen::Assemblies::Partition *> & partitions /** partitions */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
