#ifndef NXOpen_AME_EPLANSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_AME_EPLANSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_EplanSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_EplanSettingsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class EplanSettingsBuilder;
    }
    class Builder;
    namespace AME
    {
        class _EplanSettingsBuilderBuilder;
        class EplanSettingsBuilderImpl;
        /** EplanSettingsBuilder  <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateEplanSettingsBuilder  NXOpen::AME::AMEManager::CreateEplanSettingsBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  EplanSettingsBuilder : public NXOpen::Builder
        {
            private: EplanSettingsBuilderImpl * m_eplansettingsbuilder_impl;
            private: friend class  _EplanSettingsBuilderBuilder;
            protected: EplanSettingsBuilder();
            public: ~EplanSettingsBuilder();
            /**Returns  the id 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString Id
            (
            );
            /**Sets  the id 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetId
            (
                const NXString & id /** id */ 
            );
            /**Sets  the id 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetId
            (
                const char * id /** id */ 
            );
            /**Returns  the commission 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString Commission
            (
            );
            /**Sets  the commission 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetCommission
            (
                const NXString & commission /** commission */ 
            );
            /**Sets  the commission 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetCommission
            (
                const char * commission /** commission */ 
            );
            /**Returns  the control voltage 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString ControlVoltage
            (
            );
            /**Sets  the control voltage 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetControlVoltage
            (
                const NXString & controlVoltage /** controlvoltage */ 
            );
            /**Sets  the control voltage 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetControlVoltage
            (
                const char * controlVoltage /** controlvoltage */ 
            );
            /**Returns  the customer 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString Customer
            (
            );
            /**Sets  the customer 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetCustomer
            (
                const NXString & customer /** customer */ 
            );
            /**Sets  the customer 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetCustomer
            (
                const char * customer /** customer */ 
            );
            /**Returns  the name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString Name
            (
            );
            /**Sets  the name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the manufacturing year 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString ManufacturingYear
            (
            );
            /**Sets  the manufacturing year 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetManufacturingYear
            (
                const NXString & manufacturingYear /** manufacturingyear */ 
            );
            /**Sets  the manufacturing year 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetManufacturingYear
            (
                const char * manufacturingYear /** manufacturingyear */ 
            );
            /**Returns  the description 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString Description
            (
            );
            /**Sets  the description 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetDescription
            (
                const NXString & description /** description */ 
            );
            /**Sets  the description 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetDescription
            (
                const char * description /** description */ 
            );
            /**Returns  the location 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString Location
            (
            );
            /**Sets  the location 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetLocation
            (
                const NXString & location /** location */ 
            );
            /**Sets  the location 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetLocation
            (
                const char * location /** location */ 
            );
            /**Returns  the power input 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString PowerInput
            (
            );
            /**Sets  the power input 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetPowerInput
            (
                const NXString & powerInput /** powerinput */ 
            );
            /**Sets  the power input 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetPowerInput
            (
                const char * powerInput /** powerinput */ 
            );
            /**Returns  the project template file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString ProjectTemplateFile
            (
            );
            /**Sets  the project template file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetProjectTemplateFile
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the project template file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetProjectTemplateFile
            (
                const char * filename /** filename */ 
            );
            /** Returns the details  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: std::vector<NXString> GetDetails
            (
            );
            /** Sets the details 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetDetails
            (
                const std::vector<NXString> & details /** details */ 
            );
            /**Returns  the generation path 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString GenerationPath
            (
            );
            /**Sets  the generation path 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetGenerationPath
            (
                const NXString & foldername /** foldername */ 
            );
            /**Sets  the generation path 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetGenerationPath
            (
                const char * foldername /** foldername */ 
            );
            /** Reset the eplan project template information 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void ResetProjectTemplate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
