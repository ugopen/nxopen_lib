#ifndef NXOpen_DIE_DIEDIRECTIONBUILDER_HXX_INCLUDED
#define NXOpen_DIE_DIEDIRECTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_DieDirectionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die_DieDirectionBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_die_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Die
    {
        class DieDirectionBuilder;
    }
    class Direction;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class SelectNXObject;
    namespace Die
    {
        class _DieDirectionBuilderBuilder;
        class DieDirectionBuilderImpl;
        /**
            Represents a @link NXOpen::Die::DieDirectionBuilder NXOpen::Die::DieDirectionBuilder@endlink . The Die 
            Direction is a helper to the main Die Design feature to gather the 
            vector for items such as Trim direction or Flange direction. Note that
            if a coordinate system is specified, then the direction will be -Z of
            that coordinate system.
             <br> To create a new instance of this class, use @link NXOpen::Die::DieCollection::CreateDieDirection  NXOpen::Die::DieCollection::CreateDieDirection @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_DIEEXPORT  DieDirectionBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** the options available for defining the direction */
            public: enum DirectionType
            {
                DirectionTypeSelection/** Select a coordinate system (-Z) or plane for the direction. */,
                DirectionTypeCoordinateSystem/** Define a coordinate system (-Z) for the direction. */,
                DirectionTypeVector/** Define a vector for the direction. */
            };

            private: DieDirectionBuilderImpl * m_diedirectionbuilder_impl;
            private: friend class  _DieDirectionBuilderBuilder;
            protected: DieDirectionBuilder();
            public: ~DieDirectionBuilder();
            /**Returns  the type of input that defined the direction 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Die::DieDirectionBuilder::DirectionType InputType
            (
            );
            /**Sets  the type of input that defined the direction 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetInputType
            (
                NXOpen::Die::DieDirectionBuilder::DirectionType inputType /** inputtype */ 
            );
            /**Returns  the selected direction 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObject * Direction
            (
            );
            /**Returns  the specified vector 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * Vector
            (
            );
            /**Sets  the specified vector 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetVector
            (
                NXOpen::Direction * vector /** vector */ 
            );
            /**Returns  the coordinate system origin 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d CoordinateSystemOrigin
            (
            );
            /**Sets  the coordinate system origin 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCoordinateSystemOrigin
            (
                const NXOpen::Point3d & coordinateSystemOrigin /** coordinatesystemorigin */ 
            );
            /**Returns  the coordinate system matrix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Matrix3x3 CoordinateSystemMatrix
            (
            );
            /**Sets  the coordinate system matrix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCoordinateSystemMatrix
            (
                const NXOpen::Matrix3x3 & coordinateSystemMatrix /** coordinatesystemmatrix */ 
            );
            /**Returns  the indication if the source's direction should be reversed. True indicates the source's direction should be reversed
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseSourceDirection
            (
            );
            /**Sets  the indication if the source's direction should be reversed. True indicates the source's direction should be reversed
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetReverseSourceDirection
            (
                bool reverseSourceDirection /** reversesourcedirection */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
