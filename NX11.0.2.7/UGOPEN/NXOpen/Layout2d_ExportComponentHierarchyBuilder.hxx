#ifndef NXOpen_LAYOUT2D_EXPORTCOMPONENTHIERARCHYBUILDER_HXX_INCLUDED
#define NXOpen_LAYOUT2D_EXPORTCOMPONENTHIERARCHYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Layout2d_ExportComponentHierarchyBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Layout2d_ExportComponentHierarchyBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_layout2d_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Layout2d
    {
        class ExportComponentHierarchyBuilder;
    }
    class Builder;
    class SelectDisplayableObjectList;
    namespace Layout2d
    {
        class _ExportComponentHierarchyBuilderBuilder;
        class ExportComponentHierarchyBuilderImpl;
        /** Represents a Builder for export component 2D hierarchy  <br> To create a new instance of this class, use @link NXOpen::Layout2d::ComponentCollection::CreateExportComponentHierarchyBuilder  NXOpen::Layout2d::ComponentCollection::CreateExportComponentHierarchyBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_LAYOUT2DEXPORT  ExportComponentHierarchyBuilder : public NXOpen::Builder
        {
            private: ExportComponentHierarchyBuilderImpl * m_exportcomponenthierarchybuilder_impl;
            private: friend class  _ExportComponentHierarchyBuilderBuilder;
            protected: ExportComponentHierarchyBuilder();
            public: ~ExportComponentHierarchyBuilder();
            /**Returns  the selected objects which may be of @link NXOpen::Layout2d::Component NXOpen::Layout2d::Component@endlink  or @link NXOpen::Sketch NXOpen::Sketch@endlink  type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * Selection
            (
            );
            /**Returns  the selected output file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXString OutputFileName
            (
            );
            /**Sets  the selected output file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetOutputFileName
            (
                const NXString & outputFileName /** outputfilename */ 
            );
            /**Sets  the selected output file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            void SetOutputFileName
            (
                const char * outputFileName /** outputfilename */ 
            );
            /**Returns  the flag indicating whether to export definitions for components 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool Definitions
            (
            );
            /**Sets  the flag indicating whether to export definitions for components 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetDefinitions
            (
                bool definitions /** definitions */ 
            );
            /**Returns  the flag indicating whether to export definition reference properties for components 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool DefinitionReferenceProperties
            (
            );
            /**Sets  the flag indicating whether to export definition reference properties for components 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetDefinitionReferenceProperties
            (
                bool definitionReferenceProperties /** definitionreferenceproperties */ 
            );
            /**Returns  the flag indicating whether to export child components for components 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool ChildComponentsForComponents
            (
            );
            /**Sets  the flag indicating whether to export child components for components 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetChildComponentsForComponents
            (
                bool childComponentsForComponents /** childcomponentsforcomponents */ 
            );
            /**Returns  the flag indicating whether to export child components for definitions 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool ChildComponentsForDefinitions
            (
            );
            /**Sets  the flag indicating whether to export child components for definitions 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetChildComponentsForDefinitions
            (
                bool childComponentsForDefinitions /** childcomponentsfordefinitions */ 
            );
            /**Returns  the flag indicating whether to export software properties for components 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool SoftwareProperties
            (
            );
            /**Sets  the flag indicating whether to export software properties for components 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetSoftwareProperties
            (
                bool softwareProperties /** softwareproperties */ 
            );
            /**Returns  the flag indicating whether to export contents for components 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool Contents
            (
            );
            /**Sets  the flag indicating whether to export contents for components 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetContents
            (
                bool contents /** contents */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
