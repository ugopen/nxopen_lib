#ifndef NXOpen_CAE_CAEPART_HXX_INCLUDED
#define NXOpen_CAE_CAEPART_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CaePart.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_BeamSectionOffsetOptions.hxx>
#include <NXOpen/CAE_BeamSectionOptions.hxx>
#include <NXOpen/CAE_BeamSectionOrientationOptions.hxx>
#include <NXOpen/CAE_CaeDataContainer.hxx>
#include <NXOpen/CAE_MaterialOptions.hxx>
#include <NXOpen/CAE_SolverAppendOption.hxx>
#include <NXOpen/BasePart.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class CaePart;
    }
    class BasePart;
    namespace CAE
    {
        class BeamSectionOffsetOptions;
    }
    namespace CAE
    {
        class BeamSectionOptions;
    }
    namespace CAE
    {
        class BeamSectionOrientationOptions;
    }
    namespace CAE
    {
        class BoundingVolumeCollection;
    }
    namespace CAE
    {
        class CaeDataContainer;
    }
    namespace CAE
    {
        class CaeGroupCollection;
    }
    namespace CAE
    {
        class LayoutStateCollection;
    }
    namespace CAE
    {
        class MaterialOptions;
    }
    namespace CAE
    {
        class MeshControlDisplayManager;
    }
    namespace CAE
    {
        namespace ModelCheck
        {
            class ElementQualitySettingCollection;
        }
    }
    namespace CAE
    {
        class ModelCheckManager;
    }
    namespace CAE
    {
        class ModelDisplayBuilder;
    }
    namespace CAE
    {
        class ModelingObjectPropertyTableCollection;
    }
    namespace CAE
    {
        class NodeElementInfoManager;
    }
    namespace CAE
    {
        class PhysicalPropertyTableCollection;
    }
    namespace CAE
    {
        class PostScenarioManager;
    }
    namespace CAE
    {
        class QueryCurveManager;
    }
    namespace CAE
    {
        class SelectElementsManager;
    }
    namespace CAE
    {
        class ShowHideManager;
    }
    namespace CAE
    {
        class SmartSelectionManager;
    }
    namespace CAE
    {
        class SolverAppendOption;
    }
    class CoordinateSystem;
    namespace CAE
    {
        class _CaePartBuilder;
        class CaePartImpl;
        /**  @brief  This is an abstract class for NX parts of type .fem and .sim  

           <br> This is an abstract class  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  CaePart : public NXOpen::BasePart
        {
            private: CaePartImpl * m_caepart_impl;
            private: friend class  _CaePartBuilder;
            protected: CaePart();
            public: ~CaePart();
            /** Creates a @link  NXOpen::CAE::MaterialOptions   NXOpen::CAE::MaterialOptions @endlink 
                     @return  the material options object created 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::MaterialOptions * NewMaterialOptions
            (
            );
            /** Exports JT file
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void ExportJt
            (
                const NXString & fileName /** the JT file name to be created */
            );
            /** Exports JT file
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void ExportJt
            (
                const char * fileName /** the JT file name to be created */
            );
            /** Exports the Simulation data for a @link  NXOpen::CAE::CaePart   NXOpen::CAE::CaePart @endlink .
                         <br> 
                        For a @link  NXOpen::CAE::SimPart   NXOpen::CAE::SimPart @endlink , the data will be exported for the
                        active solution @link  NXOpen::CAE::SimSolution   NXOpen::CAE::SimSolution @endlink  if its solver matches
                        the specified solverName.
                         <br>  <br> 
                        For a @link  NXOpen::CAE::FemPart   NXOpen::CAE::FemPart @endlink , the data will be exported only if the solver
                        defined for the @link  NXOpen::CAE::FemPart   NXOpen::CAE::FemPart @endlink  matches the specified solverName.
                         <br>  <br> 
                        Export is driven by the properties defined in the input
                        @link  NXOpen::CAE::CaeDataContainer   NXOpen::CAE::CaeDataContainer @endlink  propertyList.  The exact properties can vary from
                        solver to solver. An accurate list of property names is obtained by journaling the opertation first.
                         <br> 

                        
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void ExportSimulation
            (
                const NXString & solverName /** the name of the solver export */,
                NXOpen::CAE::CaeDataContainer * propertyList /** the export parameters. See @link CAE::CaeSession::GetDataContainer  CAE::CaeSession::GetDataContainer @endlink .
                 */
            );
            /** Exports the Simulation data for a @link  NXOpen::CAE::CaePart   NXOpen::CAE::CaePart @endlink .
                         <br> 
                        For a @link  NXOpen::CAE::SimPart   NXOpen::CAE::SimPart @endlink , the data will be exported for the
                        active solution @link  NXOpen::CAE::SimSolution   NXOpen::CAE::SimSolution @endlink  if its solver matches
                        the specified solverName.
                         <br>  <br> 
                        For a @link  NXOpen::CAE::FemPart   NXOpen::CAE::FemPart @endlink , the data will be exported only if the solver
                        defined for the @link  NXOpen::CAE::FemPart   NXOpen::CAE::FemPart @endlink  matches the specified solverName.
                         <br>  <br> 
                        Export is driven by the properties defined in the input
                        @link  NXOpen::CAE::CaeDataContainer   NXOpen::CAE::CaeDataContainer @endlink  propertyList.  The exact properties can vary from
                        solver to solver. An accurate list of property names is obtained by journaling the opertation first.
                         <br> 

                        
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void ExportSimulation
            (
                const char * solverName /** the name of the solver export */,
                NXOpen::CAE::CaeDataContainer * propertyList /** the export parameters. See @link CAE::CaeSession::GetDataContainer  CAE::CaeSession::GetDataContainer @endlink .
                 */
            );
            /** Creates a @link  NXOpen::CAE::BeamSectionOptions   NXOpen::CAE::BeamSectionOptions @endlink 
                     @return  the syncrhonize options object created 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamSectionOptions * NewBeamSectionOptions
            (
            );
            /** Creates a builder for model display controls command @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ModelDisplayBuilder * CreateModelDisplayBuilder
            (
            );
            /** Gets the description assoicated with the Cae part
                    
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetDescription
            (
                std::vector<NXString> & description /** description */
            );
            /** Sets the description assoicated with the Cae part
                    
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetDescription
            (
                std::vector<NXString> & description /** description */
            );
            /** Creates a @link  NXOpen::CAE::BeamSectionOrientationOptions   NXOpen::CAE::BeamSectionOrientationOptions @endlink 
                     @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamSectionOrientationOptions * NewBeamSectionOrientationOptions
            (
            );
            /** Creates a @link  NXOpen::CAE::BeamSectionOffsetOptions   NXOpen::CAE::BeamSectionOffsetOptions @endlink 
                     @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamSectionOffsetOptions * NewBeamSectionOffsetOptions
            (
            );
            /** Imports the solver specific data into an existing @link  NXOpen::CAE::FemPart   NXOpen::CAE::FemPart @endlink  or
                        @link  NXOpen::CAE::SimPart   NXOpen::CAE::SimPart @endlink .
                         <br> 
                        The data will be imported only if the solver defined for the @link  NXOpen::CAE::FemPart   NXOpen::CAE::FemPart @endlink 
                        or @link  NXOpen::CAE::SimPart   NXOpen::CAE::SimPart @endlink  matches the specified solverName.
                         <br>  <br> 
                        Import is driven by the properties defined in the input
                        @link  NXOpen::CAE::CaeDataContainer   NXOpen::CAE::CaeDataContainer @endlink  propertyList.  The exact properties can vary from
                        solver to solver. An accurate list of property names is obtained by journaling the opertation first.
                         <br> 
                    
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void ImportExistingSimulation
            (
                const NXString & solverName /** the name of the solver import */,
                NXOpen::CAE::CaeDataContainer * propertyList /** the import parameters. See @link CAE::CaeSession::GetDataContainer  CAE::CaeSession::GetDataContainer @endlink .
                 */
            );
            /** Imports the solver specific data into an existing @link  NXOpen::CAE::FemPart   NXOpen::CAE::FemPart @endlink  or
                        @link  NXOpen::CAE::SimPart   NXOpen::CAE::SimPart @endlink .
                         <br> 
                        The data will be imported only if the solver defined for the @link  NXOpen::CAE::FemPart   NXOpen::CAE::FemPart @endlink 
                        or @link  NXOpen::CAE::SimPart   NXOpen::CAE::SimPart @endlink  matches the specified solverName.
                         <br>  <br> 
                        Import is driven by the properties defined in the input
                        @link  NXOpen::CAE::CaeDataContainer   NXOpen::CAE::CaeDataContainer @endlink  propertyList.  The exact properties can vary from
                        solver to solver. An accurate list of property names is obtained by journaling the opertation first.
                         <br> 
                    
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void ImportExistingSimulation
            (
                const char * solverName /** the name of the solver import */,
                NXOpen::CAE::CaeDataContainer * propertyList /** the import parameters. See @link CAE::CaeSession::GetDataContainer  CAE::CaeSession::GetDataContainer @endlink .
                 */
            );
            /** Returns a solver append option object for importing the solver specific data into an existing
                        @link  NXOpen::CAE::FemPart   NXOpen::CAE::FemPart @endlink  or @link  NXOpen::CAE::SimPart   NXOpen::CAE::SimPart @endlink .
                     @return  the object of solver append option 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SolverAppendOption * CreateSolverAppendOption
            (
            );
            /** Deletes a solver append option object for importing the solver specific data into an existing
                        @link  NXOpen::CAE::FemPart   NXOpen::CAE::FemPart @endlink  or @link  NXOpen::CAE::SimPart   NXOpen::CAE::SimPart @endlink .
                    
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void DeleteSolverAppendOption
            (
                NXOpen::CAE::SolverAppendOption * appendOption /** the object of solver append option */
            );
            /** Gets the resolved label of csys in cae part.
                     @return  resolved label 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: int GetCsysFlattenedLabel
            (
                NXOpen::CoordinateSystem * csys /** coordinate system */
            );


            /** Returns the physical property table collection belonging to this CAE Part 
             <br>  Created in NX3.0.0.  <br>  
            */
            public: NXOpen::CAE::PhysicalPropertyTableCollection *PhysicalPropertyTables();
            /** Returns the modeling object property table collection belonging to this CAE Part 
             <br>  Created in NX3.0.0.  <br>  
            */
            public: NXOpen::CAE::ModelingObjectPropertyTableCollection *ModelingObjectPropertyTables();
            /** Returns the CAE Group collection belonging to this Part 
             <br>  Created in NX3.0.0.  <br>  
            */
            public: NXOpen::CAE::CaeGroupCollection *CaeGroups();
            /** Returns the smart selection manager belonging to this part 
             <br>  Created in NX3.0.0.  <br>  
            */
            public: NXOpen::CAE::SmartSelectionManager *SmartSelectionMgr();
            /** Returns the node element info manager belonging to this IFem 
             <br>  Created in NX3.0.0.  <br>  
            */
            public: NXOpen::CAE::NodeElementInfoManager *NodeElementInfoMgr();
            /** Returns the select element manager belonging to this IFem 
             <br>  Created in NX3.0.0.  <br>  
            */
            public: NXOpen::CAE::SelectElementsManager *SelectElementMgr();
            /** Returns the mesh control display manager belonging to this IFem 
             <br>  Created in NX3.0.0.  <br>  
            */
            public: NXOpen::CAE::MeshControlDisplayManager *MeshControlDisplayMgr();
            /** Returns the select element manager belonging to this IFem 
             <br>  Created in NX3.0.0.  <br>  
            */
            public: NXOpen::CAE::ModelCheckManager *ModelCheckMgr();
            /** Returns the show hide manager belonging to the part 
             <br>  Created in NX3.0.0.  <br>  
            */
            public: NXOpen::CAE::ShowHideManager *ShowHideMgr();
            /** Returns the element quality settings collection belonging to this CAE Part 
             <br>  Created in NX8.5.0.  <br>  
            */
            public: NXOpen::CAE::ModelCheck::ElementQualitySettingCollection *ElementQualitySettings();
            /** Returns the CAE query curve manager belonging to this Part 
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::CAE::QueryCurveManager *CaeQueryCurves();
            /** Contains a @link NXOpen::CAE::LayoutStateCollection NXOpen::CAE::LayoutStateCollection@endlink . 
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::CAE::LayoutStateCollection *LayoutStates();
            /** Contains a @link NXOpen::CAE::PostScenarioManager NXOpen::CAE::PostScenarioManager@endlink . 
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::CAE::PostScenarioManager *PostScenarioMgr();
            /** Contains a @link NXOpen::CAE::BoundingVolumeCollection NXOpen::CAE::BoundingVolumeCollection@endlink . 
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::CAE::BoundingVolumeCollection *BoundingVolumes();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
