#ifndef NXOpen_CAM_ROBOTPOSEMOVE_HXX_INCLUDED
#define NXOpen_CAM_ROBOTPOSEMOVE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_RobotPoseMove.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_RobotPoseMove.hxx>
#include <NXOpen/CAM_MoveBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class RobotPoseMove;
    }
    namespace CAM
    {
        class MoveBuilder;
    }
    namespace CAM
    {
        class _RobotPoseMoveBuilder;
        class RobotPoseMoveImpl;

        /// \cond NX_NO_DOC 
        /** represents the Rotary Move To Point Builder  <br> To create a new instance of this class, use @link NXOpen::CAM::MoveCollection::CreateRobotPoseMove  NXOpen::CAM::MoveCollection::CreateRobotPoseMove @endlink  <br> 
         <br>  Created in NX11.0.1.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  RobotPoseMove : public NXOpen::CAM::MoveBuilder
        {
            private: RobotPoseMoveImpl * m_robotposemove_impl;
            private: friend class  _RobotPoseMoveBuilder;
            protected: RobotPoseMove();
            public: ~RobotPoseMove();

            /// \cond NX_NO_DOC 
            /** Set real array to the parameter index for the object. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPose
            (
                std::vector<NXString> & poseNames /** the names of the joints */,
                const std::vector<double> & poseValues /** parallel array with the values of the joints */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Get the string array value of the parameter index from the object.   @return  the string array 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: std::vector<NXString> GetPoseNames
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Get the real array value of the parameter index from the object.  @return  the real array 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: std::vector<double> GetPoseValues
            (
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
