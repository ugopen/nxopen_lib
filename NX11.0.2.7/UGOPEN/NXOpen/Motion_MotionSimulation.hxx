#ifndef NXOpen_MOTION_MOTIONSIMULATION_HXX_INCLUDED
#define NXOpen_MOTION_MOTIONSIMULATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_MotionSimulation.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class MotionSimulation;
    }
    class Session;
    class NXObject;
    namespace Motion
    {
        class MotionSimulationImpl;
        /** Represents Motion.Simulation  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  MotionSimulation
        {
            private: MotionSimulationImpl * m_motionsimulation_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit MotionSimulation(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~MotionSimulation();
            /** Save the simulation through input part name 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SaveSimulation
            (
                NXOpen::NXObject * masterPart /** the master part object */,
                const NXString & motionSimName /** the motion simulation part name which ready to be saved */
            );
            /** Save the simulation through input part name 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SaveSimulation
            (
                NXOpen::NXObject * masterPart /** the master part object */,
                const char * motionSimName /** the motion simulation part name which ready to be saved */
            );
            /** Save the simulation through input part object 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SaveSimulation
            (
                NXOpen::NXObject * masterPart /** the master part object */,
                NXOpen::NXObject * motionSimPart /** the motion simulation part which ready to be saved */
            );
            /** Load the simulation 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void LoadSimulation
            (
                NXOpen::NXObject * masterPart /** the master part object */,
                const NXString & motionSimName /** the motion simulation name to load */
            );
            /** Load the simulation 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void LoadSimulation
            (
                NXOpen::NXObject * masterPart /** the master part object */,
                const char * motionSimName /** the motion simulation name to load */
            );
            /** Unload the simulation through input part name 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void UnloadSimulation
            (
                NXOpen::NXObject * masterPart /** the master part object */,
                const NXString & motionSimName /** the motion simulation name to unload*/
            );
            /** Unload the simulation through input part name 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void UnloadSimulation
            (
                NXOpen::NXObject * masterPart /** the master part object */,
                const char * motionSimName /** the motion simulation name to unload*/
            );
            /** Unload the simulation through input part object 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void UnloadSimulation
            (
                NXOpen::NXObject * masterPart /** the master part object */,
                NXOpen::NXObject * motionSimPart /** the motion simulation to unload*/
            );
            /** Rename the simulation 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void RenameSimulation
            (
                NXOpen::NXObject * masterPart /** the master part object */,
                const NXString & oldMotionSimName /** the motion simulation part name which ready to be renamed */,
                const NXString & newMotionSimName /** the new motion simulation part name */
            );
            /** Rename the simulation 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void RenameSimulation
            (
                NXOpen::NXObject * masterPart /** the master part object */,
                const char * oldMotionSimName /** the motion simulation part name which ready to be renamed */,
                const char * newMotionSimName /** the new motion simulation part name */
            );
            /** Calculate the gruebler count of given motion part  @return  gruebler count 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: int CalculateGrueblerCount
            (
                NXOpen::NXObject * motionPart /** motion part object */
            );
            /** Export Recurdyn sdk data, need an active solution in simulation 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void ExportRecurdynSdk
            (
                const NXString & fullFileName /** full name with directory and extension*/
            );
            /** Export Recurdyn sdk data, need an active solution in simulation 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void ExportRecurdynSdk
            (
                const char * fullFileName /** full name with directory and extension*/
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
