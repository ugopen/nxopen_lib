#ifndef NXOpen_PREFERENCES_SHIPBUILDINGLINESVIEWPREFERENCES_HXX_INCLUDED
#define NXOpen_PREFERENCES_SHIPBUILDINGLINESVIEWPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_ShipbuildingLinesViewPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Preferences_ViewStylePreferencesData.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_preferences_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Preferences
    {
        class ShipbuildingLinesViewPreferences;
    }
    namespace Preferences
    {
        class ViewPreferences;
    }
    namespace Preferences
    {
        class ShipbuildingLinesViewPreferencesImpl;
        /** Represents set of Shipbuilding Lines View Preferences applicable to drafting views. 
                Shipbuilding lines are used for a Profile or a Plate feature in Ship Design  <br> To obtain an instance of this class use @link Preferences::ViewPreferences::ShipbuildingLines Preferences::ViewPreferences::ShipbuildingLines@endlink   <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_PREFERENCESEXPORT  ShipbuildingLinesViewPreferences
        {
            /** Line type */
            public: enum Lines
            {
                LinesHidden/** Hidden */,
                LinesVisible/** Visible */
            };

            /** Geometry type */
            public: enum ShipbuildingLines
            {
                ShipbuildingLinesProfile/** Profile */,
                ShipbuildingLinesPlate/** Plate */
            };

            private: ShipbuildingLinesViewPreferencesImpl * m_shipbuildinglinesviewpreferences_impl;
            private: NXOpen::Preferences::ViewPreferences* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit ShipbuildingLinesViewPreferences(NXOpen::Preferences::ViewPreferences *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~ShipbuildingLinesViewPreferences();
            /** Note: The initial values are set based on the customer defaults depending on 
                    whether the feature is a Profile or a Plate.
                    The status determines the single line representation for the ship feature in a view.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetSingleLineRepresentation
            (
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::ShipbuildingLines featureType /** feature type */,
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/,
                bool singleLine /** status that determines SLR for the feature */
            );
            /** Note: The initial values are set based on the customer defaults depending on 
                    whether the feature is a Profile or a Plate.
                    The status determines the single line representation for the ship feature in a view.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void SetSingleLineRepresentation
            (
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::ShipbuildingLines featureType /** feature type */,
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/,
                bool singleLine /** status that determines SLR for the feature */
            );
            /** Get single line status  @return  status that determines SLR for the feature 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool GetSingleLineRepresentation
            (
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::ShipbuildingLines featureType /** feature type */,
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/
            );
            /** Get single line status  @return  status that determines SLR for the feature 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            bool GetSingleLineRepresentation
            (
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::ShipbuildingLines featureType /** feature type */,
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/
            );
            /** The color of ship line. The value should be between UF_OBJ_MIN_COLOR and UF_OBJ_MAX_COLOR. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetColor
            (
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::Lines linesType /** visible or hidden line type */,
                int color /** Color */
            );
            /** The color of ship line. The value should be between UF_OBJ_MIN_COLOR and UF_OBJ_MAX_COLOR. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void SetColor
            (
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::Lines linesType /** visible or hidden line type */,
                int color /** Color */
            );
            /** Get line color  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: int GetColor
            (
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::Lines linesType /** visible or hidden line type */
            );
            /** Get line color  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            int GetColor
            (
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::Lines linesType /** visible or hidden line type */
            );
            /** The font type of ship line.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetFont
            (
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::Lines linesType /** visible or hidden line type */,
                NXOpen::Preferences::Font font /** Font */
            );
            /** The font type of ship line.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void SetFont
            (
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::Lines linesType /** visible or hidden line type */,
                NXOpen::Preferences::Font font /** Font */
            );
            /** Get line font  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::Font GetFont
            (
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::Lines linesType /** visible or hidden line type */
            );
            /** Get line font  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::Preferences::Font GetFont
            (
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::Lines linesType /** visible or hidden line type */
            );
            /** The width of hidden line or edges. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetWidth
            (
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::Lines linesType /** visible or hidden line type */,
                NXOpen::Preferences::Width width /** Width */
            );
            /** The width of hidden line or edges. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void SetWidth
            (
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::Lines linesType /** visible or hidden line type */,
                NXOpen::Preferences::Width width /** Width */
            );
            /** Get line width  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::Width GetWidth
            (
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::Lines linesType /** visible or hidden line type */
            );
            /** Get line width  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::Preferences::Width GetWidth
            (
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Preferences::ShipbuildingLinesViewPreferences::Lines linesType /** visible or hidden line type */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
