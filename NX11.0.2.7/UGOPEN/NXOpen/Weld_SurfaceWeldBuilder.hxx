#ifndef NXOpen_WELD_SURFACEWELDBUILDER_HXX_INCLUDED
#define NXOpen_WELD_SURFACEWELDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_SurfaceWeldBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_ProjectionOptions.hxx>
#include <NXOpen/LineColorFontWidthBuilder.hxx>
#include <NXOpen/Weld_StructureWeldBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/Weld_CharacteristicsBuilder.hxx>
#include <NXOpen/Weld_SurfaceWeldBuilder.hxx>
#include <NXOpen/libnxopencpp_weld_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Weld
    {
        class SurfaceWeldBuilder;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class ProjectionOptions;
    }
    class LineColorFontWidthBuilder;
    class ScCollector;
    class Section;
    namespace Weld
    {
        class CharacteristicsBuilder;
    }
    namespace Weld
    {
        class StructureWeldBuilder;
    }
    namespace Weld
    {
        class _SurfaceWeldBuilderBuilder;
        class SurfaceWeldBuilderImpl;
        /**
            Use to create or edit a @link NXOpen::Weld::SurfaceWeld NXOpen::Weld::SurfaceWeld@endlink  feature.
             <br> To create a new instance of this class, use @link NXOpen::Weld::WeldManager::CreateSurfaceWeldBuilder  NXOpen::Weld::WeldManager::CreateSurfaceWeldBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Thickness.Value </td> <td> 
         
        12.2 (millimeters part), 0.5 (inches part) </td> </tr> 

        <tr><td> 
         
        Width.Value </td> <td> 
         
        12.2 (millimeters part), 0.5 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_WELDEXPORT  SurfaceWeldBuilder : public NXOpen::Weld::StructureWeldBuilder
        {
            /** The option specifying where the surface weld feature should be created. */
            public: enum DestinationTypes
            {
                DestinationTypesWorkPart/** work part */ ,
                DestinationTypesNewComponent/** new component */ 
            };

            private: SurfaceWeldBuilderImpl * m_surfaceweldbuilder_impl;
            private: friend class  _SurfaceWeldBuilderBuilder;
            protected: SurfaceWeldBuilder();
            public: ~SurfaceWeldBuilder();
            /**Returns  the section defining all the boundaries to use for creating the surface weld. The largest boundary will be treated as the primary exterior boundary. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * Boundary
            (
            );
            /**Returns  the collector containing the faces to create the surface weld on. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * Panel
            (
            );
            /**Returns  the project direction, which is used to project the boundary curves to the plate mold face. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ProjectionOptions * ProjectionDirection
            (
            );
            /**Returns  the expression containing the value of the thickness of the surface weld. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Thickness
            (
            );
            /**Returns  the expression containing the value of the width of the surface weld if only the centerline is specified. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Width
            (
            );
            /**Returns  the characteristics to assign to the object created. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Weld::CharacteristicsBuilder * Characteristics
            (
            );
            /**Returns  the color, font, and width of the surface weld output curve.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::LineColorFontWidthBuilder * LineColorFontWidth
            (
            );
            /**Returns  the option specifying the destination for this surface weld feature. Only applicable during create. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Weld::SurfaceWeldBuilder::DestinationTypes Destination
            (
            );
            /**Sets  the option specifying the destination for this surface weld feature. Only applicable during create. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetDestination
            (
                NXOpen::Weld::SurfaceWeldBuilder::DestinationTypes destination /** destination */ 
            );
            /**Returns  the prefix used for the surface weld Design Feature name in Fourth Generation Design mode. Only applicable during create. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString NamePrefix
            (
            );
            /**Sets  the prefix used for the surface weld Design Feature name in Fourth Generation Design mode. Only applicable during create. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetNamePrefix
            (
                const NXString & prefix /** prefix */ 
            );
            /**Sets  the prefix used for the surface weld Design Feature name in Fourth Generation Design mode. Only applicable during create. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            void SetNamePrefix
            (
                const char * prefix /** prefix */ 
            );
            /**Returns  the distance tolerance for constructing the surface weld. Uses the modeling tolerance during creation. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double DistanceTolerance
            (
            );
            /**Sets  the distance tolerance for constructing the surface weld. Uses the modeling tolerance during creation. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetDistanceTolerance
            (
                double distanceTolerance /** distancetolerance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
