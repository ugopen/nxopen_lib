#ifndef NXOpen_CAM_FBM_FEATURE_HXX_INCLUDED
#define NXOpen_CAM_FBM_FEATURE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_FBM_Feature.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_FBM_Feature.hxx>
#include <NXOpen/IFitTo.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        namespace FBM
        {
            class Feature;
        }
    }
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    namespace CAM
    {
        class CAMAttribute;
    }
    class DisplayableObject;
    class IFitTo;
    class INXObject;
    class NXObject;
    namespace CAM
    {
        namespace FBM
        {
            class _FeatureBuilder;
            class FeatureImpl;
            /** Interface for CAM Feature objects  <br> This is an abstract class, and cannot be instantiated.  <br> 
             <br>  Created in NX9.0.0.  <br>  
            */
            class NXOPENCPP_CAMEXPORT  Feature : public NXOpen::NXObject, public virtual NXOpen::IFitTo
            {
                private: FeatureImpl * m_feature_impl;
                private: friend class  _FeatureBuilder;
                protected: Feature();
                public: ~Feature();
                /** Gets and attribute  @return  the attribute 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAM::CAMAttribute * GetAttribute
                (
                    const NXString & attributeName /** the attribute name */
                );
                /** Gets and attribute  @return  the attribute 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::CAM::CAMAttribute * GetAttribute
                (
                    const char * attributeName /** the attribute name */
                );
                /** Sets the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetAttributeValue
                (
                    const NXString & attributeName /** the attribute name */,
                    double dValue /** the attribute value */
                );
                /** Sets the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void SetAttributeValue
                (
                    const char * attributeName /** the attribute name */,
                    double dValue /** the attribute value */
                );
                /** Sets the attribute value 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetAttributeValue
                (
                    const NXString & attributeName /** the attribute name */,
                    const NXString & strValue /** the attribute value */
                );
                /** Sets the attribute value 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void SetAttributeValue
                (
                    const char * attributeName /** the attribute name */,
                    const char * strValue /** the attribute value */
                );
                /** Sets the attribute value 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetAttributeValue
                (
                    const NXString & attributeName /** the attribute name */,
                    int nValue /** the attribute value */
                );
                /** Sets the attribute value 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void SetAttributeValue
                (
                    const char * attributeName /** the attribute name */,
                    int nValue /** the attribute value */
                );
                /** Sets the attribute value 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetAttributeValue
                (
                    const NXString & attributeName /** the attribute name */,
                    bool bValue /** the attribute value */
                );
                /** Sets the attribute value 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void SetAttributeValue
                (
                    const char * attributeName /** the attribute name */,
                    bool bValue /** the attribute value */
                );
                /** Creates or modifies an integer attribute.  This method performs an immediate update
                        except when the object is a @link NXOpen::Features::Feature NXOpen::Features::Feature@endlink . 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX3.0.0.  <br>  
                 <br> License requirements : None */
                public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use SetUserAttribute instead.") void SetAttribute
                (
                    const NXString & title /** title */ ,
                    int value /** value */ 
                );
                /** Creates or modifies an integer attribute.  This method performs an immediate update
                        except when the object is a @link NXOpen::Features::Feature NXOpen::Features::Feature@endlink . 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX3.0.0.  <br>  
                 <br> License requirements : None */
                void SetAttribute
                (
                    const char * title /** title */ ,
                    int value /** value */ 
                );
                /** Creates or modifies an integer attribute with the option to update or not. 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX5.0.1.  <br>  
                 <br> License requirements : None */
                public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use SetUserAttribute instead.") void SetAttribute
                (
                    const NXString & title /** title */ ,
                    int value /** value */ ,
                    NXOpen::Update::Option option /** option */ 
                );
                /** Creates or modifies an integer attribute with the option to update or not. 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX5.0.1.  <br>  
                 <br> License requirements : None */
                void SetAttribute
                (
                    const char * title /** title */ ,
                    int value /** value */ ,
                    NXOpen::Update::Option option /** option */ 
                );
                /** Creates or modifies a real attribute.  This method performs an immediate update
                        except when the object is a @link NXOpen::Features::Feature NXOpen::Features::Feature@endlink . 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX3.0.0.  <br>  
                 <br> License requirements : None */
                public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use SetUserAttribute instead.") void SetAttribute
                (
                    const NXString & title /** title */ ,
                    double value /** value */ 
                );
                /** Creates or modifies a real attribute.  This method performs an immediate update
                        except when the object is a @link NXOpen::Features::Feature NXOpen::Features::Feature@endlink . 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX3.0.0.  <br>  
                 <br> License requirements : None */
                void SetAttribute
                (
                    const char * title /** title */ ,
                    double value /** value */ 
                );
                /** Creates or modifies a real attribute with the option to update or not. 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX5.0.1.  <br>  
                 <br> License requirements : None */
                public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use SetUserAttribute instead.") void SetAttribute
                (
                    const NXString & title /** title */ ,
                    double value /** value */ ,
                    NXOpen::Update::Option option /** option */ 
                );
                /** Creates or modifies a real attribute with the option to update or not. 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX5.0.1.  <br>  
                 <br> License requirements : None */
                void SetAttribute
                (
                    const char * title /** title */ ,
                    double value /** value */ ,
                    NXOpen::Update::Option option /** option */ 
                );
                /** Creates or modifies a string attribute.  This method performs an immediate update
                        except when the object is a @link NXOpen::Features::Feature NXOpen::Features::Feature@endlink . 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX3.0.0.  <br>  
                 <br> License requirements : None */
                public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use SetUserAttribute instead.") void SetAttribute
                (
                    const NXString & title /** title */ ,
                    const NXString & value /** value */ 
                );
                /** Creates or modifies a string attribute.  This method performs an immediate update
                        except when the object is a @link NXOpen::Features::Feature NXOpen::Features::Feature@endlink . 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX3.0.0.  <br>  
                 <br> License requirements : None */
                void SetAttribute
                (
                    const char * title /** title */ ,
                    const char * value /** value */ 
                );
                /** Creates or modifies a string attribute with the option to update or not. 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX5.0.1.  <br>  
                 <br> License requirements : None */
                public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use SetUserAttribute instead.") void SetAttribute
                (
                    const NXString & title /** title */ ,
                    const NXString & value /** value */ ,
                    NXOpen::Update::Option option /** option */ 
                );
                /** Creates or modifies a string attribute with the option to update or not. 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX5.0.1.  <br>  
                 <br> License requirements : None */
                void SetAttribute
                (
                    const char * title /** title */ ,
                    const char * value /** value */ ,
                    NXOpen::Update::Option option /** option */ 
                );
                /** Creates or modifies a null attribute which is an attribute with a title and no value.
                        This method performs an immediate update except when the object is a 
                        @link NXOpen::Features::Feature NXOpen::Features::Feature@endlink . 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX3.0.0.  <br>  
                 <br> License requirements : None */
                public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use SetUserAttribute instead.") void SetAttribute
                (
                    const NXString & title /** title */ 
                );
                /** Creates or modifies a null attribute which is an attribute with a title and no value.
                        This method performs an immediate update except when the object is a 
                        @link NXOpen::Features::Feature NXOpen::Features::Feature@endlink . 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX3.0.0.  <br>  
                 <br> License requirements : None */
                void SetAttribute
                (
                    const char * title /** title */ 
                );
                /** Creates or modifies a null attribute with the option to update or not. 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX5.0.1.  <br>  
                 <br> License requirements : None */
                public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use SetUserAttribute instead.") void SetAttribute
                (
                    const NXString & title /** title */ ,
                    NXOpen::Update::Option option /** option */ 
                );
                /** Creates or modifies a null attribute with the option to update or not. 
                        This method does not support array attributes.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link SetUserAttribute SetUserAttribute@endlink  instead. <br>  

                 <br>  Created in NX5.0.1.  <br>  
                 <br> License requirements : None */
                void SetAttribute
                (
                    const char * title /** title */ ,
                    NXOpen::Update::Option option /** option */ 
                );
                /** Sets the attribute value(s) to the same value(s) as another attribute 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetAttribute
                (
                    NXOpen::CAM::CAMAttribute * tagAttribute /** the attribute */
                );
                /** Returns the actual attribute value  @return  the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: double GetAttributeDoubleValue
                (
                    const NXString & attributeName /** the attribute name */
                );
                /** Returns the actual attribute value  @return  the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                double GetAttributeDoubleValue
                (
                    const char * attributeName /** the attribute name */
                );
                /** Overrides the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void OverrideAttributeValue
                (
                    const NXString & attributeName /** the attribute name */,
                    double dValue /** the attribute value */
                );
                /** Overrides the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void OverrideAttributeValue
                (
                    const char * attributeName /** the attribute name */,
                    double dValue /** the attribute value */
                );
                /** Overrides the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void OverrideAttributeValue
                (
                    const NXString & attributeName /** the attribute name */,
                    int nValue /** the attribute value */
                );
                /** Overrides the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void OverrideAttributeValue
                (
                    const char * attributeName /** the attribute name */,
                    int nValue /** the attribute value */
                );
                /** Overrides the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void OverrideAttributeValue
                (
                    const NXString & attributeName /** the attribute name */,
                    bool bValue /** the attribute value */
                );
                /** Overrides the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void OverrideAttributeValue
                (
                    const char * attributeName /** the attribute name */,
                    bool bValue /** the attribute value */
                );
                /** Overrides the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void OverrideAttributeValue
                (
                    const NXString & attributeName /** the attribute name */,
                    const NXString & strValue /** the attribute value */
                );
                /** Overrides the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void OverrideAttributeValue
                (
                    const char * attributeName /** the attribute name */,
                    const char * strValue /** the attribute value */
                );
                /** Overrides the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void OverrideAttributeValue
                (
                    const NXString & attributeName /** the attribute name */,
                    const NXOpen::Point3d & ptValue /** the attribute value */
                );
                /** Overrides the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void OverrideAttributeValue
                (
                    const char * attributeName /** the attribute name */,
                    const NXOpen::Point3d & ptValue /** the attribute value */
                );
                /** Overrides the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void OverrideAttributeValue
                (
                    const NXString & attributeName /** the attribute name */,
                    const NXOpen::Vector3d & vecValue /** the attribute value */
                );
                /** Overrides the attribute value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void OverrideAttributeValue
                (
                    const char * attributeName /** the attribute name */,
                    const NXOpen::Vector3d & vecValue /** the attribute value */
                );
                /** Returns true if attribute is overridden  @return  the override flag  
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsAttributeOverridden
                (
                    const NXString & attributeName /** the attribute name */
                );
                /** Returns true if attribute is overridden  @return  the override flag  
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                bool IsAttributeOverridden
                (
                    const char * attributeName /** the attribute name */
                );
                /** Resets an attribute to its original value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void ResetAttributeValue
                (
                    const NXString & attributeName /** the attribute name */
                );
                /** Resets an attribute to its original value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void ResetAttributeValue
                (
                    const char * attributeName /** the attribute name */
                );
                /** Resets all attributes to their original value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void ResetAttributes
                (
                );
                /** Flip feature direction
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void FlipDirection
                (
                );
                /** Change the feature coordinate system
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetCoordinateSystem
                (
                    const NXOpen::Point3d & ptValue /** the new feature origin */,
                    const NXOpen::Vector3d & xAxis /** the new feature x axis */,
                    const NXOpen::Vector3d & yAxis /** the new feature y axis */
                );
                /** Returns the machining area the input entity is part of. If the input entity is not part of the feature 
                                the return string is empty @return  
                 <br>  Created in NX9.0.3.  <br>  
                 <br> License requirements : None */
                public: NXString GetMachiningArea
                (
                    NXOpen::DisplayableObject * tagEntit /** input geometry */
                );
                /** UnLock Feature
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void Unlock
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
