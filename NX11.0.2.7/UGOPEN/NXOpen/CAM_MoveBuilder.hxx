#ifndef NXOpen_CAM_MOVEBUILDER_HXX_INCLUDED
#define NXOpen_CAM_MOVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_MoveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_MoveBuilder.hxx>
#include <NXOpen/CAM_Typedefs.hxx>
#include <NXOpen/CAM_UdeParameter.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class MoveBuilder;
    }
    class Builder;
    namespace CAM
    {
        class CAMObject;
    }
    namespace CAM
    {
        class UdeParameter;
    }
    namespace CAM
    {
        class _MoveBuilderBuilder;
        class MoveBuilderImpl;
        /** Represents Move Builder <br> This cannot be instantiated  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  MoveBuilder : public NXOpen::Builder
        {
            /** the motion Type */
            public: enum Motion
            {
                MotionRapid/** Rapid */ = 1,
                MotionEngage/** Engage */,
                MotionCut/** Cut */,
                MotionStepover/** Stepover */,
                MotionRetract/** Retract */,
                MotionApproach/** Approach */,
                MotionTraversal/** Traversal */,
                MotionDeparture/** Departure */,
                MotionReturn/** Return */,
                MotionFirstCut/** First Cut */,
                MotionLastCut/** Last Cut */,
                MotionCrossover/** Crossover */
            };

            /** the feed Type */
            public: enum Feed
            {
                FeedMotion/** Motion */,
                FeedCustom/** Custom */
            };

            private: MoveBuilderImpl * m_movebuilder_impl;
            private: friend class  _MoveBuilderBuilder;
            protected: MoveBuilder();
            public: ~MoveBuilder();
            /** Set parent 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetParent
            (
                NXOpen::CAM::CAMObject * parent /** the parent object */
            );
            /** Set sibling 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSibling
            (
                NXOpen::CAM::CAMObject * sibling /** the sibling object */
            );
            /**Returns  the motion type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::MoveBuilder::Motion MotionType
            (
            );
            /**Sets  the motion type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMotionType
            (
                NXOpen::CAM::MoveBuilder::Motion motionType /** motion type */ 
            );
            /**Returns  the feed type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::MoveBuilder::Feed FeedType
            (
            );
            /**Sets  the feed type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFeedType
            (
                NXOpen::CAM::MoveBuilder::Feed feedType /** feed type */ 
            );
            /**Returns  the feed rate 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double FeedRate
            (
            );
            /**Sets  the feed rate 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFeedRate
            (
                double feedRate /** feed rate */ 
            );
            /**Returns  the feed unit 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::FeedRateUnit FeedUnit
            (
            );
            /**Sets  the feed unit 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetFeedUnit
            (
                NXOpen::CAM::FeedRateUnit unit /** the new unit */
            );
            /**Returns  the protected move status 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool ProtectedMove
            (
            );
            /**Sets  the protected move status 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetProtectedMove
            (
                bool protectedMove /** protected move */ 
            );
            /**Returns  the number of user parameters
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: int NumberOfUserParameters
            (
            );
            /** Returns the custom parameter with the given name. @return  the parameter 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::UdeParameter * GetUserParameter
            (
                const NXString & parameterName /**the parameter name*/
            );
            /** Returns the custom parameter with the given name. @return  the parameter 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::CAM::UdeParameter * GetUserParameter
            (
                const char * parameterName /**the parameter name*/
            );
            /** Returns the parameter at the input index. @return  the parameter 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::UdeParameter * GetUserParameter
            (
                int index /**the parameter index*/
            );
            /**Returns  the subop label 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : None */
            public: NXString SubopLabel
            (
            );
            /**Sets  the subop label 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : None */
            public: void SetSubopLabel
            (
                const NXString & subopLabel /** subop label */ 
            );
            /**Sets  the subop label 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : None */
            void SetSubopLabel
            (
                const char * subopLabel /** subop label */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
