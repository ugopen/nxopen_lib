#ifndef NXOpen_CAM_INSPECTIONIMPORTDMISBUILDER_HXX_INCLUDED
#define NXOpen_CAM_INSPECTIONIMPORTDMISBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_InspectionImportDmisBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_InspectionImportDmisBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class InspectionImportDmisBuilder;
    }
    class Builder;
    class CoordinateSystem;
    namespace CAM
    {
        class _InspectionImportDmisBuilderBuilder;
        class InspectionImportDmisBuilderImpl;
        /** Inspection Import Dmis dialog builder  <br> To create a new instance of this class, use @link NXOpen::CAM::InspectionOperationCollection::CreateImportDmisBuilder  NXOpen::CAM::InspectionOperationCollection::CreateImportDmisBuilder @endlink  <br> 
         <br>  Created in NX11.0.1.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  InspectionImportDmisBuilder : public NXOpen::Builder
        {
            private: InspectionImportDmisBuilderImpl * m_inspectionimportdmisbuilder_impl;
            private: friend class  _InspectionImportDmisBuilderBuilder;
            protected: InspectionImportDmisBuilder();
            public: ~InspectionImportDmisBuilder();
            /**Returns  the dmis file 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXString DmisFile
            (
            );
            /**Sets  the dmis file 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetDmisFile
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the dmis file 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            void SetDmisFile
            (
                const char * filename /** filename */ 
            );
            /**Returns  the tag of the Csys to use as the MCS when importing the DMIS 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * McsCsys
            (
            );
            /**Sets  the tag of the Csys to use as the MCS when importing the DMIS 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetMcsCsys
            (
                NXOpen::CoordinateSystem * mcsTag /** mcstag */ 
            );
            /** Import Dmis file 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void ImportDmis
            (
            );
            /**Returns  the geometry tolerance 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: double GeomTol
            (
            );
            /**Sets  the geometry tolerance 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetGeomTol
            (
                double geomTol /** geomtol */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
