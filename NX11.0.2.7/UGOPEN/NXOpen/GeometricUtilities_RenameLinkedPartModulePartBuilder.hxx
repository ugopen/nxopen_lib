#ifndef NXOpen_GEOMETRICUTILITIES_RENAMELINKEDPARTMODULEPARTBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_RENAMELINKEDPARTMODULEPARTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_RenameLinkedPartModulePartBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_RenameLinkedPartModulePartBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class RenameLinkedPartModulePartBuilder;
    }
    class Builder;
    class Part;
    namespace GeometricUtilities
    {
        class _RenameLinkedPartModulePartBuilderBuilder;
        class RenameLinkedPartModulePartBuilderImpl;
        /** Represents a @link Features::PartModule Features::PartModule@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateRenameLinkedPartModulePartBuilder  NXOpen::Features::FeatureCollection::CreateRenameLinkedPartModulePartBuilder @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  RenameLinkedPartModulePartBuilder : public NXOpen::Builder
        {
            private: RenameLinkedPartModulePartBuilderImpl * m_renamelinkedpartmodulepartbuilder_impl;
            private: friend class  _RenameLinkedPartModulePartBuilderBuilder;
            protected: RenameLinkedPartModulePartBuilder();
            public: ~RenameLinkedPartModulePartBuilder();
            /** Add linked part module part tag and its new name to perform "Save As" along with its main part. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLinkedPartNameToBeSavedAs
            (
                NXOpen::Part * linkedPartTag /** the linked part*/,
                const NXString & fileName /** new linked part file name*/
            );
            /** Add linked part module part tag and its new name to perform "Save As" along with its main part. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            void SetLinkedPartNameToBeSavedAs
            (
                NXOpen::Part * linkedPartTag /** the linked part*/,
                const char * fileName /** new linked part file name*/
            );
            /** Retrieve new name of linked part module part added earlier for "Save As".  @return  new linked part file name
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetLinkedPartNameToBeSavedAs
            (
                NXOpen::Part * linkedPartTag /** the linked part*/
            );
            /** Add multiple linked part module part tags and their new names to perform "Save As" along with its main part. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLinkedPartNameToBeSavedAs
            (
                const std::vector<NXOpen::Part *> & linkedPartTag /** the linked part*/,
                std::vector<NXString> & fileName /** new linked part file name*/
            );
            /** Retrieve all linked part module parts and their associated new names. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void GetLinkedPartNameToBeSavedAs
            (
                std::vector<NXString> & fileName /** new linked part file name*/
            );
            /** Get all linked part module part tags associated with given main part.
                        This function will also load linked parts if they are not loaded. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void GetAllAssociatedLinkedPartModulePartTags
            (
                NXOpen::Part * mainPartTag /** the main part for which linked part module parts are to be queried*/,
                std::vector<NXOpen::Part *> & linkedPartTags /** all associated linked part module parts*/
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
