#ifndef NXOpen_CAM_SPLITTER_HXX_INCLUDED
#define NXOpen_CAM_SPLITTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_Splitter.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_Splitter.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class Splitter;
    }
    class NXObject;
    namespace CAM
    {
        class _SplitterBuilder;
        class SplitterImpl;
        /** Represents a Splitter Builder  <br> To create a new instance of this class, use @link NXOpen::CAM::MultiBladeSplittersGeometry::CreateSplitter  NXOpen::CAM::MultiBladeSplittersGeometry::CreateSplitter @endlink  <br> 
         <br>  Created in NX7.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  Splitter : public NXOpen::TaggedObject
        {
            private: SplitterImpl * m_splitter_impl;
            private: friend class  _SplitterBuilder;
            protected: Splitter();
            public: ~Splitter();
            /** Get the wall faces  @return  the wall faces 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::NXObject *> GetWallFaces
            (
            );
            /** Set the wall faces 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetWallFaces
            (
                const std::vector<NXOpen::NXObject *> & wallFaces /** the wall faces */
            );
            /** Remove the wall faces 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void RemoveWallFaces
            (
                const std::vector<NXOpen::NXObject *> & faces /** the removed wall faces */
            );
            /** Get the blend faces  @return  the blend faces 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::NXObject *> GetBlendFaces
            (
            );
            /** Set the blend faces 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetBlendFaces
            (
                const std::vector<NXOpen::NXObject *> & blendFaces /** the blend faces */
            );
            /** Remove the blend faces 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void RemoveBlendFaces
            (
                const std::vector<NXOpen::NXObject *> & faces /** the removed blend faces */
            );
            /**Returns  the item count of the list 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: int CountOfFaces
            (
            );
            /**Sets  the item count of the list 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCountOfFaces
            (
                int count /** the count of the list */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
