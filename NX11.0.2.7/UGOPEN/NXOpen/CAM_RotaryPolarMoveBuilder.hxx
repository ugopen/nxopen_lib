#ifndef NXOpen_CAM_ROTARYPOLARMOVEBUILDER_HXX_INCLUDED
#define NXOpen_CAM_ROTARYPOLARMOVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_RotaryPolarMoveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_OffsetDataBuilder.hxx>
#include <NXOpen/CAM_RotaryPolarMoveBuilder.hxx>
#include <NXOpen/CAM_RoundPointBuilder.hxx>
#include <NXOpen/CAM_MoveBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class RotaryPolarMoveBuilder;
    }
    namespace CAM
    {
        class MoveBuilder;
    }
    namespace CAM
    {
        class OffsetDataBuilder;
    }
    namespace CAM
    {
        class RoundPointBuilder;
    }
    class Point;
    namespace CAM
    {
        class _RotaryPolarMoveBuilderBuilder;
        class RotaryPolarMoveBuilderImpl;
        /** Represents the Rotary Polar Builder  <br> To create a new instance of this class, use @link NXOpen::CAM::MoveCollection::CreateRotaryPolarMoveBuilder  NXOpen::CAM::MoveCollection::CreateRotaryPolarMoveBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  RotaryPolarMoveBuilder : public NXOpen::CAM::MoveBuilder
        {
            /** the lock axis type */
            public: enum LockAxisDirection
            {
                LockAxisDirectionX/** X-Axis */,
                LockAxisDirectionY/** Y-Axis */,
                LockAxisDirectionZ/** Z-Axis */
            };

            /** the lock plane type */
            public: enum LockPlaneType
            {
                LockPlaneTypeXy/** XY-Plane */,
                LockPlaneTypeYz/** YZ-Plane */,
                LockPlaneTypeZx/** ZX-Plane */
            };

            private: RotaryPolarMoveBuilderImpl * m_rotarypolarmovebuilder_impl;
            private: friend class  _RotaryPolarMoveBuilderBuilder;
            protected: RotaryPolarMoveBuilder();
            public: ~RotaryPolarMoveBuilder();
            /**Returns  the location 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the location 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPoint
            (
                NXOpen::Point * location /** location */ 
            );
            /**Returns  the lock axis 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::RotaryPolarMoveBuilder::LockAxisDirection LockAxis
            (
            );
            /**Sets  the lock axis 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLockAxis
            (
                NXOpen::CAM::RotaryPolarMoveBuilder::LockAxisDirection lockAxis /** lockaxis */ 
            );
            /**Returns  the lock position  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double LockPos
            (
            );
            /**Sets  the lock position  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLockPos
            (
                double lockPosition /** lockposition */ 
            );
            /**Returns  the lock plane 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::RotaryPolarMoveBuilder::LockPlaneType LockPlane
            (
            );
            /**Sets  the lock plane 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLockPlane
            (
                NXOpen::CAM::RotaryPolarMoveBuilder::LockPlaneType lockPlane /** lockplane */ 
            );
            /**Returns  the round point builder 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::RoundPointBuilder * RoundPoint
            (
            );
            /**Returns  the offset point builder 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::OffsetDataBuilder * OffsetData
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
