#ifndef NXOpen_SHIPDESIGN_NAVIGATORNODE_HXX_INCLUDED
#define NXOpen_SHIPDESIGN_NAVIGATORNODE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ShipDesign_NavigatorNode.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/ShipDesign_NavigatorNode.hxx>
#include <NXOpen/libnxopencpp_shipdesign_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace ShipDesign
    {
        class NavigatorNode;
    }
    class NXObject;
    class TaggedObject;
    namespace ShipDesign
    {
        class _NavigatorNodeBuilder;
        class NavigatorNodeImpl;
        /** Represents the interface for navigator view classes <br> Use the @link NXOpen::ShipDesign::NavigatorView NXOpen::ShipDesign::NavigatorView@endlink  class to create a navigator node  <br> 
         <br>  Created in NX11.0.1.  <br>  
        */
        class NXOPENCPP_SHIPDESIGNEXPORT  NavigatorNode : public NXOpen::NXObject
        {
            private: NavigatorNodeImpl * m_navigatornode_impl;
            private: friend class  _NavigatorNodeBuilder;
            protected: NavigatorNode();
            public: ~NavigatorNode();
            /** Gets the objects represented by the node.  @return  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: std::vector<NXOpen::TaggedObject *> GetNodeObjects
            (
            );
            /** Sets the objects represented by the node. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: void SetNodeObjects
            (
                const std::vector<NXOpen::TaggedObject *> & nodeObjects /** nodeobjects */ 
            );
            /** Adds a child node.  @return  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: NXOpen::ShipDesign::NavigatorNode * AddChild
            (
                const NXString & name /** name */ ,
                const std::vector<NXOpen::TaggedObject *> & nodeObjects /** nodeobjects */ ,
                bool createPersistentData /** createpersistentdata */ 
            );
            /** Adds a child node.  @return  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            NXOpen::ShipDesign::NavigatorNode * AddChild
            (
                const char * name /** name */ ,
                const std::vector<NXOpen::TaggedObject *> & nodeObjects /** nodeobjects */ ,
                bool createPersistentData /** createpersistentdata */ 
            );
            /** Removes a child node. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: void RemoveChild
            (
                NXOpen::ShipDesign::NavigatorNode * childNode /** childnode */ 
            );
            /** Gets parent node.  @return  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: NXOpen::ShipDesign::NavigatorNode * GetParent
            (
            );
            /** Gets children nodes.  @return  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: std::vector<NXOpen::ShipDesign::NavigatorNode *> GetChildren
            (
            );
            /** Get next node. If this node has some child nodes, the next node is the first child.
                        Otherwise return next sibling of this node, or its parent node, or its grandparent node...   @return  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: NXOpen::ShipDesign::NavigatorNode * GetNextNode
            (
            );
            /** Get previous node. If this node has no prior siblings, the previous node is its parent node if it has. 
                         If this node has a prior sibling, the previous node is the last descendant node of this previous sibling.  @return  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: NXOpen::ShipDesign::NavigatorNode * GetPreviousNode
            (
            );
            /** Gets next sibling node.  @return  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: NXOpen::ShipDesign::NavigatorNode * GetNextSiblingNode
            (
            );
            /** Gets previous sibling node.  @return  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: NXOpen::ShipDesign::NavigatorNode * GetPreviousSiblingNode
            (
            );
            /**Returns  the node title. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXString Title
            (
            );
            /**Sets  the node title. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: void SetTitle
            (
                const NXString & title /** title */ 
            );
            /**Sets  the node title. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            void SetTitle
            (
                const char * title /** title */ 
            );
            /**Returns  the node check status. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: bool CheckStatus
            (
            );
            /**Sets  the node check status. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: void SetCheckStatus
            (
                bool checkStatus /** checkstatus */ 
            );
            /**Returns  the node modifiable property. 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: bool Modifiable
            (
            );
            /**Sets  the node modifiable property. 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: void SetModifiable
            (
                bool modifiable /** modifiable */ 
            );
            /** Sets the node icon. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: void SetIcon
            (
                const NXString & icon /** icon */ 
            );
            /** Sets the node icon. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            void SetIcon
            (
                const char * icon /** icon */ 
            );
            /** Sets the node draggable attribute. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: void SetDraggable
            (
                bool draggable /** draggable */ 
            );
            /** Sets the node property. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: void UpdateProperty
            (
                const NXString & propertyName /** propertyname */ ,
                const NXString & propertyValue /** propertyvalue */ 
            );
            /** Sets the node property. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            void UpdateProperty
            (
                const char * propertyName /** propertyname */ ,
                const char * propertyValue /** propertyvalue */ 
            );
            /** Gets the node property.  @return  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            public: NXString GetProperty
            (
                const NXString & propertyName /** propertyname */ 
            );
            /** Gets the node property.  @return  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_ship_basic ("Ship Basic Design") */
            NXString GetProperty
            (
                const char * propertyName /** propertyname */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
