#ifndef NXOpen_ROUTING_GAPDISPLAYBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_GAPDISPLAYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_GapDisplayBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Routing_GapDisplayBuilder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class GapDisplayBuilder;
    }
    class Builder;
    class Line;
    namespace Routing
    {
        class _GapDisplayBuilderBuilder;
        class GapDisplayBuilderImpl;
        /** Builder for creating a gap arc object on a line segment.  <br> To create a new instance of this class, use @link NXOpen::Routing::RouteManager::CreateGapDisplayBuilder  NXOpen::Routing::RouteManager::CreateGapDisplayBuilder @endlink  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  GapDisplayBuilder : public NXOpen::Builder
        {
            private: GapDisplayBuilderImpl * m_gapdisplaybuilder_impl;
            private: friend class  _GapDisplayBuilderBuilder;
            protected: GapDisplayBuilder();
            public: ~GapDisplayBuilder();
            /** Takes selected line, gap start and end points, and gap 
                    type settings in to initialise builder data.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void CreateBuilder
            (
                NXOpen::Line * selLine /** selline */ ,
                NXOpen::Line * crossLine /** crossline */ ,
                double gapWidth /** gapwidth */ ,
                const NXOpen::Point3d & gapStartPoint /** gapstartpoint */ ,
                const NXOpen::Point3d & gapEndPoint /** gapendpoint */ ,
                bool bridgeOverGap /** bridgeovergap */ ,
                bool arcOrientation /** arcorientation */ 
            );
            /** Takes selected line, gap start and end points, and gap 
                    type settings in to set builder data.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetBuilderData
            (
                NXOpen::Line * selLine /** selline */ ,
                NXOpen::Line * crossLine /** crossline */ ,
                double gapWidth /** gapwidth */ ,
                const NXOpen::Point3d & gapStartPoint /** gapstartpoint */ ,
                const NXOpen::Point3d & gapEndPoint /** gapendpoint */ ,
                bool bridgeOverGap /** bridgeovergap */ ,
                bool arcOrientation /** arcorientation */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
