#ifndef NXOpen_CATIAV5IMPORTER_HXX_INCLUDED
#define NXOpen_CATIAV5IMPORTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Catiav5Importer.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Catiav5Importer.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class Catiav5Importer;
    class Builder;
    class _Catiav5ImporterBuilder;
    class Catiav5ImporterImpl;
    /** Represents a @link NXOpen::Catiav5Importer NXOpen::Catiav5Importer@endlink  to be used when importing the CATIA V5 Data
        This class is created using @link NXOpen::DexManager NXOpen::DexManager@endlink .
        NULL object will be returned from Commit()  <br> To create a new instance of this class, use @link NXOpen::DexManager::CreateCatiav5Importer  NXOpen::DexManager::CreateCatiav5Importer @endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    ImportTo </td> <td> 
     
    WorkPart </td> </tr> 

    <tr><td> 
     
    ImportToTeamcenter </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    IncludeCSYS </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    IncludeIndWireFrame </td> <td> 
     
    1 </td> </tr> 

    <tr><td> 
     
    IncludeNoShowEntity </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    Optimize </td> <td> 
     
    1 </td> </tr> 

    <tr><td> 
     
    SimplifyFacesandEdges </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    TotalSearchDirectories </td> <td> 
     
    0 </td> </tr> 

    </table>  

     <br>  Created in NX6.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  Catiav5Importer : public NXOpen::Builder
    {
        /** Import To Option */
        public: enum ImportToOption
        {
            ImportToOptionWorkPart/** import Catia V5 file to work part */,
            ImportToOptionNewPart/** import Catia V5 file to new part */
        };

        private: Catiav5ImporterImpl * m_catiav5importer_impl;
        private: friend class  _Catiav5ImporterBuilder;
        protected: Catiav5Importer();
        public: ~Catiav5Importer();
        /** Save the settings - this will save the settings to a file sepcified 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SaveSettings
        (
            const NXString & filename /** filename */ 
        );
        /** Save the settings - this will save the settings to a file sepcified 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void SaveSettings
        (
            const char * filename /** filename */ 
        );
        /**Returns  the input file - name of a file which is being imported
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXString InputFile
        (
        );
        /**Sets  the input file - name of a file which is being imported
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetInputFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the input file - name of a file which is being imported
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void SetInputFile
        (
            const char * filename /** filename */ 
        );
        /**Returns  the settings file - definition file for default options
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXString SettingsFile
        (
        );
        /**Sets  the settings file - definition file for default options
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSettingsFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the settings file - definition file for default options
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void SetSettingsFile
        (
            const char * filename /** filename */ 
        );
        /**Returns  the include ind wire frame - if set to true the indpendent wireframe objects from catia v5 will be imported to NX
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: bool IncludeIndWireFrame
        (
        );
        /**Sets  the include ind wire frame - if set to true the indpendent wireframe objects from catia v5 will be imported to NX
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetIncludeIndWireFrame
        (
            bool includeIndWireFrame /** includeindwireframe */ 
        );
        /**Returns  the include no show entity - if set to true then no show entities from the catia v5 file will be imported to NX 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: bool IncludeNoShowEntity
        (
        );
        /**Sets  the include no show entity - if set to true then no show entities from the catia v5 file will be imported to NX 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetIncludeNoShowEntity
        (
            bool includeNoShowEntity /** includenoshowentity */ 
        );
        /**Returns  the include coordinate systems - if set to true the coordinate systems from catia v5 will be imported to NX 
         <br>  Created in NX9.0.1.  <br>  
         <br> License requirements : None */
        public: bool IncludeCSYS
        (
        );
        /**Sets  the include coordinate systems - if set to true the coordinate systems from catia v5 will be imported to NX 
         <br>  Created in NX9.0.1.  <br>  
         <br> License requirements : None */
        public: void SetIncludeCSYS
        (
            bool includeCSYS /** includecsys */ 
        );
        /**Returns  the simplify faces and edges - This option allows you to simplify nearly analytical faces and edges to analytics 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: bool SimplifyFacesandEdges
        (
        );
        /**Sets  the simplify faces and edges - This option allows you to simplify nearly analytical faces and edges to analytics 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSimplifyFacesandEdges
        (
            bool simplifyFacesandEdges /** simplifyfacesandedges */ 
        );
        /**Returns  the optimize - This option allows you to optimize the topology 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: bool Optimize
        (
        );
        /**Sets  the optimize - This option allows you to optimize the topology 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetOptimize
        (
            bool optimize /** optimize */ 
        );
        /**Returns  the number of search directories - This option allows you to specify total number of serach directories 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: int TotalSearchDirectories
        (
        );
        /**Sets  the number of search directories - This option allows you to specify total number of serach directories 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetTotalSearchDirectories
        (
            int totalSearchDir /** totalsearchdir */ 
        );
        /**Returns  the serach directory list - This option allows you to specify a semicolon separated list of 
                   directories in which the translator can find components of an assembly. The translator will 
                   search all of the subdirectories below the given directories. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXString SearchDirectoryList
        (
        );
        /**Sets  the serach directory list - This option allows you to specify a semicolon separated list of 
                   directories in which the translator can find components of an assembly. The translator will 
                   search all of the subdirectories below the given directories. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSearchDirectoryList
        (
            const NXString & searchDirectoryList /** searchdirectorylist */ 
        );
        /**Sets  the serach directory list - This option allows you to specify a semicolon separated list of 
                   directories in which the translator can find components of an assembly. The translator will 
                   search all of the subdirectories below the given directories. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void SetSearchDirectoryList
        (
            const char * searchDirectoryList /** searchdirectorylist */ 
        );
        /**Returns  the file open flag - should be set to false if doing file import
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: bool FileOpenFlag
        (
        );
        /**Sets  the file open flag - should be set to false if doing file import
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFileOpenFlag
        (
            bool doingFileOpen /** doingfileopen */ 
        );
        /**Returns  the import to. This option will determine the destination for imported V5 file. It can
                    either be new part or work part. 
         <br>  Created in NX11.0.1.  <br>  
         <br> License requirements : None */
        public: NXOpen::Catiav5Importer::ImportToOption ImportTo
        (
        );
        /**Sets  the import to. This option will determine the destination for imported V5 file. It can
                    either be new part or work part. 
         <br>  Created in NX11.0.1.  <br>  
         <br> License requirements : None */
        public: void SetImportTo
        (
            NXOpen::Catiav5Importer::ImportToOption importTo /** importto */ 
        );
        /**Returns  the output file - if V5 file is imported to new part then this name will be used to
                    write the output. 
         <br>  Created in NX11.0.1.  <br>  
         <br> License requirements : None */
        public: NXString OutputFile
        (
        );
        /**Sets  the output file - if V5 file is imported to new part then this name will be used to
                    write the output. 
         <br>  Created in NX11.0.1.  <br>  
         <br> License requirements : None */
        public: void SetOutputFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the output file - if V5 file is imported to new part then this name will be used to
                    write the output. 
         <br>  Created in NX11.0.1.  <br>  
         <br> License requirements : None */
        void SetOutputFile
        (
            const char * filename /** filename */ 
        );
        /**Returns  the import to Teamcenter  - if set to true then imported data can be added to Teamcenter
         <br>  Created in NX11.0.1.  <br>  
         <br> License requirements : None */
        public: bool ImportToTeamcenter
        (
        );
        /**Sets  the import to Teamcenter  - if set to true then imported data can be added to Teamcenter
         <br>  Created in NX11.0.1.  <br>  
         <br> License requirements : None */
        public: void SetImportToTeamcenter
        (
            bool importToTeamcenter /** importtoteamcenter */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
