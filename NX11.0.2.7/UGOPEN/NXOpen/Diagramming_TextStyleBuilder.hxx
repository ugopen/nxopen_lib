#ifndef NXOpen_DIAGRAMMING_TEXTSTYLEBUILDER_HXX_INCLUDED
#define NXOpen_DIAGRAMMING_TEXTSTYLEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Diagramming_TextStyleBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Diagramming_TextStyleBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/TextColorFontWidthBuilder.hxx>
#include <NXOpen/libnxopencpp_diagramming_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Diagramming
    {
        class TextStyleBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class TextColorFontWidthBuilder;
    namespace Diagramming
    {
        class _TextStyleBuilderBuilder;
        class TextStyleBuilderImpl;

        /// \cond NX_NO_DOC 
        /**
            Represents a TextStyleBuilder.
             <br> This is a sub-builder class and cannot be directly instantiated  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_DIAGRAMMINGEXPORT  TextStyleBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** Represents the option @link NXOpen::Diagramming::TextStyleBuilder::TextAlignment NXOpen::Diagramming::TextStyleBuilder::TextAlignment@endlink 
                       for a @link NXOpen::Diagramming::TextStyleBuilder NXOpen::Diagramming::TextStyleBuilder@endlink .
                    
             <br>  Created in NX11.0.0.  <br>  
            */
            public: enum TextAlignmentType
            {
                TextAlignmentTypeLeft/** left */ ,
                TextAlignmentTypeCenter/** center */ ,
                TextAlignmentTypeRight/** right */ 
            };

            /** Represents the option 
                       for a @link NXOpen::Diagramming::TextStyleBuilder NXOpen::Diagramming::TextStyleBuilder@endlink .
                    
             <br>  Created in NX11.0.0.  <br>  
            */
            public: enum TextAutoFitType
            {
                TextAutoFitTypeNone/** none */ ,
                TextAutoFitTypeResizeOutline/** resize outline */ ,
                TextAutoFitTypeShrinkText/** shrink text */ 
            };

            private: TextStyleBuilderImpl * m_textstylebuilder_impl;
            private: friend class  _TextStyleBuilderBuilder;
            protected: TextStyleBuilder();
            public: ~TextStyleBuilder();
            /**Returns  the text alignment of the annotation 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::TextStyleBuilder::TextAlignmentType TextAlignment
            (
            );
            /**Sets  the text alignment of the annotation 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTextAlignment
            (
                NXOpen::Diagramming::TextStyleBuilder::TextAlignmentType alignment /** alignment */ 
            );
            /**Returns  the text allow wrapping 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool TextAllowWrapping
            (
            );
            /**Sets  the text allow wrapping 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTextAllowWrapping
            (
                bool allowWrapping /** allowwrapping */ 
            );
            /**Returns  the text auto fit 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::TextStyleBuilder::TextAutoFitType TextAutoFit
            (
            );
            /**Sets  the text auto fit 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTextAutoFit
            (
                NXOpen::Diagramming::TextStyleBuilder::TextAutoFitType autoFit /** autofit */ 
            );
            /**Returns  the text color font width 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::TextColorFontWidthBuilder * TextColorFontWidth
            (
            );
            /**Returns  whether the text is underlined 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool TextUnderlined
            (
            );
            /**Sets  whether the text is underlined 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTextUnderlined
            (
                bool underlined /** underlined */ 
            );
            /**Returns  whether the text is overlined 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool TextOverlined
            (
            );
            /**Sets  whether the text is overlined 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTextOverlined
            (
                bool overlined /** overlined */ 
            );
            /**Returns  the height of the annotation 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double TextHeight
            (
            );
            /**Sets  the height of the annotation 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTextHeight
            (
                double height /** height */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
