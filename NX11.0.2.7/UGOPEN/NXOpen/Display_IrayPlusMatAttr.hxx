#ifndef NXOpen_DISPLAY_IRAYPLUSMATATTR_HXX_INCLUDED
#define NXOpen_DISPLAY_IRAYPLUSMATATTR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_IrayPlusMatAttr.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Display_IrayPlusMatAttr.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class IrayPlusMatAttr;
    }
    namespace Display
    {
        class _IrayPlusMatAttrBuilder;
        class IrayPlusMatAttrImpl;
        /** Represents a IrayPlus Attribute 
                 <br> This class is restricted to being called from a program running during an 
                Interactive NX session.  If run from a non-interactive session it will 
                return NULL. <br> 
                 <br> IrayPlusMatAttr is not supported in KF.  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  IrayPlusMatAttr : public NXOpen::TaggedObject
        {
            private: IrayPlusMatAttrImpl * m_irayplusmatattr_impl;
            private: friend class  _IrayPlusMatAttrBuilder;
            protected: IrayPlusMatAttr();
            public: ~IrayPlusMatAttr();
            /** To set attribute value for specific fomatted attribute name 
                        The string attribute name format should be : 
                        "layer name-interface name-attribute name"
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetValueFromString
            (
                const NXString & attribueValue /** attribuevalue */ 
            );
            /** To set attribute value for specific fomatted attribute name 
                        The string attribute name format should be : 
                        "layer name-interface name-attribute name"
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            void SetValueFromString
            (
                const char * attribueValue /** attribuevalue */ 
            );
            /** To get attribute's value in string for specific fomatted attribute name 
                        The string attribute name format should be : 
                        "layer name-interface name-attribute name"
                     @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetValueToString
            (
            );
            /**Returns  the parameter name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ParameterName
            (
            );
            /**Sets  the parameter name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetParameterName
            (
                const NXString & parameterName /** parametername */ 
            );
            /**Sets  the parameter name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            void SetParameterName
            (
                const char * parameterName /** parametername */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
