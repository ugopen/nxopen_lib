#ifndef NXOpen_AME_NAMINGRULELISTBUILDER_HXX_INCLUDED
#define NXOpen_AME_NAMINGRULELISTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_NamingRuleListBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_NamingRuleBuilder.hxx>
#include <NXOpen/AME_NamingRuleListBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class NamingRuleListBuilder;
    }
    namespace AME
    {
        class NamingRuleBuilder;
    }
    namespace AME
    {
        class NamingRuleBuilderList;
    }
    namespace AME
    {
        class _NamingRuleListBuilderBuilder;
        class NamingRuleListBuilderImpl;
        /** Classification to Engineering Object Name Map Builder  <br> this is a block  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  NamingRuleListBuilder : public NXOpen::TaggedObject
        {
            private: NamingRuleListBuilderImpl * m_namingrulelistbuilder_impl;
            private: friend class  _NamingRuleListBuilderBuilder;
            protected: NamingRuleListBuilder();
            public: ~NamingRuleListBuilder();
            /**Returns  the pair list 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::NamingRuleBuilderList * List
            (
            );
            /** Create a new rule builder  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::NamingRuleBuilder * CreateRule
            (
            );
            /** Delete rule 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void DeleteRule
            (
                NXOpen::AME::NamingRuleBuilder * ruleBuilder /** rulebuilder */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
