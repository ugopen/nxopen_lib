#ifndef NXOpen_FEATURES_EXTENDSHEETBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_EXTENDSHEETBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ExtendSheetBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_ExtendSheetBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class ExtendSheetBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    namespace Features
    {
        class _ExtendSheetBuilderBuilder;
        class ExtendSheetBuilderImpl;
        /**
            Represents a @link NXOpen::Features::ExtendSheet NXOpen::Features::ExtendSheet@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::TrimFeatureCollection::CreateExtendSheetBuilder  NXOpen::Features::TrimFeatureCollection::CreateExtendSheetBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        BodyOutputOption </td> <td> 
         
        ExtendOriginalSheet </td> </tr> 

        <tr><td> 
         
        CopyOriginal </td> <td> 
         
        false </td> </tr> 

        <tr><td> 
         
        LimitMethod </td> <td> 
         
        Offset </td> </tr> 

        <tr><td> 
         
        Offset.Value </td> <td> 
         
        5 (millimeters part), 0.2 (inches part) </td> </tr> 

        <tr><td> 
         
        SideEdgeShapeOption </td> <td> 
         
        Automatic </td> </tr> 

        <tr><td> 
         
        SurfaceShapeOption </td> <td> 
         
        NaturalCurvature </td> </tr> 

        </table>  

         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  ExtendSheetBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** Determines the Limit type for extension */
            public: enum Limit
            {
                LimitOffset/** Limit by offset distance  */,
                LimitUntilSelected/** Limit by selected face/plane */
            };

            /** Determines the surface type of the extension */
            public: enum SurfaceShape
            {
                SurfaceShapeNaturalCurvature/** Extends a B-surface with a small area that is curvature continuous at the boundary, and then tangent beyond that area. */,
                SurfaceShapeNaturalTangent/** Extends a B-surface tangent from the boundary. */,
                SurfaceShapeMirrored/** Extends a B-surface by mirroring the curvature continuous shape of the surface. */
            };

            /** Determines the path of the extension */
            public: enum SideEdgeShape
            {
                SideEdgeShapeAutomatic/** automatic */ ,
                SideEdgeShapeTangent/** tangent */ ,
                SideEdgeShapeOrthogonal/** orthogonal */ 
            };

            /** Creates extension as an existing or a new entity */
            public: enum BodyOutput
            {
                BodyOutputExtendOriginalSheet/** extend original sheet */ ,
                BodyOutputExtendasNewFace/** extendas new face */ ,
                BodyOutputExtendasNewSheet/** extendas new sheet */ 
            };

            private: ExtendSheetBuilderImpl * m_extendsheetbuilder_impl;
            private: friend class  _ExtendSheetBuilderBuilder;
            protected: ExtendSheetBuilder();
            public: ~ExtendSheetBuilder();
            /**Returns  the input edges to extend 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * TargetBoundaryEdges
            (
            );
            /**Returns  the option to control limit by distance or until selected objects 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ExtendSheetBuilder::Limit LimitMethod
            (
            );
            /**Sets  the option to control limit by distance or until selected objects 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetLimitMethod
            (
                NXOpen::Features::ExtendSheetBuilder::Limit limitMethod /** limitmethod */ 
            );
            /**Returns  the offset distance to extend 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Offset
            (
            );
            /**Returns  the limiting tool face or plane to extend to 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * LimitTools
            (
            );
            /**Returns  the method by which the surface is extended which defines the shape 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ExtendSheetBuilder::SurfaceShape SurfaceShapeOption
            (
            );
            /**Sets  the method by which the surface is extended which defines the shape 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSurfaceShapeOption
            (
                NXOpen::Features::ExtendSheetBuilder::SurfaceShape surfaceShapeOption /** surfaceshapeoption */ 
            );
            /**Returns  the direction by which the edge is extended 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ExtendSheetBuilder::SideEdgeShape SideEdgeShapeOption
            (
            );
            /**Sets  the direction by which the edge is extended 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSideEdgeShapeOption
            (
                NXOpen::Features::ExtendSheetBuilder::SideEdgeShape sideEdgeShapeOption /** sideedgeshapeoption */ 
            );
            /**Returns  the option to control whether the shape is extended as the original sheet, as a new face, or as a new sheet 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ExtendSheetBuilder::BodyOutput BodyOutputOption
            (
            );
            /**Sets  the option to control whether the shape is extended as the original sheet, as a new face, or as a new sheet 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetBodyOutputOption
            (
                NXOpen::Features::ExtendSheetBuilder::BodyOutput bodyOutputOption /** bodyoutputoption */ 
            );
            /**Returns  the copy original option determines if the original body is modified or a copy of the original is made 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool CopyOriginal
            (
            );
            /**Sets  the copy original option determines if the original body is modified or a copy of the original is made 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCopyOriginal
            (
                bool copyOriginal /** copyoriginal */ 
            );
            /**Returns  the distance tolerance 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double DistanceTolerance
            (
            );
            /**Sets  the distance tolerance 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDistanceTolerance
            (
                double tolerance /** tolerance */ 
            );
            /** Option to reverse the extension side of the edge
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void ReverseExtensionSide
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
