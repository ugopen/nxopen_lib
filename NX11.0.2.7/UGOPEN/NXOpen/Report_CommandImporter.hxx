#ifndef NXOpen_REPORT_COMMANDIMPORTER_HXX_INCLUDED
#define NXOpen_REPORT_COMMANDIMPORTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Report_CommandImporter.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/Report_Command.hxx>
#include <NXOpen/libnxopencpp_report_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Report
    {
        class CommandImporter;
    }
    namespace Report
    {
        class Command;
    }
    namespace Report
    {
    }
    namespace Report
    {
        class CommandImporterImpl;
        /** Represents a command importer to import the commands into command libary. 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_REPORTEXPORT  CommandImporter : public NXOpen::TransientObject
        {
            /** Represents the override option when there is already a command existing. */
            public: enum OverrideOption
            {
                OverrideOptionIgnore/** No action, do not import to library */,
                OverrideOptionReplace/** Import to replace the existing one  */,
                OverrideOptionCopy/** Import and append a new one */
            };

            private: CommandImporterImpl * m_commandimporter_impl;
            /// \cond NX_NO_DOC 
            public: explicit CommandImporter(void *ptr);
            /// \endcond 
            /**Returns  the command override option. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Report::CommandImporter::OverrideOption ImportOption
            (
            );
            /**Sets  the command override option. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetImportOption
            (
                NXOpen::Report::CommandImporter::OverrideOption importOption /** importoption */ 
            );
            /** Gets all candidate commands in library file. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void GetImportCandidates
            (
                std::vector<NXOpen::Report::Command *> & pCommands /** pcommands */ 
            );
            /** Imports the selected commands into command library. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void ImportCommands
            (
                const std::vector<int> & pCommandIndexes /** pcommandindexes */ 
            );
            /** Destroys the object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~CommandImporter();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
