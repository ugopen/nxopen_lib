#ifndef NXOpen_CAE_MODELCHECK_ELEMENTQUALITYCHECKBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MODELCHECK_ELEMENTQUALITYCHECKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelCheck_ElementQualityCheckBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ModelCheckDataTypes.hxx>
#include <NXOpen/CAE_ModelCheck_ElementQualityCheckBuilder.hxx>
#include <NXOpen/CAE_ModelCheck_ElementQualityCheckResults.hxx>
#include <NXOpen/CAE_NumberFormat.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_ModelCheck_ISelectionBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ModelCheck
        {
            class ElementQualityCheckBuilder;
        }
    }
    class Builder;
    namespace CAE
    {
        namespace ModelCheck
        {
            class ElementQualityCheckResults;
        }
    }
    namespace CAE
    {
        namespace ModelCheck
        {
            class ISelectionBuilder;
        }
    }
    namespace CAE
    {
        class NumberFormat;
    }
    class NXColor;
    class SelectTaggedObjectList;
    namespace CAE
    {
        namespace ModelCheck
        {
            class _ElementQualityCheckBuilderBuilder;
            class ElementQualityCheckBuilderImpl;
            /**Represents a @link NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder@endlink  to
                     perform quality checking on the candidate elements. Set the properties of the 
                    @link NXOpen::CAE::ModelCheck::ElementQualitySetting NXOpen::CAE::ModelCheck::ElementQualitySetting@endlink  instance for the
                    current solver language in the CAE part to define the specific quality checks to perform. 
                
                    Those elements with failed quality check results will be displayed according to the display setting
                    @link NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::ShowFailedElementsLabel NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::ShowFailedElementsLabel @endlink and @link NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::SetShowFailedElementsLabel NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::SetShowFailedElementsLabel @endlink  and 
                    @link NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::FailedElementsColor NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::FailedElementsColor @endlink and @link NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::SetFailedElementsColor NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::SetFailedElementsColor @endlink .
                
                    The report will be generated according to @link NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::ElementReportFormat NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::ElementReportFormat @endlink and @link NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::SetElementReportFormat NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::SetElementReportFormat @endlink 
                
                    You can do element quality check by @link Builder::Commit Builder::Commit@endlink  and 
                    @link NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::ExecuteCheck NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::ExecuteCheck@endlink . 
                    @link Builder::Commit Builder::Commit@endlink  performs the check, displays the failed elements and generates the report 
                    in a listing window. But @link NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder@endlink  just performs the check and
                    returns the check result @link NXOpen::CAE::ModelCheck::ElementQualityCheckResults NXOpen::CAE::ModelCheck::ElementQualityCheckResults@endlink 
                     <br> To create a new instance of this class, use @link NXOpen::CAE::ModelCheckManager::CreateElementQualityCheckBuilder  NXOpen::CAE::ModelCheckManager::CreateElementQualityCheckBuilder @endlink  <br> 
             <br>  Created in NX8.5.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  ElementQualityCheckBuilder : public NXOpen::Builder, public virtual NXOpen::CAE::ModelCheck::ISelectionBuilder
            {
                /** indicates how to generate report */
                public: enum ReportFormat
                {
                    ReportFormatNone/** Does not generate report */,
                    ReportFormatFailed/** Only lists check results for elements with error results in the report */,
                    ReportFormatWarning/** Only lists check results for elements with warning results in the report */,
                    ReportFormatFailedAndWarning/** Lists check results for elements with both error and warning results in the report */,
                    ReportFormatAll/** Lists check results for all elements */
                };

                /** indicates how to create output group */
                public: enum OutputElements
                {
                    OutputElementsNone/** Output nothing */,
                    OutputElementsFailed/** Creates OUTPUT group with failed elements */,
                    OutputElementsWarning/** Creates OUTPUT group with warning elements */,
                    OutputElementsFailedAndWarning/** Creates OUTPUT group with both warning and failed elements */
                };

                private: ElementQualityCheckBuilderImpl * m_elementqualitycheckbuilder_impl;
                private: friend class  _ElementQualityCheckBuilderBuilder;
                protected: ElementQualityCheckBuilder();
                public: ~ElementQualityCheckBuilder();
                /**Returns  the selected objects to be checked. The objects must be @link NXOpen::CAE::Mesh NXOpen::CAE::Mesh@endlink  or
                                @link NXOpen::CAE::FEElement NXOpen::CAE::FEElement@endlink  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectTaggedObjectList * SelectionList
                (
                );
                /**Returns  the value indicating whether to show label for those failed elements 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool ShowFailedElementsLabel
                (
                );
                /**Sets  the value indicating whether to show label for those failed elements 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetShowFailedElementsLabel
                (
                    bool showFailedElementsLabel /** showfailedelementslabel */ 
                );
                /**Returns  the display color of failed elements 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * FailedElementsColor
                (
                );
                /**Sets  the display color of failed elements 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetFailedElementsColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the display color of warning elements 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * WarningElementsColor
                (
                );
                /**Sets  the display color of warning elements 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetWarningElementsColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the element output options 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::OutputElements ElementsOutputOption
                (
                );
                /**Sets  the element output options 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetElementsOutputOption
                (
                    NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::OutputElements outputElements /** outputelements */ 
                );
                /**Returns  the report style 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::ReportFormat ElementReportFormat
                (
                );
                /**Sets  the report style 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetElementReportFormat
                (
                    NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::ReportFormat reportElements /** reportelements */ 
                );
                /**Returns  the number format option 
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::NumberFormat * NumberFormat
                (
                );
                /** Execute element quality checking for @link NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::SelectionList NXOpen::CAE::ModelCheck::ElementQualityCheckBuilder::SelectionList@endlink 
                                and returns the check results.You could also use @link Builder::Commit Builder::Commit@endlink  to do
                                the checking. @link Builder::Commit Builder::Commit@endlink  only executes the checking, displaying failed elements and
                                generating report, but does not return the results
                             @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: NXOpen::CAE::ModelCheck::ElementQualityCheckResults * ExecuteCheck
                (
                );
                /**Returns  the check scope setting 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual NXOpen::CAE::ModelCheck::CheckScope CheckScopeOption
                (
                );
                /**Sets  the check scope setting 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual void SetCheckScopeOption
                (
                    NXOpen::CAE::ModelCheck::CheckScope scope /** scope */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
