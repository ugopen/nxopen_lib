#ifndef NXOpen_CAE_ELEMENTDETACHBUILDER_HXX_INCLUDED
#define NXOpen_CAE_ELEMENTDETACHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ElementDetachBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ElementDetachBuilder.hxx>
#include <NXOpen/CAE_SelectElementsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ElementDetachBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SelectElementsBuilder;
    }
    namespace CAE
    {
        class SelectFENodeList;
    }
    namespace CAE
    {
        class _ElementDetachBuilderBuilder;
        class ElementDetachBuilderImpl;
        /**
            Represents a @link NXOpen::CAE::ElementDetachBuilder NXOpen::CAE::ElementDetachBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::NodeElementManager::CreateElementDetachBuilder  NXOpen::CAE::NodeElementManager::CreateElementDetachBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ElementDetachBuilder : public NXOpen::Builder
        {
            private: ElementDetachBuilderImpl * m_elementdetachbuilder_impl;
            private: friend class  _ElementDetachBuilderBuilder;
            protected: ElementDetachBuilder();
            public: ~ElementDetachBuilder();
            /**Returns  the selected elements which are to be detached 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SelectElementsBuilder * ElementSelection
            (
            );
            /**Returns  the nodes which will take part in detachment
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SelectFENodeList * DetachmentNodes
            (
            );
            /**Returns  the option which indicates whether all detachment nodes are to be selected.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool DetachNodeOption
            (
            );
            /**Sets  the option which indicates whether all detachment nodes are to be selected.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDetachNodeOption
            (
                bool fDetachNode /** fdetachnode */ 
            );
            /**Returns  the option which indicates whether to create a new mesh out of detached elements.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool NewMeshOption
            (
            );
            /**Sets  the option which indicates whether to create a new mesh out of detached elements.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetNewMeshOption
            (
                bool fNewMesh /** fnewmesh */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
