#ifndef NXOpen_FEATURES_VEHICLEDESIGN_SEATBELTANCHORAGEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_VEHICLEDESIGN_SEATBELTANCHORAGEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VehicleDesign_SeatBeltAnchorageBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_VehicleDesign_SeatBeltAnchorageBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace VehicleDesign
        {
            class SeatBeltAnchorageBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class Point;
    namespace Features
    {
        namespace VehicleDesign
        {
            class _SeatBeltAnchorageBuilderBuilder;
            class SeatBeltAnchorageBuilderImpl;
            /**
                Represents a @link Features::VehicleDesign::SeatBeltAnchorage Features::VehicleDesign::SeatBeltAnchorage@endlink  builder
                 <br> To create a new instance of this class, use @link NXOpen::Features::VehicleDesignCollection::CreateSeatBeltAnchorageBuilder  NXOpen::Features::VehicleDesignCollection::CreateSeatBeltAnchorageBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            AnchorageLocation </td> <td> 
             
            VehicleStructure </td> </tr> 

            <tr><td> 
             
            Atl </td> <td> 
             
            No </td> </tr> 

            <tr><td> 
             
            BackAngleDbl </td> <td> 
             
            22 </td> </tr> 

            <tr><td> 
             
            BackAngleDim.Value </td> <td> 
             
            22 </td> </tr> 

            <tr><td> 
             
            BeltRouting </td> <td> 
             
            OutsideSeatThruSeatSpring </td> </tr> 

            <tr><td> 
             
            FloorHeightDim.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            LowerArea </td> <td> 
             
            Yes </td> </tr> 

            <tr><td> 
             
            SDimension.Value </td> <td> 
             
            140 (millimeters part), 5.51 (inches part) </td> </tr> 

            <tr><td> 
             
            SeatPosition </td> <td> 
             
            Left </td> </tr> 

            <tr><td> 
             
            SeatType </td> <td> 
             
            MovableFront </td> </tr> 

            <tr><td> 
             
            SgrpXvalDim.Value </td> <td> 
             
            1500 (millimeters part), 59.06 (inches part) </td> </tr> 

            <tr><td> 
             
            SgrpYvalDim.Value </td> <td> 
             
            -400 (millimeters part), -15.75 (inches part) </td> </tr> 

            <tr><td> 
             
            SgrpZvalDim.Value </td> <td> 
             
            650 (millimeters part), 25.59 (inches part) </td> </tr> 

            <tr><td> 
             
            Standard </td> <td> 
             
            J383SeatBeltAnchorage </td> </tr> 

            <tr><td> 
             
            UpArea </td> <td> 
             
            Yes </td> </tr> 

            </table>  

             <br>  Created in NX11.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  SeatBeltAnchorageBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** the standard type */
                public: enum StandardTypes
                {
                    StandardTypesJ383SeatBeltAnchorage/** j383 */,
                    StandardTypesJ1369ChildRestraintTetherStraps/** j1369 */,
                    StandardTypesBothJ383AndJ1369/** both */,
                    StandardTypesECE14SafetyBeltAnchorage/** ECER14 Safty Belt */,
                    StandardTypesEce14isofix/** ECER14 ISOFIX */
                };

                /** the upper area type */
                public: enum UpperAreaType
                {
                    UpperAreaTypeYes/** show upper area */,
                    UpperAreaTypeNo/** hide upper area */
                };

                /** the lower area type  */
                public: enum LowerAreaType
                {
                    LowerAreaTypeYes/** show lower area */,
                    LowerAreaTypeNo/** hide lower area */
                };

                /** the seat belt anchorage location type */
                public: enum AnchorageLocationTypes
                {
                    AnchorageLocationTypesVehicleStructure/** vehicle structure */,
                    AnchorageLocationTypesSeatAssembly/** seat assembly */
                };

                /** the seat belt routing type */
                public: enum RoutingTypes
                {
                    RoutingTypesOutsideSeatThruSeatSpring/** outside */,
                    RoutingTypesToAnchorage/** to anchorage */
                };

                /** the seat type */
                public: enum SeatTypes
                {
                    SeatTypesMovableFront/** front */,
                    SeatTypesMovableRear/** rear */,
                    SeatTypesFixed/** fixed */
                };

                /** the seat position type */
                public: enum SeatPositionTypes
                {
                    SeatPositionTypesLeft/** left */,
                    SeatPositionTypesRight/** right */,
                    SeatPositionTypesNotOutboard/** non-outboard */
                };

                /** the show ATL type */
                public: enum ATLType
                {
                    ATLTypeYes/** show ATL area */,
                    ATLTypeNo/** hide ATL area */
                };

                /** the lower limit type */
                public: enum LowerLimitType
                {
                    LowerLimitTypeLength450/** lower limit distance of 450 */,
                    LowerLimitTypeLength500/** lower limit distance of 500 */
                };

                /** the lone limit type */
                public: enum LOneLimitType
                {
                    LOneLimitTypeDegree30And80/** L1 limit angle area between 30 degree and 80 degree */,
                    LOneLimitTypeDegree50And70/** L1 limit angle area between 50 degree and 70 degree */
                };

                /** the ltwo limit type */
                public: enum LTwoLimitType
                {
                    LTwoLimitTypeDegree45And80/** L2 limit angle area between 45 degree and 80 degree */,
                    LTwoLimitTypeDegree50And70/** L2 limit angle area between 50 degree and 70 degree */
                };

                private: SeatBeltAnchorageBuilderImpl * m_seatbeltanchoragebuilder_impl;
                private: friend class  _SeatBeltAnchorageBuilderBuilder;
                protected: SeatBeltAnchorageBuilder();
                public: ~SeatBeltAnchorageBuilder();
                /**Returns  the standard for seat belt anchorage 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::StandardTypes Standard
                (
                );
                /**Sets  the standard for seat belt anchorage 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetStandard
                (
                    NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::StandardTypes standard /** standard */ 
                );
                /** Shows an illustration picture for standard j383
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void J383Illu
                (
                );
                /** Shows an illustration picture for standard j1369
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void J1369Illu
                (
                );
                /** Shows an illustration picture for standard ECER14 safety belt anchorage 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void Ece14SafeIllu
                (
                );
                /** Shows an illustration picture for standard ECER14 ISOFIX 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void Ece14Isofix
                (
                );
                /**Returns  the upper area 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::UpperAreaType UpArea
                (
                );
                /**Sets  the upper area 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUpArea
                (
                    NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::UpperAreaType upArea /** uparea */ 
                );
                /**Returns  the lower area 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::LowerAreaType LowerArea
                (
                );
                /**Sets  the lower area 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLowerArea
                (
                    NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::LowerAreaType lowerArea /** lowerarea */ 
                );
                /**Returns  the dimension expression for the X coordinate of SgRp 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SgrpXvalDim
                (
                );
                /**Returns  the dimension expression for the Y coordinate of SgRp 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SgrpYvalDim
                (
                );
                /**Returns  the dimension expression for the Z coordinate of SgRp 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SgrpZvalDim
                (
                );
                /**Returns  the SgRp point 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * SgrpPoint
                (
                );
                /**Sets  the SgRp point 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSgrpPoint
                (
                    NXOpen::Point * sgrpPoint /** sgrppoint */ 
                );
                /**Returns  the dimension expression for back angle 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * BackAngleDim
                (
                );
                /**Returns  the value of back angle 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: double BackAngleDbl
                (
                );
                /**Sets  the value of back angle 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBackAngleDbl
                (
                    double backAngleDbl /** backangledbl */ 
                );
                /**Returns  the dimension expression for floor height 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FloorHeightDim
                (
                );
                /**Returns  the dimension expression for S dimension 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SDimension
                (
                );
                /**Returns  the anchorage location type 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::AnchorageLocationTypes AnchorageLocation
                (
                );
                /**Sets  the anchorage location type 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAnchorageLocation
                (
                    NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::AnchorageLocationTypes anchorageLocation /** anchoragelocation */ 
                );
                /**Returns  the belt routing type 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::RoutingTypes BeltRouting
                (
                );
                /**Sets  the belt routing type 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBeltRouting
                (
                    NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::RoutingTypes beltRouting /** beltrouting */ 
                );
                /**Returns  the seat type 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::SeatTypes SeatType
                (
                );
                /**Sets  the seat type 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSeatType
                (
                    NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::SeatTypes seatType /** seattype */ 
                );
                /**Returns  the seat position type 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::SeatPositionTypes SeatPosition
                (
                );
                /**Sets  the seat position type 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSeatPosition
                (
                    NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::SeatPositionTypes seatPosition /** seatposition */ 
                );
                /**Returns  the atl option 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::ATLType Atl
                (
                );
                /**Sets  the atl option 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAtl
                (
                    NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::ATLType atl /** atl */ 
                );
                /**Returns  the lower limit option 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::LowerLimitType LowerLimit
                (
                );
                /**Sets  the lower limit option 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLowerLimit
                (
                    NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::LowerLimitType lowerLimit /** lowerlimit */ 
                );
                /**Returns  the l1 limit option 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::LOneLimitType L1Limit
                (
                );
                /**Sets  the l1 limit option 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetL1Limit
                (
                    NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::LOneLimitType l1Limit /** l1limit */ 
                );
                /**Returns  the l2 limit option 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::LTwoLimitType L2Limit
                (
                );
                /**Sets  the l2 limit option 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetL2Limit
                (
                    NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder::LTwoLimitType l2Limit /** l2limit */ 
                );
                /**Returns  the first angle limit 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString StringLimit1
                (
                );
                /**Sets  the first angle limit 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetStringLimit1
                (
                    const NXString & stringLimit1 /** stringlimit1 */ 
                );
                /**Sets  the first angle limit 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetStringLimit1
                (
                    const char * stringLimit1 /** stringlimit1 */ 
                );
                /**Returns  the second angle limit  
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString StringLimit2
                (
                );
                /**Sets  the second angle limit  
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetStringLimit2
                (
                    const NXString & stringLimit2 /** stringlimit2 */ 
                );
                /**Sets  the second angle limit  
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetStringLimit2
                (
                    const char * stringLimit2 /** stringlimit2 */ 
                );
                /** Create a point according to Base Data SGRP expressions  @return  
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * CreatePointWithBaseDataSGRPExpression
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
