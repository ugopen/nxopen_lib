#ifndef NXOpen_LAYOUT2D_CREATECOMPONENTFROM3DSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_LAYOUT2D_CREATECOMPONENTFROM3DSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Layout2d_CreateComponentFrom3DSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Display_DynamicSectionTypes.hxx>
#include <NXOpen/Layout2d_CreateComponentFrom3DSettingsBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_layout2d_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Layout2d
    {
        class CreateComponentFrom3DSettingsBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Layout2d
    {
        class _CreateComponentFrom3DSettingsBuilderBuilder;
        class CreateComponentFrom3DSettingsBuilderImpl;
        /**
             Represents a @link NXOpen::Layout2d::CreateComponentFrom3DSettingsBuilder NXOpen::Layout2d::CreateComponentFrom3DSettingsBuilder@endlink 
            
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_LAYOUT2DEXPORT  CreateComponentFrom3DSettingsBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: CreateComponentFrom3DSettingsBuilderImpl * m_createcomponentfrom3dsettingsbuilder_impl;
            private: friend class  _CreateComponentFrom3DSettingsBuilderBuilder;
            protected: CreateComponentFrom3DSettingsBuilder();
            public: ~CreateComponentFrom3DSettingsBuilder();
            /**Returns  the settings to determines whether or not create single 2D component definition
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool CreateSingle2DComponentDefinition
            (
            );
            /**Sets  the settings to determines whether or not create single 2D component definition
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetCreateSingle2DComponentDefinition
            (
                bool createSingle2DComponentDefinition /** createsingle2dcomponentdefinition */ 
            );
            /**Returns  the settings to determines whether or not automatically start insert 2D component command
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool AutomaticallyStartInsert2DComponentCommand
            (
            );
            /**Sets  the settings to determines whether or not automatically start insert 2D component command
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAutomaticallyStartInsert2DComponentCommand
            (
                bool automaticallyStartInsert2DComponentCommand /** automaticallystartinsert2dcomponentcommand */ 
            );
            /**Returns   the settings to specifies how the color of the 2D component curves is defined.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::DynamicSectionTypes::CurveColorOption ColorOption
            (
            );
            /**Sets   the settings to specifies how the color of the 2D component curves is defined.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetColorOption
            (
                NXOpen::Display::DynamicSectionTypes::CurveColorOption colorOption /** coloroption */ 
            );
            /**Returns   the settings to specifies the 2D component curves color.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: int Color
            (
            );
            /**Sets   the settings to specifies the 2D component curves color.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetColor
            (
                int color /** color */ 
            );
            /** Inherit Settings From Customer Default 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void InheritSettingsFromCustomerDefault
            (
            );
            /** Inherit Settings From Preference 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void InheritSettingsFromPreferences
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
