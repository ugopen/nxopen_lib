#ifndef NXOpen_FEATURES_STEPBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_STEPBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_StepBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_StepBuilder.hxx>
#include <NXOpen/GeometricUtilities_ProjectionOptions.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class StepBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class ProjectionOptions;
    }
    class Plane;
    class ScCollector;
    class Section;
    namespace Features
    {
        class _StepBuilderBuilder;
        class StepBuilderImpl;
        /**
            Represents a @link NXOpen::Features::Step NXOpen::Features::Step@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::AeroCollection::CreateStepBuilder  NXOpen::Features::AeroCollection::CreateStepBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        BoundaryOffsetDim1.Value </td> <td> 
         
        10 (millimeters part), 0.5 (inches part) </td> </tr> 

        <tr><td> 
         
        BoundaryOffsetDim2.Value </td> <td> 
         
        10 (millimeters part), 0.5 (inches part) </td> </tr> 

        <tr><td> 
         
        ChangeWallThickness </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        DepthMethod </td> <td> 
         
        OffsetFace </td> </tr> 

        <tr><td> 
         
        KeepWallThickness </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        RefObjectType1 </td> <td> 
         
        Edge </td> </tr> 

        <tr><td> 
         
        RefObjectType2 </td> <td> 
         
        Edge </td> </tr> 

        <tr><td> 
         
        ReverseDepthDirection </td> <td> 
         
        True </td> </tr> 

        <tr><td> 
         
        SpecifiedWallThicknessDim.Value </td> <td> 
         
        5 (millimeters part), 0.25 (inches part) </td> </tr> 

        <tr><td> 
         
        StepBlendRadiusDim1.Value </td> <td> 
         
        1 (millimeters part), 0.1 (inches part) </td> </tr> 

        <tr><td> 
         
        StepBlendRadiusDim2.Value </td> <td> 
         
        1 (millimeters part), 0.1 (inches part) </td> </tr> 

        <tr><td> 
         
        StepDepthDim.Value </td> <td> 
         
        10 (millimeters part), 0.5 (inches part) </td> </tr> 

        <tr><td> 
         
        StepFaceMethod1 </td> <td> 
         
        Normal </td> </tr> 

        <tr><td> 
         
        StepFaceMethod2 </td> <td> 
         
        Normal </td> </tr> 

        <tr><td> 
         
        StepRampDim1.Value </td> <td> 
         
        10 (millimeters part), 0.5 (inches part) </td> </tr> 

        <tr><td> 
         
        StepRampDim2.Value </td> <td> 
         
        10 (millimeters part), 0.5 (inches part) </td> </tr> 

        <tr><td> 
         
        StepType </td> <td> 
         
        End </td> </tr> 

        <tr><td> 
         
        StepWallBlendRadiusDim1.Value </td> <td> 
         
        1 (millimeters part), 0.1 (inches part) </td> </tr> 

        <tr><td> 
         
        StepWallBlendRadiusDim2.Value </td> <td> 
         
        1 (millimeters part), 0.1 (inches part) </td> </tr> 

        <tr><td> 
         
        StepWallMethod1 </td> <td> 
         
        Normal </td> </tr> 

        <tr><td> 
         
        StepWallMethod2 </td> <td> 
         
        Normal </td> </tr> 

        <tr><td> 
         
        StepWallRampDim1.Value </td> <td> 
         
        10 (millimeters part), 0.5 (inches part) </td> </tr> 

        <tr><td> 
         
        StepWallRampDim2.Value </td> <td> 
         
        10 (millimeters part), 0.5 (inches part) </td> </tr> 

        <tr><td> 
         
        StepWallThickDim1.Value </td> <td> 
         
        10 (millimeters part), 0.5 (inches part) </td> </tr> 

        <tr><td> 
         
        StepWallThickDim2.Value </td> <td> 
         
        10 (millimeters part), 0.5 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  StepBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** Represents the step feature type */
            public: enum StepTypes
            {
                StepTypesEnd/** Adds a step from a boundary to the edge of a face.*/,
                StepTypesMiddle/** Adds a step between two boundary curves*/,
                StepTypesChamfer/**Adds a step at the edge of a face similar to a chamfer*/
            };

            /** Represents face operations applied to the motion face*/
            public: enum DepthMethods
            {
                DepthMethodsOffsetFace/**Offsets the motion face to produce a step*/,
                DepthMethodsToSelected/**Replaces the motion face with a selected face to produce a step*/
            };

            /** Represents selected type as reference boundary object*/
            public: enum ReferenceBoundaryTypes
            {
                ReferenceBoundaryTypesFace/** Select faces as reference boundary object*/,
                ReferenceBoundaryTypesDatumPlane/** Select datum plane as reference boundary object*/,
                ReferenceBoundaryTypesCurve/** Select section curves as reference boundary object*/,
                ReferenceBoundaryTypesEdge/** Select edges as reference boundary object*/
            };

            /** Represents face operations applied to the step face*/
            public: enum StepFaceMethods
            {
                StepFaceMethodsNormal/**Orients the step face normal to the stationary face*/,
                StepFaceMethodsAlignwithReferenceFace/**Aligns the step face with the reference face*/,
                StepFaceMethodsRuledRamp/**Replaces the step face with a ruled ramp face*/,
                StepFaceMethodsVariableOffsetRamp/**Replaces the step face with a variable offset ramp face*/,
                StepFaceMethodsBlend/**Blends the step face*/
            };

            /** Represents face operation applied to the step wall face*/
            public: enum StepWallMethods
            {
                StepWallMethodsNormal/**Orients the step-wall face normal to the input face*/,
                StepWallMethodsOffsetofStepFace/**Makes the step-wall face offset from the step face*/,
                StepWallMethodsRuledRamp/**Replaces the step-wall face with a ruled ramp face*/,
                StepWallMethodsVariableOffsetRamp/**Replaces the step-wall face with a variable offset ramp face*/,
                StepWallMethodsBlend/**Blends the step-wall face*/,
                StepWallMethodsExtendtoNext/**Extends the wall face to intersect the next face*/,
                StepWallMethodsExtendtoSelected/**Extends the wall face to a selected face*/
            };

            private: StepBuilderImpl * m_stepbuilder_impl;
            private: friend class  _StepBuilderBuilder;
            protected: StepBuilder();
            public: ~StepBuilder();
            /**Returns  the step type 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::StepBuilder::StepTypes StepType
            (
            );
            /**Sets  the step type 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetStepType
            (
                NXOpen::Features::StepBuilder::StepTypes stepType /** steptype */ 
            );
            /**Returns  the selected belt face 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * BeltFace
            (
            );
            /**Returns  the selected step depth method 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::StepBuilder::DepthMethods DepthMethod
            (
            );
            /**Sets  the selected step depth method 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetDepthMethod
            (
                NXOpen::Features::StepBuilder::DepthMethods depthMethod /** depthmethod */ 
            );
            /**Returns  the selected replacement face 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SelectReplacementFace
            (
            );
            /**Returns  the step depth dimension 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StepDepthDim
            (
            );
            /**Returns  the reverse offset face direction
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseDepthDirection
            (
            );
            /**Sets  the reverse offset face direction
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetReverseDepthDirection
            (
                bool reverseDepthDirection /** reversedepthdirection */ 
            );
            /**Returns  the reverse motion side 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseMotionSide
            (
            );
            /**Sets  the reverse motion side 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetReverseMotionSide
            (
                bool reverseMotionSide /** reversemotionside */ 
            );
            /**Returns  the keep wall thickness 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool KeepWallThickness
            (
            );
            /**Sets  the keep wall thickness 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetKeepWallThickness
            (
                bool keepWallThickness /** keepwallthickness */ 
            );
            /**Returns  the change wall thickness 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool ChangeWallThickness
            (
            );
            /**Sets  the change wall thickness 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetChangeWallThickness
            (
                bool changeWallThickness /** changewallthickness */ 
            );
            /**Returns  the wall thickness dimension 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SpecifiedWallThicknessDim
            (
            );
            /**Returns  the reference object type 1 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::StepBuilder::ReferenceBoundaryTypes RefObjectType1
            (
            );
            /**Sets  the reference object type 1 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetRefObjectType1
            (
                NXOpen::Features::StepBuilder::ReferenceBoundaryTypes refObjectType1 /** refobjecttype1 */ 
            );
            /**Returns  the selected boundary face 1 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SelectBoundaryFace1
            (
            );
            /**Returns  the selected boundary plane 1 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * SelectBoundaryPlane1
            (
            );
            /**Sets  the selected boundary plane 1 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetSelectBoundaryPlane1
            (
                NXOpen::Plane * selectBoundaryPlane1 /** selectboundaryplane1 */ 
            );
            /**Returns  the selected boundary section 1 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * SelectBoundarySection1
            (
            );
            /**Returns  the project direction options used to project boundary section curve 1 onto the belt face 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ProjectionOptions * ProjectionDirection1
            (
            );
            /**Returns  the selected boundary edge 1 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SelectBoundaryEdge1
            (
            );
            /**Returns  the boundary offset dimesion 1 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BoundaryOffsetDim1
            (
            );
            /**Returns  the reverse offset reference object 1 direction
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseBoundary1Direction
            (
            );
            /**Sets  the reverse offset reference object 1 direction
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetReverseBoundary1Direction
            (
                bool reverseBoundary1Direction /** reverseboundary1direction */ 
            );
            /**Returns  the reference object type 2 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::StepBuilder::ReferenceBoundaryTypes RefObjectType2
            (
            );
            /**Sets  the reference object type 2 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetRefObjectType2
            (
                NXOpen::Features::StepBuilder::ReferenceBoundaryTypes refObjectType2 /** refobjecttype2 */ 
            );
            /**Returns  the selected boundary face 2 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SelectBoundaryFace2
            (
            );
            /**Returns  the selected boundary plane 2 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * SelectBoundaryPlane2
            (
            );
            /**Sets  the selected boundary plane 2 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetSelectBoundaryPlane2
            (
                NXOpen::Plane * selectBoundaryPlane2 /** selectboundaryplane2 */ 
            );
            /**Returns  the selected boundary section2 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * SelectBoundarySection2
            (
            );
            /**Returns  the project direction options used to project boundary section curve 2 onto the belt face 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ProjectionOptions * ProjectionDirection2
            (
            );
            /**Returns  the selected boundary edge2 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SelectBoundaryEdge2
            (
            );
            /**Returns  the boundary offset dimension 2 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BoundaryOffsetDim2
            (
            );
            /**Returns  the reverse offset reference object 2 direction
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseBoundary2Direction
            (
            );
            /**Sets  the reverse offset reference object 2 direction
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetReverseBoundary2Direction
            (
                bool reverseBoundary2Direction /** reverseboundary2direction */ 
            );
            /**Returns  the step face method 1 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::StepBuilder::StepFaceMethods StepFaceMethod1
            (
            );
            /**Sets  the step face method 1 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetStepFaceMethod1
            (
                NXOpen::Features::StepBuilder::StepFaceMethods stepFaceMethod1 /** stepfacemethod1 */ 
            );
            /**Returns  the step ramp dimension 1 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StepRampDim1
            (
            );
            /**Returns  the step blend radius dimension 1 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StepBlendRadiusDim1
            (
            );
            /**Returns  the step wall method 1 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::StepBuilder::StepWallMethods StepWallMethod1
            (
            );
            /**Sets  the step wall method 1 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetStepWallMethod1
            (
                NXOpen::Features::StepBuilder::StepWallMethods stepWallMethod1 /** stepwallmethod1 */ 
            );
            /**Returns  the step wall thickness dimension 1 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StepWallThickDim1
            (
            );
            /**Returns  the step wall ramp dimension 1 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StepWallRampDim1
            (
            );
            /**Returns  the step wall blend radius dimension 1 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StepWallBlendRadiusDim1
            (
            );
            /**Returns  the selected step wall replacement face 1 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SelectStepWallReplmFace1
            (
            );
            /**Returns  the step face method 2 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::StepBuilder::StepFaceMethods StepFaceMethod2
            (
            );
            /**Sets  the step face method 2 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetStepFaceMethod2
            (
                NXOpen::Features::StepBuilder::StepFaceMethods stepFaceMethod2 /** stepfacemethod2 */ 
            );
            /**Returns  the step ramp dimension 2 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StepRampDim2
            (
            );
            /**Returns  the step blend radius dimension 2 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StepBlendRadiusDim2
            (
            );
            /**Returns  the step wall method 2 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::StepBuilder::StepWallMethods StepWallMethod2
            (
            );
            /**Sets  the step wall method 2 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_aero_design (" NX Aero Design") */
            public: void SetStepWallMethod2
            (
                NXOpen::Features::StepBuilder::StepWallMethods stepWallMethod2 /** stepwallmethod2 */ 
            );
            /**Returns  the step wall thickness dimension 2 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StepWallThickDim2
            (
            );
            /**Returns  the step wall ramp dimension 2 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StepWallRampDim2
            (
            );
            /**Returns  the step wall blend radius dimension 2 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StepWallBlendRadiusDim2
            (
            );
            /**Returns  the selected step wall replacement face 2 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SelectStepWallReplmFace2
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
