#ifndef NXOpen_AME_DEVICEFUNCTIONBUILDER_HXX_INCLUDED
#define NXOpen_AME_DEVICEFUNCTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_DeviceFunctionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_DeviceFunctionBuilder.hxx>
#include <NXOpen/AME_EODefAttributeHolder.hxx>
#include <NXOpen/AME_ObjectNameIndexBuilder.hxx>
#include <NXOpen/AME_SelectionEngineeringObjectDefinitionBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class DeviceFunctionBuilder;
    }
    namespace AME
    {
        class EODefAttributeHolder;
    }
    namespace AME
    {
        class ObjectNameIndexBuilder;
    }
    namespace AME
    {
        class SelectionEngineeringObjectDefinitionBuilder;
    }
    class Builder;
    namespace AME
    {
        class _DeviceFunctionBuilderBuilder;
        class DeviceFunctionBuilderImpl;
        /** JA class for Device Function dialog <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::DeviceFunctionBuilder  NXOpen::AME::AMEManager::DeviceFunctionBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  DeviceFunctionBuilder : public NXOpen::Builder
        {
            private: DeviceFunctionBuilderImpl * m_devicefunctionbuilder_impl;
            private: friend class  _DeviceFunctionBuilderBuilder;
            protected: DeviceFunctionBuilder();
            public: ~DeviceFunctionBuilder();
            /**Returns  the selection engineering object definition
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::SelectionEngineeringObjectDefinitionBuilder * SelectionEngObjectDefinition
            (
            );
            /**Returns  the name, index and description
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::ObjectNameIndexBuilder * NameIndex
            (
            );
            /**Returns  the attribute holder 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::EODefAttributeHolder * EoDefAttributeHolder
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
