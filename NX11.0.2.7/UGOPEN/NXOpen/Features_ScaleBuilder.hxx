#ifndef NXOpen_FEATURES_SCALEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SCALEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ScaleBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_ScaleBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class ScaleBuilder;
    }
    class CoordinateSystem;
    class Direction;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class Point;
    class ScCollector;
    class SelectBodyList;
    namespace Features
    {
        class _ScaleBuilderBuilder;
        class ScaleBuilderImpl;
        /**
            Represents a @link NXOpen::Features::Scale NXOpen::Features::Scale@endlink  builder. Inputs to this class can be convergent objects.
             <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateScaleBuilder  NXOpen::Features::FeatureCollection::CreateScaleBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ScaleAlongAxis.Value </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        ScaleOtherDirection.Value </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        ScaleXdirection.Value </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        ScaleYdirection.Value </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        ScaleZdirection.Value </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        UniformFactor.Value </td> <td> 
         
        1.0 </td> </tr> 

        </table>  

         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  ScaleBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** Scale type */
            public: enum Types
            {
                TypesUniform/** Uniform scaling */,
                TypesAxisymmetric/** axisymmetric scaling */,
                TypesGeneral/** general scaling  */
            };

            private: ScaleBuilderImpl * m_scalebuilder_impl;
            private: friend class  _ScaleBuilderBuilder;
            protected: ScaleBuilder();
            public: ~ScaleBuilder();
            /**Returns  the scale type @link NXOpen::Features::ScaleBuilder::Types NXOpen::Features::ScaleBuilder::Types@endlink 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ScaleBuilder::Types Type
            (
            );
            /**Sets  the scale type @link NXOpen::Features::ScaleBuilder::Types NXOpen::Features::ScaleBuilder::Types@endlink 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetType
            (
                NXOpen::Features::ScaleBuilder::Types type /** Gets the type of the scale method */
            );
            /**Returns  the bodyToScale 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * BodyToScale
            (
            );
            /**Returns  the collector as @link NXOpen::ScCollector NXOpen::ScCollector@endlink  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * BodyCollector
            (
            );
            /**Sets  the collector as @link NXOpen::ScCollector NXOpen::ScCollector@endlink  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetBodyCollector
            (
                NXOpen::ScCollector * scaleBody /** scale body */ 
            );
            /**Returns  the point as @link NXOpen::Point NXOpen::Point@endlink  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the point as @link NXOpen::Point NXOpen::Point@endlink  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetPoint
            (
                NXOpen::Point * point /** Set the referance point from which scaling has to be done */
            );
            /**Returns  the vector as @link NXOpen::Direction NXOpen::Direction@endlink  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * Vector
            (
            );
            /**Sets  the vector as @link NXOpen::Direction NXOpen::Direction@endlink  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetVector
            (
                NXOpen::Direction * vector /** Set the reference Axis along which scaling has to be done */
            );
            /**Returns  the csys as @link NXOpen::CoordinateSystem NXOpen::CoordinateSystem@endlink  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * Csys
            (
            );
            /**Sets  the csys as @link NXOpen::CoordinateSystem NXOpen::CoordinateSystem@endlink  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCsys
            (
                NXOpen::CoordinateSystem * csys /** Set the reference Co-ordinate system from which scaling has to be done */
            );
            /**Returns  the uniform factor 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * UniformFactor
            (
            );
            /**Returns  the scale along axis 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ScaleAlongAxis
            (
            );
            /**Returns  the scale other direction 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ScaleOtherDirection
            (
            );
            /**Returns  the scale xdirection 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ScaleXdirection
            (
            );
            /**Returns  the scale ydirection 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ScaleYdirection
            (
            );
            /**Returns  the scale zdirection 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ScaleZdirection
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
