#ifndef NXOpen_CAE_POSTSHOWHIDEBUILDER_HXX_INCLUDED
#define NXOpen_CAE_POSTSHOWHIDEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostShowhideBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_PostSelectionEntity.hxx>
#include <NXOpen/CAE_PostShowhideBuilder.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostShowhideBuilder;
    }
    namespace CAE
    {
        class PostMesh;
    }
    namespace CAE
    {
        class PostSelectionEntity;
    }
    namespace CAE
    {
        class PostShowhideBuilderImpl;
        /** @brief  Represents @link NXOpen::CAE::PostShowhideBuilder NXOpen::CAE::PostShowhideBuilder@endlink .
              It applies show or hide on all the selected objects. 

          <br> To obtain an instance of this class use CAE::Post  <br> 
         <br>  Created in NX11.0.2.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostShowhideBuilder : public NXOpen::TransientObject
        {
            /** option to show/hide the selected entities */
            public: enum Vis
            {
                VisShowonly/** showonly */ ,
                VisShow/** show */ ,
                VisHide/** hide */ 
            };

            private: PostShowhideBuilderImpl * m_postshowhidebuilder_impl;
            /// \cond NX_NO_DOC 
            public: explicit PostShowhideBuilder(void *ptr);
            /// \endcond 
            /** Commits the showhide to show or hide the selected entities 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void CommitShowhide
            (
            );
            /** Frees the object from memory.  After this method is called,
                        it is illegal to use the object. In .NET, this method is automatically
                        called when the object is deleted by the garbage collector. 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: virtual ~PostShowhideBuilder();
            /** Deletes the showhide builder. User must call @link TransientObject::Dispose TransientObject::Dispose@endlink  after calling this method. 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: void Delete
            (
            );
            /** Vector to store selected entities objects
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSelectedEntities
            (
                const std::vector<NXOpen::CAE::PostSelectionEntity *> & selent /** @link NXOpen::CAE::PostSelectionEntity NXOpen::CAE::PostSelectionEntity@endlink  pointer list*/
            );
            /** Vector to store selected entities objects
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetSelectedEntities
            (
                std::vector<NXOpen::CAE::PostSelectionEntity *> & selent /** selent */ 
            );
            /** Enum whther the entities to be shown or hidden @return  
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PostShowhideBuilder::Vis GetVisibility
            (
            );
            /** Enum whther the entities to be shown or hidden
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetVisibility
            (
                NXOpen::CAE::PostShowhideBuilder::Vis doshow /** doshow */ 
            );
            /** Gets postview id @return  
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: int GetPvid
            (
            );
            /** Sets Postview id
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetPvid
            (
                int pvid /** pvid */ 
            );
            /** Sets the mesh objects to be shown or hidden .Visibility to be set SetVisibility
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetMeshes
            (
                const std::vector<NXOpen::CAE::PostMesh *> & meshes /** meshes */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
