#ifndef NXOpen_SELECTIONSUBSCRIBER_HXX_INCLUDED
#define NXOpen_SELECTIONSUBSCRIBER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SelectionSubscriber.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class SelectionSubscriber;
    class TaggedObject;
    class SelectionSubscriberImpl;
    /**
    Defines a @link SelectionSubscriber SelectionSubscriber@endlink  for managing selection events
     <br> To create a new instance of this class, use @link NXOpen::Selection::CreateSelectionSubscriber  NXOpen::Selection::CreateSelectionSubscriber @endlink  <br> 
     <br>  Created in NX11.0.0.  <br>  
    */
    class NXOPENUICPPEXPORT  SelectionSubscriber : public NXOpen::TransientObject
    {
        public: /** Prototype for a callback which is called at the end of a series of changes to the set of
                selected objects.  The series of changes are all of the changes which occur as part 
                of the response to a single user action. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        typedef NXOpen::Callback3<void, bool, std::vector<NXOpen::TaggedObject *>, std::vector<NXOpen::TaggedObject *>> OnSelectionChangeCallback;
        private: SelectionSubscriberImpl * m_selectionsubscriber_impl;
        /// \cond NX_NO_DOC 
        public: explicit SelectionSubscriber(void *ptr);
        /// \endcond 
        /** Activate the subscriber so that it will receive selection change notifications. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void Activate
        (
        );
        /** Deactivate the subscriber so that it will not receive selection change notifications. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void Deactivate
        (
        );
        /** Is the subscriber active?  @return  
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: bool IsActive
        (
        );
        /** Register a callback which is called at the end of a series of changes to the set of
                selected objects.  The series of changes are all of the changes which occur as part 
                of the response to a single user action. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void RegisterOnSelectionChangeCallback
        (
            const NXOpen::SelectionSubscriber::OnSelectionChangeCallback&  callbackToRegister /** Callback */
        );
        /** Releases resources allocated by the selection subscriber. Call this method when you are done with your selection operations. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: virtual ~SelectionSubscriber();

        /// \cond NX_NO_DOC 
        /** For Internal Purposes Only. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void IsTest
        (
            const std::vector<NXOpen::TaggedObject *> & removeList /** Objects to remove from list */
        );

        /// \endcond 
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
