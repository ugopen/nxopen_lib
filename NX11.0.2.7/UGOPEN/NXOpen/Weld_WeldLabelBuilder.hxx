#ifndef NXOpen_WELD_WELDLABELBUILDER_HXX_INCLUDED
#define NXOpen_WELD_WELDLABELBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_WeldLabelBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_LeaderBuilder.hxx>
#include <NXOpen/Annotations_OriginBuilder.hxx>
#include <NXOpen/Annotations_StyleBuilder.hxx>
#include <NXOpen/Annotations_TextWithEditControlsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Weld_WeldLabelBuilder.hxx>
#include <NXOpen/libnxopencpp_weld_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Weld
    {
        class WeldLabelBuilder;
    }
    namespace Annotations
    {
        class LeaderBuilder;
    }
    namespace Annotations
    {
        class OriginBuilder;
    }
    namespace Annotations
    {
        class StyleBuilder;
    }
    namespace Annotations
    {
        class TextWithEditControlsBuilder;
    }
    class Builder;
    class CoordinateSystem;
    class SelectNXObjectList;
    namespace Weld
    {
        class _WeldLabelBuilderBuilder;
        class WeldLabelBuilderImpl;
        /** Create weld labels for multiple welds and BIW locators, this builder's Commit can produce more than one object, 
                the GetCommittedObjects can be used to get the objects and the order of GetCommittedObject's output array is stable.  <br> To create a new instance of this class, use @link NXOpen::Weld::WeldManager::CreateWeldLabelBuilder  NXOpen::Weld::WeldManager::CreateWeldLabelBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        IncludeLeader </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        Text.TextBlock.CustomSymbolScale </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        Text.TextBlock.SymbolAspectRatio </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        Text.TextBlock.SymbolHeight </td> <td> 
         
        25.4 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        Text.TextBlock.SymbolLength </td> <td> 
         
        25.4 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        Text.TextBlock.SymbolPreferences </td> <td> 
         
        UseCurrent </td> </tr> 

        <tr><td> 
         
        Text.TextBlock.SymbolScale </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        Text.TextBlock.SymbolSizeMethod </td> <td> 
         
        ScaleAndAspectRatio </td> </tr> 

        </table>  

         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_WELDEXPORT  WeldLabelBuilder : public NXOpen::Builder
        {
            /** This represents the Orientation Plane Type. */
            public: enum OrientationPlaneType
            {
                OrientationPlaneTypeXYPlane/** xyplane */ ,
                OrientationPlaneTypeXZPlane/** xzplane */ ,
                OrientationPlaneTypeYZPlane/** yzplane */ ,
                OrientationPlaneTypeModelView/** model view */ ,
                OrientationPlaneTypeLastUserDefined/** last user defined */ ,
                OrientationPlaneTypeUserDefined/** user defined */ 
            };

            private: WeldLabelBuilderImpl * m_weldlabelbuilder_impl;
            private: friend class  _WeldLabelBuilderBuilder;
            protected: WeldLabelBuilder();
            public: ~WeldLabelBuilder();
            /**Returns  the objects that are used to create labels. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * Objects
            (
            );
            /**Returns  the @link NXOpen::Annotations::TextWithEditControlsBuilder NXOpen::Annotations::TextWithEditControlsBuilder@endlink  for the annotation 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::TextWithEditControlsBuilder * Text
            (
            );
            /**Returns  the @link NXOpen::Annotations::OriginBuilder NXOpen::Annotations::OriginBuilder@endlink  for the annotation 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::OriginBuilder * Origin
            (
            );
            /**Returns  the plane type. 
             <br>  Created in NX8.5.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Weld::WeldLabelBuilder::OrientationPlaneType PlaneType
            (
            );
            /**Sets  the plane type. 
             <br>  Created in NX8.5.2.  <br>  
             <br> License requirements : ugweld ("UG WELD") OR structure_weld ("STRUCTURE WELD") */
            public: void SetPlaneType
            (
                NXOpen::Weld::WeldLabelBuilder::OrientationPlaneType planeType /** planetype */ 
            );
            /**Returns  the user specified coordinate system. 
             <br>  Created in NX8.5.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * UserCsys
            (
            );
            /**Sets  the user specified coordinate system. 
             <br>  Created in NX8.5.2.  <br>  
             <br> License requirements : ugweld ("UG WELD") OR structure_weld ("STRUCTURE WELD") */
            public: void SetUserCsys
            (
                NXOpen::CoordinateSystem * userCsys /** usercsys */ 
            );
            /**Returns  the leader option, indicates whether to create a leader 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool IncludeLeader
            (
            );
            /**Sets  the leader option, indicates whether to create a leader 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") OR structure_weld ("STRUCTURE WELD") */
            public: void SetIncludeLeader
            (
                bool leader /** leader */ 
            );
            /**Returns  the @link NXOpen::Annotations::LeaderBuilder NXOpen::Annotations::LeaderBuilder@endlink  for the annotation 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LeaderBuilder * Leader
            (
            );
            /**Returns  the @link NXOpen::Annotations::StyleBuilder NXOpen::Annotations::StyleBuilder@endlink  for the annotation 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::StyleBuilder * Style
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
