#ifndef NXOpen_SIM_MACHINEKITBUILDER_HXX_INCLUDED
#define NXOpen_SIM_MACHINEKITBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_MachineKitBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SIM_MachineKitBuilder.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        class MachineKitBuilder;
    }
    class Builder;
    namespace SIM
    {
        class _MachineKitBuilderBuilder;
        class MachineKitBuilderImpl;
        /** This class is used for the Machine Kit Create Dialog.
                Calling @link Builder::Commit Builder::Commit@endlink  on this
                builder will start the machine kit creation process
                and return NULL.
              <br> Use the @link Part Part@endlink  class to create a MachineKitBuilder object.  <br> 
         <br>  Created in NX10.0.2.  <br>  
        */
        class NXOPENCPP_SIMEXPORT  MachineKitBuilder : public NXOpen::Builder
        {
            private: MachineKitBuilderImpl * m_machinekitbuilder_impl;
            private: friend class  _MachineKitBuilderBuilder;
            protected: MachineKitBuilder();
            public: ~MachineKitBuilder();
            /**Returns  the machine kit name. The name is used for the database entry and the name of the folder. 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: NXString Name
            (
            );
            /**Sets  the machine kit name. The name is used for the database entry and the name of the folder. 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetName
            (
                const NXString & kitName /** machine kit name */
            );
            /**Sets  the machine kit name. The name is used for the database entry and the name of the folder. 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetName
            (
                const char * kitName /** machine kit name */
            );
            /**Returns  the machine kit output directory. This is the location of the machine folder. 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: NXString OutputDirectory
            (
            );
            /**Sets  the machine kit output directory. This is the location of the machine folder. 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetOutputDirectory
            (
                const NXString & outputDirectory /** machine kit output directory */
            );
            /**Sets  the machine kit output directory. This is the location of the machine folder. 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetOutputDirectory
            (
                const char * outputDirectory /** machine kit output directory */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
