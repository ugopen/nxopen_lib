#ifndef NXOpen_CAE_POSTGRAPHORBITBUILDER_HXX_INCLUDED
#define NXOpen_CAE_POSTGRAPHORBITBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostGraphOrbitBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_PostGraphOrbitBuilder.hxx>
#include <NXOpen/CAE_Result.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostGraphOrbitBuilder;
    }
    class Builder;
    namespace CAE
    {
        class _PostGraphOrbitBuilderBuilder;
        class PostGraphOrbitBuilderImpl;
        /**
                Represents a @link NXOpen::CAE::PostGraphOrbitBuilder NXOpen::CAE::PostGraphOrbitBuilder@endlink 
             <br> This is an abstract class and cannot be instantiated  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostGraphOrbitBuilder : public NXOpen::Builder
        {
            private: PostGraphOrbitBuilderImpl * m_postgraphorbitbuilder_impl;
            private: friend class  _PostGraphOrbitBuilderBuilder;
            protected: PostGraphOrbitBuilder();
            public: ~PostGraphOrbitBuilder();
            /**Returns  the graph title 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXString GraphTitle
            (
            );
            /**Sets  the graph title 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetGraphTitle
            (
                const NXString & stringGraphTitle /** stringgraphtitle */ 
            );
            /**Sets  the graph title 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            void SetGraphTitle
            (
                const char * stringGraphTitle /** stringgraphtitle */ 
            );
            /**Returns  the component used as x axis for orbit plot  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXOpen::CAE::Result::Component XresultComponent
            (
            );
            /**Sets  the component used as x axis for orbit plot  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetXresultComponent
            (
                NXOpen::CAE::Result::Component xresult /** xresult */ 
            );
            /**Returns  the component used as y axis for orbit plot  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXOpen::CAE::Result::Component YresultComponent
            (
            );
            /**Sets  the component used as y axis for orbit plot  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetYresultComponent
            (
                NXOpen::CAE::Result::Component yresult /** yresult */ 
            );
            /** Set entity ids for extracting result data 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetEntityIds
            (
                const std::vector<int> & entityIds /** entityids */ 
            );
            /** Set free points for extracting data 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetFreePoints
            (
                const std::vector<NXOpen::Point3d> & freePoints /** freepoints */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
