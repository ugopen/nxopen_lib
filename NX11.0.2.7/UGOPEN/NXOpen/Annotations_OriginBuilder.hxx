#ifndef NXOpen_ANNOTATIONS_ORIGINBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_ORIGINBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_OriginBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations.hxx>
#include <NXOpen/Annotations_Annotation.hxx>
#include <NXOpen/Annotations_OriginBuilder.hxx>
#include <NXOpen/Annotations_PlaneBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class OriginBuilder;
    }
    namespace Annotations
    {
        class Annotation;
    }
    namespace Annotations
    {
        class PlaneBuilder;
    }
    namespace Drawings
    {
        class SelectDraftingView;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Point;
    class SelectDisplayableObject;
    class View;
    namespace Annotations
    {
        class _OriginBuilderBuilder;
        class OriginBuilderImpl;
        /**
            Represents a @link NXOpen::Annotations::OriginBuilder NXOpen::Annotations::OriginBuilder@endlink 
             <br> This is a sub-builder class and cannot be directly instantiated  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  OriginBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** alignment position on the annotation */
            public: enum AlignmentPosition
            {
                AlignmentPositionTopLeft/** Top left position */,
                AlignmentPositionTopCenter/** Top center position */,
                AlignmentPositionTopRight/** Top right position */,
                AlignmentPositionMidLeft/** Mid left position */,
                AlignmentPositionMidCenter/** Mid center position */,
                AlignmentPositionMidRight/** Mid right position */,
                AlignmentPositionBottomLeft/** Bottom left position */,
                AlignmentPositionBottomCenter/** Bottom center position */,
                AlignmentPositionBottomRight/** Bottom right position */
            };

            private: OriginBuilderImpl * m_originbuilder_impl;
            private: friend class  _OriginBuilderBuilder;
            protected: OriginBuilder();
            public: ~OriginBuilder();
            /**Returns  the anchor location of the origin on the annotation 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::OriginBuilder::AlignmentPosition Anchor
            (
            );
            /**Sets  the anchor location of the origin on the annotation 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") */
            public: void SetAnchor
            (
                NXOpen::Annotations::OriginBuilder::AlignmentPosition anchor /** anchor */ 
            );
            /**Returns  the origin 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObject * Origin
            (
            );
            /**Returns  the plane 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::PlaneBuilder * Plane
            (
            );
            /**Returns  the view of the annotation (drafting member views only) 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::SelectDraftingView * AnnotationView
            (
            );
            /**Returns  the origin point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d OriginPoint
            (
            );
            /**Sets  the origin point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") */
            public: void SetOriginPoint
            (
                const NXOpen::Point3d & origin /** origin */ 
            );
            /** Gets the data that specifies the origin's associativity  @return  associativity data 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::Annotation::AssociativeOriginData GetAssociativeOrigin
            (
            );
            /** Associates the annotation's origin to the specified objects 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") */
            public: void SetAssociativeOrigin
            (
                const NXOpen::Annotations::Annotation::AssociativeOriginData & assocOrigin /** associativity data */
            );
            /** Infers a relative to geometry associative on commit if no other associativity has been applied 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") */
            public: void SetInferRelativeToGeometry
            (
                bool inferRelativeToGeometry /** relative to geometry flag */
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
