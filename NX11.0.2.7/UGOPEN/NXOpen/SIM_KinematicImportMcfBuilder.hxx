#ifndef NXOpen_SIM_KINEMATICIMPORTMCFBUILDER_HXX_INCLUDED
#define NXOpen_SIM_KINEMATICIMPORTMCFBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_KinematicImportMcfBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SIM_KinematicImportMcfBuilder.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        class KinematicImportMcfBuilder;
    }
    class Builder;
    namespace SIM
    {
        class _KinematicImportMcfBuilderBuilder;
        class KinematicImportMcfBuilderImpl;
        /**  @brief  Represents a builder for an import axis and channel data  from mcf  

            <br> Use the @link Part Part@endlink  class to create a KinematicImportMcfBuilder object.  <br> 
         <br>  Created in NX9.0.3.  <br>  
        */
        class NXOPENCPP_SIMEXPORT  KinematicImportMcfBuilder : public NXOpen::Builder
        {
            private: KinematicImportMcfBuilderImpl * m_kinematicimportmcfbuilder_impl;
            private: friend class  _KinematicImportMcfBuilderBuilder;
            protected: KinematicImportMcfBuilder();
            public: ~KinematicImportMcfBuilder();
            /**Returns  the path from the mcf file 
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : None */
            public: NXString McfPath
            (
            );
            /**Sets  the path from the mcf file 
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetMcfPath
            (
                const NXString & path /** The MCF Path */
            );
            /**Sets  the path from the mcf file 
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetMcfPath
            (
                const char * path /** The MCF Path */
            );
            /**Returns  the flag which determines if the channel data of the Machine Tool Builder are 
                        deleted befor they are replaced through the Channel data of the MCF-File
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : None */
            public: bool ReplaceChannel
            (
            );
            /**Sets  the flag which determines if the channel data of the Machine Tool Builder are 
                        deleted befor they are replaced through the Channel data of the MCF-File
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetReplaceChannel
            (
                bool replace /** replace */ 
            );
            /**Returns  the flag which determines if the Limits of the MCF and the Kim are merge. 
                        the soft limits are set based on the hard Limits of the Machine Tool Builder
                        or if the limits in the mcf are useful they will be taken from MCF.
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : None */
            public: bool IgnoreLimits
            (
            );
            /**Sets  the flag which determines if the Limits of the MCF and the Kim are merge. 
                        the soft limits are set based on the hard Limits of the Machine Tool Builder
                        or if the limits in the mcf are useful they will be taken from MCF.
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetIgnoreLimits
            (
                bool replace /** replace */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
