#ifndef NXOpen_FEATURES_SHIPDESIGN_MIRRORSHIPSTRUCTUREBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_MIRRORSHIPSTRUCTUREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_MirrorShipStructureBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ShipDesign_MirrorShipStructureBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class MirrorShipStructureBuilder;
        }
    }
    namespace Assemblies
    {
        class SelectComponentList;
    }
    class Builder;
    namespace Features
    {
        class SelectFeatureList;
    }
    class Plane;
    namespace Features
    {
        namespace ShipDesign
        {
            class _MirrorShipStructureBuilderBuilder;
            class MirrorShipStructureBuilderImpl;
            /** Copy the selected parts (components) about the Mirror Plane with full model history and feature data.  <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateMirrorShipStructureBuilder  NXOpen::Features::ShipCollection::CreateMirrorShipStructureBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            ReportMirrorResultXML </td> <td> 
             
            1 </td> </tr> 

            </table>  

             <br>  Created in NX10.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  MirrorShipStructureBuilder : public NXOpen::Builder
            {
                /** Settings to indicate the selection type of ship feature. */
                public: enum Types
                {
                    TypesStructureSystem/** The structure system type. */,
                    TypesFeature/** The feature type which is valid only in ship basic design application. */
                };

                /** Settings to indicate the current application type. */
                public: enum AppTypes
                {
                    AppTypesShipDetailDesign/** The ship detail design. */,
                    AppTypesShipBasicDesign/** The ship basic design. */
                };

                /** Represents the approach of mirroring ship standard parts. */
                public: enum MirrorApproach
                {
                    MirrorApproachCreateLinkedMirrorBody/** The approach by creating linked mirror body. */,
                    MirrorApproachCopySourceFeaturesAndReparent/** The approach by copy source features and reparenting. */
                };

                private: MirrorShipStructureBuilderImpl * m_mirrorshipstructurebuilder_impl;
                private: friend class  _MirrorShipStructureBuilderBuilder;
                protected: MirrorShipStructureBuilder();
                public: ~MirrorShipStructureBuilder();
                /**Returns  the list of parts (or components) to Mirror Copy. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Assemblies::SelectComponentList * OriginalParts
                (
                );
                /**Returns  the list of features to Mirror Copy. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SelectFeatureList * OriginalFeatures
                (
                );
                /**Returns  the target parts or components where the selected features will be mirror copied into. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Assemblies::SelectComponentList * TargetPart
                (
                );
                /**Returns  the mirror plane. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Plane * MirrorPlane
                (
                );
                /**Sets  the mirror plane. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetMirrorPlane
                (
                    NXOpen::Plane * mirrorPlane /** mirrorplane */ 
                );
                /**Returns  the linear tolerance factor used for the geometry comparison and defined in the customer default. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: double LinearToleranceFactor
                (
                );
                /**Sets  the linear tolerance factor used for the geometry comparison and defined in the customer default. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetLinearToleranceFactor
                (
                    double linearToleranceFactor /** lineartolerancefactor */ 
                );
                /**Returns  the angular tolerance used for geometry comparison and defined in the customer defaults. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: double AngularTolerance
                (
                );
                /**Sets  the angular tolerance used for geometry comparison and defined in the customer defaults. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetAngularTolerance
                (
                    double angularTolerance /** angulartolerance */ 
                );
                /**Returns  an XML report with mirror process information will be shown if set to true. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ReportMirrorResultXML
                (
                );
                /**Sets  an XML report with mirror process information will be shown if set to true. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetReportMirrorResultXML
                (
                    bool reportMirrorResultXML /** reportmirrorresultxml */ 
                );
                /**Returns  an option to determines the approach to copy and mirror ship standard parts. 
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::MirrorShipStructureBuilder::MirrorApproach MirrorApproachOption
                (
                );
                /**Sets  an option to determines the approach to copy and mirror ship standard parts. 
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetMirrorApproachOption
                (
                    NXOpen::Features::ShipDesign::MirrorShipStructureBuilder::MirrorApproach mirrorApproachOption /** mirrorapproachoption */ 
                );
                /**Returns  the application type, which is ship basic design or ship detail design. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::MirrorShipStructureBuilder::AppTypes ApplicationType
                (
                );
                /**Sets  the application type, which is ship basic design or ship detail design. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetApplicationType
                (
                    NXOpen::Features::ShipDesign::MirrorShipStructureBuilder::AppTypes type /** type */ 
                );
                /**Returns  the selection type, which is structure system or feature. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::MirrorShipStructureBuilder::Types SelectionType
                (
                );
                /**Sets  the selection type, which is structure system or feature. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetSelectionType
                (
                    NXOpen::Features::ShipDesign::MirrorShipStructureBuilder::Types type /** type */ 
                );
                /** Sort components by inter-part dependency and return dependency circles.  @return  
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: int SortComponentByInterPartDependency
                (
                    std::vector<NXString> & nonBreakableCircles /** nonbreakablecircles */ ,
                    std::vector<NXString> & brokenCircles /** brokencircles */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
