#ifndef NXOpen_CAE_DURABILITYSOLVERBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DURABILITYSOLVERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurabilitySolverBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DurabilitySolverBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurabilitySolverBuilder;
    }
    class Builder;
    namespace CAE
    {
        class _DurabilitySolverBuilderBuilder;
        class DurabilitySolverBuilderImpl;
        /** Represents the builder for solving the durability solution process. 
                When solving a solution process, the software checks to see which of the active
                events it needs to solve. It solves them first followed by solving the durability
                solution process. The result file for the durability solution process will contain
                worst case results for safety factors and cumulative damage from the active events.
                Only the solution process file will be overwritten every time this builder is committed.
             <br> To create a new instance of this class, use @link NXOpen::CAE::DurabilityManager::CreateSolverBuilder  NXOpen::CAE::DurabilityManager::CreateSolverBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ActiveEventSolveOptions </td> <td> 
         
        Unsolved </td> </tr> 

        <tr><td> 
         
        CreateDiagnosticGroups </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ModelCheck </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SubmitOptions </td> <td> 
         
        Solve </td> </tr> 

        </table>  

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurabilitySolverBuilder : public NXOpen::Builder
        {
            /** the submit options enum.*/
            public: enum SubmitOptionsEnum
            {
                SubmitOptionsEnumSolve/** Solve */
            };

            /** the active event solve options enum.*/
            public: enum ActiveEventSolveOptionsEnum
            {
                ActiveEventSolveOptionsEnumUnsolved/** Unsolved */,
                ActiveEventSolveOptionsEnumAll/** All */
            };

            private: DurabilitySolverBuilderImpl * m_durabilitysolverbuilder_impl;
            private: friend class  _DurabilitySolverBuilderBuilder;
            protected: DurabilitySolverBuilder();
            public: ~DurabilitySolverBuilder();
            /**Returns  the submit options. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: NXOpen::CAE::DurabilitySolverBuilder::SubmitOptionsEnum SubmitOptions
            (
            );
            /**Sets  the submit options. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetSubmitOptions
            (
                NXOpen::CAE::DurabilitySolverBuilder::SubmitOptionsEnum submitOptions /** submitoptions */ 
            );
            /**Returns  the active event solve options. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: NXOpen::CAE::DurabilitySolverBuilder::ActiveEventSolveOptionsEnum ActiveEventSolveOptions
            (
            );
            /**Sets  the active event solve options. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetActiveEventSolveOptions
            (
                NXOpen::CAE::DurabilitySolverBuilder::ActiveEventSolveOptionsEnum activeEventSolveOptions /** activeeventsolveoptions */ 
            );
            /**Returns  the model check. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: bool ModelCheck
            (
            );
            /**Sets  the model check. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetModelCheck
            (
                bool modelCheck /** modelcheck */ 
            );
            /**Returns  the create diagnostic groups. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: bool CreateDiagnosticGroups
            (
            );
            /**Sets  the create diagnostic groups. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetCreateDiagnosticGroups
            (
                bool createDiagnosticGroups /** creatediagnosticgroups */ 
            );
            /**Returns  the geometry save flag. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: bool SaveGeometry
            (
            );
            /**Sets  the geometry save flag. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetSaveGeometry
            (
                bool saveGeometry /** savegeometry */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
