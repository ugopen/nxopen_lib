#ifndef NXOpen_DIAGRAMMING_CONNECTIONBUILDER_HXX_INCLUDED
#define NXOpen_DIAGRAMMING_CONNECTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Diagramming_ConnectionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Diagramming_ConnectionBuilder.hxx>
#include <NXOpen/Diagramming_LocationBuilder.hxx>
#include <NXOpen/Diagramming_Port.hxx>
#include <NXOpen/Diagramming_SheetElementBuilder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_diagramming_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Diagramming
    {
        class ConnectionBuilder;
    }
    namespace Diagramming
    {
        class LocationBuilder;
    }
    namespace Diagramming
    {
        class Port;
    }
    namespace Diagramming
    {
        class SheetElementBuilder;
    }
    namespace Diagramming
    {
        class _ConnectionBuilderBuilder;
        class ConnectionBuilderImpl;
        /**
            Represents a ConnectionBuilder.
             <br> To create a new instance of this class, use @link NXOpen::Diagramming::ConnectionCollection::CreateConnectionBuilder  NXOpen::Diagramming::ConnectionCollection::CreateConnectionBuilder @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_DIAGRAMMINGEXPORT  ConnectionBuilder : public NXOpen::Diagramming::SheetElementBuilder
        {
            private: ConnectionBuilderImpl * m_connectionbuilder_impl;
            private: friend class  _ConnectionBuilderBuilder;
            protected: ConnectionBuilder();
            public: ~ConnectionBuilder();
            /**Returns  the discipline of this connection. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Discipline
            (
            );
            /**Sets  the discipline of this connection. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDiscipline
            (
                const NXString & discipline /** discipline */ 
            );
            /**Sets  the discipline of this connection. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void SetDiscipline
            (
                const char * discipline /** discipline */ 
            );
            /**Returns  the end port of this connection.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::Port * End
            (
            );
            /**Sets  the end port of this connection.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnd
            (
                NXOpen::Diagramming::Port * endPort /** endport */ 
            );
            /**Returns  the end location of this connection. 
                        This end location is applicable only when the @link Diagramming::ConnectionBuilder::End Diagramming::ConnectionBuilder::End@endlink  port is NULL. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::LocationBuilder * EndLocation
            (
            );
            /**Returns  the reversed flag of this connection. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseEnd
            (
            );
            /**Returns  the start port of this connection. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::Port * Start
            (
            );
            /**Sets  the start port of this connection. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStart
            (
                NXOpen::Diagramming::Port * startPort /** startport */ 
            );
            /**Returns  the start location of this connection. 
                        This start location is applicable only when the @link Diagramming::ConnectionBuilder::Start Diagramming::ConnectionBuilder::Start@endlink  is NULL.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::LocationBuilder * StartLocation
            (
            );
            /** Get bending points for polyline to render the connection. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void GetBendPoints
            (
                std::vector<NXOpen::Point2d> & points /** points */ 
            );
            /** Set bending points for polyline to render the connection. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetBendPoints
            (
                const std::vector<NXOpen::Point2d> & points /** points */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
