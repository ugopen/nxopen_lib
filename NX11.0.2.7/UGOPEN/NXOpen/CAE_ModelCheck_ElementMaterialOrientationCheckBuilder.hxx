#ifndef NXOpen_CAE_MODELCHECK_ELEMENTMATERIALORIENTATIONCHECKBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MODELCHECK_ELEMENTMATERIALORIENTATIONCHECKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelCheck_ElementMaterialOrientationCheckBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FEElement.hxx>
#include <NXOpen/CAE_ModelCheckDataTypes.hxx>
#include <NXOpen/CAE_ModelCheck_ElementMaterialOrientationCheckBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_ModelCheck_ISelectionBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ModelCheck
        {
            class ElementMaterialOrientationCheckBuilder;
        }
    }
    class Builder;
    namespace CAE
    {
        class FEElement;
    }
    namespace CAE
    {
        namespace ModelCheck
        {
            class ISelectionBuilder;
        }
    }
    class NXColor;
    class SelectTaggedObjectList;
    namespace CAE
    {
        namespace ModelCheck
        {
            class _ElementMaterialOrientationCheckBuilderBuilder;
            class ElementMaterialOrientationCheckBuilderImpl;
            /** Represents a @link NXOpen::CAE::ModelCheck::ElementMaterialOrientationCheckBuilder NXOpen::CAE::ModelCheck::ElementMaterialOrientationCheckBuilder@endlink  
                        used to check the material orientation for shell and solid elements. 
                        Use @link Builder::Commit Builder::Commit@endlink  to calculate material orientation and to display 
                        an orientation vector for each input element. 
                        Use @link NXOpen::CAE::ModelCheck::ElementMaterialOrientationCheckBuilder::DoCheck NXOpen::CAE::ModelCheck::ElementMaterialOrientationCheckBuilder::DoCheck@endlink 
                        to calculate the material orientation for each input element and return the orientation vector 
                        result. If an element fails when calculating it's material orientation, 
                        the element will be displayed in red and outputed to listing information window.
                     <br> To create a new instance of this class, use @link NXOpen::CAE::ModelCheckManager::CreateElementMaterialOrientationCheckBuilder  NXOpen::CAE::ModelCheckManager::CreateElementMaterialOrientationCheckBuilder @endlink  <br> 
             <br>  Created in NX8.5.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  ElementMaterialOrientationCheckBuilder : public NXOpen::Builder, public virtual NXOpen::CAE::ModelCheck::ISelectionBuilder
            {
                /** the material orientation type */
                public: enum MaterialOrientationType
                {
                    MaterialOrientationTypeShell/** the material orientation of shell element */,
                    MaterialOrientationTypeSolidFirstDirection/** the first  direction of solid element material orientation */,
                    MaterialOrientationTypeSolidSecondDirection/** the second direction of solid element material orientation */,
                    MaterialOrientationTypeSolidThirdDirection/** the third  direction of solid element material orientation */
                };

                private: ElementMaterialOrientationCheckBuilderImpl * m_elementmaterialorientationcheckbuilder_impl;
                private: friend class  _ElementMaterialOrientationCheckBuilderBuilder;
                protected: ElementMaterialOrientationCheckBuilder();
                public: ~ElementMaterialOrientationCheckBuilder();
                /**Returns  the selected objects to be checked. The objects must be @link NXOpen::CAE::Mesh NXOpen::CAE::Mesh@endlink  or
                                @link NXOpen::CAE::FEElement NXOpen::CAE::FEElement@endlink  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectTaggedObjectList * SelectionList
                (
                );
                /** Gets option value which indicates whether to check for the specified material orientation type  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool GetCheckOrientation
                (
                    NXOpen::CAE::ModelCheck::ElementMaterialOrientationCheckBuilder::MaterialOrientationType orientationType /** orientationtype */ 
                );
                /** Sets option value which indicates whether to check for the specified material orientation type 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetCheckOrientation
                (
                    NXOpen::CAE::ModelCheck::ElementMaterialOrientationCheckBuilder::MaterialOrientationType orientationType /** orientationtype */ ,
                    bool checkOrientation /** checkorientation */ 
                );
                /** Gets display color of a specified material orientation type  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * GetOrientationColor
                (
                    NXOpen::CAE::ModelCheck::ElementMaterialOrientationCheckBuilder::MaterialOrientationType orientationType /** orientationtype */ 
                );
                /** Sets display color of a specified material orientation type 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetOrientationColor
                (
                    NXOpen::CAE::ModelCheck::ElementMaterialOrientationCheckBuilder::MaterialOrientationType orientationType /** orientationtype */ ,
                    NXOpen::NXColor * color /** color */ 
                );
                /** Calculates material orientation vector for input elements and returns the orientation vector result  @return  material orientation vector 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: std::vector<NXOpen::Vector3d> DoCheck
                (
                    std::vector<NXOpen::CAE::ModelCheck::ElementMaterialOrientationCheckBuilder::MaterialOrientationType> & orientationType /** orientationtype */ ,
                    std::vector<NXOpen::CAE::FEElement *> & elements /** the elements associated with the orientation vectors*/
                );
                /**Returns  the check scope setting 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual NXOpen::CAE::ModelCheck::CheckScope CheckScopeOption
                (
                );
                /**Sets  the check scope setting 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual void SetCheckScopeOption
                (
                    NXOpen::CAE::ModelCheck::CheckScope scope /** scope */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
