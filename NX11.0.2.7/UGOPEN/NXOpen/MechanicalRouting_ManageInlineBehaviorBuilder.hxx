#ifndef NXOpen_MECHANICALROUTING_MANAGEINLINEBEHAVIORBUILDER_HXX_INCLUDED
#define NXOpen_MECHANICALROUTING_MANAGEINLINEBEHAVIORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MechanicalRouting_ManageInlineBehaviorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/MechanicalRouting_ManageInlineBehaviorBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/PDM_ModelElementRevision.hxx>
#include <NXOpen/libnxopencpp_mechanicalrouting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MechanicalRouting
    {
        class ManageInlineBehaviorBuilder;
    }
    class Builder;
    namespace PDM
    {
        class ModelElementRevision;
    }
    namespace MechanicalRouting
    {
        class _ManageInlineBehaviorBuilderBuilder;
        class ManageInlineBehaviorBuilderImpl;
        /** Represents @link NXOpen::MechanicalRouting::ManageInlineBehaviorBuilder NXOpen::MechanicalRouting::ManageInlineBehaviorBuilder@endlink .  <br> To create a new instance of this class, use @link NXOpen::MechanicalRouting::BuilderFactory::CreateManageInlineBehaviorBuilder  NXOpen::MechanicalRouting::BuilderFactory::CreateManageInlineBehaviorBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_MECHANICALROUTINGEXPORT  ManageInlineBehaviorBuilder : public NXOpen::Builder
        {
            private: ManageInlineBehaviorBuilderImpl * m_manageinlinebehaviorbuilder_impl;
            private: friend class  _ManageInlineBehaviorBuilderBuilder;
            protected: ManageInlineBehaviorBuilder();
            public: ~ManageInlineBehaviorBuilder();
            /** Sets @link NXOpen::PDM::ModelElementRevision NXOpen::PDM::ModelElementRevision@endlink  of Routing Reuse type. Raise an error if passed
                        other type of object. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetModelElementRevision
            (
                NXOpen::PDM::ModelElementRevision * modelElementRevision /** modelelementrevision */ 
            );
            /** Sets true to mark current model element revision as inline design element(which moves along with connected
                        routing design elements), false for non-inline design element (which has its own position and drives connected
                        routing design elements. Its position is never driven by inline design elements). 
                        Client should call update after this as model element revision has been logged to change. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetInlineBehavior
            (
                bool isInline /** isinline */ 
            );
            /** Returns true if current model element revision as inline design element.  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: bool GetInlineBehavior
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
