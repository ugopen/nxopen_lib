#ifndef NXOpen_LINKEDMIRRORPARTBUILDER_HXX_INCLUDED
#define NXOpen_LINKEDMIRRORPARTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LinkedMirrorPartBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/LinkedMirrorPartBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class LinkedMirrorPartBuilder;
    class Builder;
    class Part;
    class Plane;
    class _LinkedMirrorPartBuilderBuilder;
    class LinkedMirrorPartBuilderImpl;
    /** builder class of LinkedMirrorPartBuilder  <br> To create a new instance of this class, use @link NXOpen::PartCollection::CreateLinkedMirrorPartBuilder  NXOpen::PartCollection::CreateLinkedMirrorPartBuilder @endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    MirrorCsysMethod </td> <td> 
     
    MirrorXYAndDeriveZ </td> </tr> 

    </table>  

     <br>  Created in NX8.5.0.  <br>  
    */
    class NXOPENCPPEXPORT  LinkedMirrorPartBuilder : public NXOpen::Builder
    {
        /** type of mirror of CSYS 
                    The first two axes are mirrored, and the third one is derived 
                    from the two mirrored axes using the right hand convention */
        public: enum MirrorCsysOption
        {
            MirrorCsysOptionMirrorXYAndDeriveZ/** mirror xyand derive z */ ,
            MirrorCsysOptionMirrorYZAndDeriveX/** mirror yzand derive x */ ,
            MirrorCsysOptionMirrorXZAndDeriveY/** mirror xzand derive y */ 
        };

        /** type of mirror part */
        public: enum MirrorPartTypeOption
        {
            MirrorPartTypeOptionExactMirror/** exact mirror */ ,
            MirrorPartTypeOptionNonExactMirrorKeepBrokenLinks/** non exact mirror keep broken links */ ,
            MirrorPartTypeOptionNonExactMirrorDeleteBrokenLinks/** non exact mirror delete broken links */ 
        };

        private: LinkedMirrorPartBuilderImpl * m_linkedmirrorpartbuilder_impl;
        private: friend class  _LinkedMirrorPartBuilderBuilder;
        protected: LinkedMirrorPartBuilder();
        public: ~LinkedMirrorPartBuilder();
        /**Returns  the name of the new mirror part 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXString MirrorPartName
        (
        );
        /**Sets  the name of the new mirror part 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void SetMirrorPartName
        (
            const NXString & mirrorPartName /** mirrorpartname */ 
        );
        /**Sets  the name of the new mirror part 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        void SetMirrorPartName
        (
            const char * mirrorPartName /** mirrorpartname */ 
        );
        /**Returns  the plane about which the entities are mirrored 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::Plane * MirrorPlane
        (
        );
        /**Sets  the plane about which the entities are mirrored 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void SetMirrorPlane
        (
            NXOpen::Plane * mirrorPlane /** mirrorplane */ 
        );
        /**Returns  the origin of the mirror plane 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::Point3d MirrorPlaneOrigin
        (
        );
        /**Sets  the origin of the mirror plane 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void SetMirrorPlaneOrigin
        (
            const NXOpen::Point3d & origin /** Origin point of mirror plane */
        );
        /**Returns  the normal of the mirror plane 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::Vector3d MirrorPlaneNormal
        (
        );
        /**Sets  the normal of the mirror plane 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void SetMirrorPlaneNormal
        (
            const NXOpen::Vector3d & normal /** Normal vector of mirror plane */
        );
        /**Returns  the method specifying how to mirror coordinate systems 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::LinkedMirrorPartBuilder::MirrorCsysOption MirrorCsysMethod
        (
        );
        /**Sets  the method specifying how to mirror coordinate systems 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void SetMirrorCsysMethod
        (
            NXOpen::LinkedMirrorPartBuilder::MirrorCsysOption mirrorCsysMethod /** mirrorcsysmethod */ 
        );
        /** Gets the names of the reference sets that are selected for mirroring  @return  An array of reference set names 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: std::vector<NXString> GetRefSetNames
        (
        );
        /** Sets the names of the reference sets that are selected for mirroring 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void SetRefSetNames
        (
            std::vector<NXString> & refSetNames /** refsetnames */ 
        );
        /**Returns  the source part which is being mirrored 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::Part * ParentPart
        (
        );
        /**Sets  the source part which is being mirrored 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void SetParentPart
        (
            NXOpen::Part * parentPart /** parentpart */ 
        );
        /**Returns  the target mirrored part in which the mirrored geometries are created 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::Part * NewPart
        (
        );
        /**Sets  the target mirrored part in which the mirrored geometries are created 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void SetNewPart
        (
            NXOpen::Part * newPart /** newpart */ 
        );
        /**Returns  the type of mirror part which controls how the mirrored part responds to changes in source part 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::LinkedMirrorPartBuilder::MirrorPartTypeOption MirrorPartType
        (
        );
        /**Sets  the type of mirror part which controls how the mirrored part responds to changes in source part 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void SetMirrorPartType
        (
            NXOpen::LinkedMirrorPartBuilder::MirrorPartTypeOption mirrorOption /** mirroroption */ 
        );
        /**Returns  the option that determines if PMI entities will be mirrored 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: bool MirrorPmiFlag
        (
        );
        /**Sets  the option that determines if PMI entities will be mirrored 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetMirrorPmiFlag
        (
            bool mirrorPmiFlag /** mirrorpmiflag */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
