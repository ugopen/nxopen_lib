#ifndef NXOpen_MECHATRONICS_GANTTOPERATIONCONDITIONBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_GANTTOPERATIONCONDITIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_GanttOperationConditionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Mechatronics_GanttOperationConditionBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class GanttOperationConditionBuilder;
    }
    class Builder;
    class Expression;
    class NXObject;
    namespace Mechatronics
    {
        class _GanttOperationConditionBuilderBuilder;
        class GanttOperationConditionBuilderImpl;
        /** Represents a @link NXOpen::Mechatronics::GanttOperationConditionBuilder NXOpen::Mechatronics::GanttOperationConditionBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::Mechatronics::GanttCollection::CreateGanttOperationConditionBuilder  NXOpen::Mechatronics::GanttCollection::CreateGanttOperationConditionBuilder @endlink  <br> 
         <br>  Created in NX7.5.1.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  GanttOperationConditionBuilder : public NXOpen::Builder
        {
            private: GanttOperationConditionBuilderImpl * m_ganttoperationconditionbuilder_impl;
            private: friend class  _GanttOperationConditionBuilderBuilder;
            protected: GanttOperationConditionBuilder();
            public: ~GanttOperationConditionBuilder();
            /**Returns  the sequence number of condition 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: int Index
            (
            );
            /**Sets  the sequence number of condition 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetIndex
            (
                int ind /** ind */ 
            );
            /**Returns  the id of condition 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXString ConditionId
            (
            );
            /**Sets  the id of condition 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetConditionId
            (
                const NXString & id /** id */ 
            );
            /**Sets  the id of condition 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetConditionId
            (
                const char * id /** id */ 
            );
            /**Returns  the condition type, if the condition is a group, the value is 'true' 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: bool IsGroup
            (
            );
            /**Sets  the condition type, if the condition is a group, the value is 'true' 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetGroup
            (
                bool isGroup /** isgroup */ 
            );
            /**Returns  the parent id of condition 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXString ParentId
            (
            );
            /**Sets  the parent id of condition 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetParentId
            (
                const NXString & parentId /** parent id */ 
            );
            /**Sets  the parent id of condition 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetParentId
            (
                const char * parentId /** parent id */ 
            );
            /**Returns  the judging condition from current condition,the value can be 'And' or 'Or' 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXString Condition
            (
            );
            /**Sets  the judging condition from current condition,the value can be 'And' or 'Or' 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetCondition
            (
                const NXString & strCondition /** strcondition */ 
            );
            /**Sets  the judging condition from current condition,the value can be 'And' or 'Or' 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetCondition
            (
                const char * strCondition /** strcondition */ 
            );
            /**Returns  the conditin object :it can be a physics object(Rigid Body, 
                        Collision, Constraints, Joints etc.), FunctionTable. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::NXObject * PhysicsObject
            (
            );
            /**Sets  the conditin object :it can be a physics object(Rigid Body, 
                        Collision, Constraints, Joints etc.), FunctionTable. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetPhysicsObject
            (
                NXOpen::NXObject * physObj /** phys obj */ 
            );
            /**Returns  the selected property id in physics object 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: int PropertyId
            (
            );
            /**Sets  the selected property id in physics object 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetPropertyId
            (
                int prop /** prop */ 
            );
            /**Returns  the name of selected property 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXString PropertyName
            (
            );
            /**Sets  the name of selected property 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetPropertyName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name of selected property 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetPropertyName
            (
                const char * name /** name */ 
            );
            /**Returns  the operator of current condition 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXString OperatorValue
            (
            );
            /**Sets  the operator of current condition 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetOperatorValue
            (
                const NXString & strOperator /** stroperator */ 
            );
            /**Sets  the operator of current condition 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetOperatorValue
            (
                const char * strOperator /** stroperator */ 
            );
            /**Returns  the condition value use to evaluate this condition for the selected property in condition object 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXString ConditionValue
            (
            );
            /**Sets  the condition value use to evaluate this condition for the selected property in condition object 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetConditionValue
            (
                const NXString & strValue /** strvalue */ 
            );
            /**Sets  the condition value use to evaluate this condition for the selected property in condition object 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetConditionValue
            (
                const char * strValue /** strvalue */ 
            );
            /**Returns  the condition value use to evaluate this condition for the selected property in condition object.
                        If selected property value type is not object, this property should be null, it can be a physics 
                        object(Rigid Body, Collision, Constraints, Joints etc.), Function Table, Material etc.
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::NXObject * ObjectValue
            (
            );
            /**Sets  the condition value use to evaluate this condition for the selected property in condition object.
                        If selected property value type is not object, this property should be null, it can be a physics 
                        object(Rigid Body, Collision, Constraints, Joints etc.), Function Table, Material etc.
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetObjectValue
            (
                NXOpen::NXObject * objValue /** objvalue */ 
            );
            /**Returns  the expression value for double and interger parameters 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Expression * ExpressionValue
            (
            );
            /** Set the expression value for double and interger parameters 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void PutExpressionValue
            (
                NXOpen::Expression * exp /** exp */ 
            );
            /**Returns   @brief  the signal use to evaluate this condition for the selected property in condition object.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::NXObject * SignalObject
            (
            );
            /**Sets   @brief  the signal use to evaluate this condition for the selected property in condition object.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetSignalObject
            (
                NXOpen::NXObject * signalObj /** signalobj */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
