#ifndef NXOpen_CAE_SIMLOADRECIPE_HXX_INCLUDED
#define NXOpen_CAE_SIMLOADRECIPE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SimLoadRecipe.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SimLoadRecipe.hxx>
#include <NXOpen/CAE_SimLoadRecipeLbcGenerator.hxx>
#include <NXOpen/CAE_SimLoadRecipeTypes.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SimLoadRecipe;
    }
    namespace CAE
    {
        class FEModelOccurrence;
    }
    namespace CAE
    {
        class SimLoadRecipeLbcGenerator;
    }
    namespace CAE
    {
        class SimLoadRecipeMappingCollection;
    }
    namespace CAE
    {
        class SimLoadRecipeSourceCollection;
    }
    namespace CAE
    {
        class _SimLoadRecipeBuilder;
        class SimLoadRecipeImpl;
        /**  @brief  This is the class handling the attributes of a load recipe.  

          <br> To create a new instance of this class, use @link NXOpen::CAE::SimLoadRecipeCollection::Create  NXOpen::CAE::SimLoadRecipeCollection::Create @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SimLoadRecipe : public NXOpen::TaggedObject
        {
            private: SimLoadRecipeImpl * m_simloadrecipe_impl;
            private: friend class  _SimLoadRecipeBuilder;
            protected: SimLoadRecipe();
            public: ~SimLoadRecipe();
            /**Returns  the name of a @link NXOpen::CAE::SimLoadRecipe NXOpen::CAE::SimLoadRecipe@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name of a @link NXOpen::CAE::SimLoadRecipe NXOpen::CAE::SimLoadRecipe@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name of a @link NXOpen::CAE::SimLoadRecipe NXOpen::CAE::SimLoadRecipe@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the description of a @link NXOpen::CAE::SimLoadRecipe NXOpen::CAE::SimLoadRecipe@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Description
            (
            );
            /**Sets  the description of a @link NXOpen::CAE::SimLoadRecipe NXOpen::CAE::SimLoadRecipe@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetDescription
            (
                const NXString & description /** description */ 
            );
            /**Sets  the description of a @link NXOpen::CAE::SimLoadRecipe NXOpen::CAE::SimLoadRecipe@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetDescription
            (
                const char * description /** description */ 
            );
            /**Returns  the data type of a @link NXOpen::CAE::SimLoadRecipe NXOpen::CAE::SimLoadRecipe@endlink  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SimLoadRecipeTypes::DataTypes DataType
            (
            );
            /** Gets the type of load conditions handling of the @link NXOpen::CAE::SimLoadRecipe NXOpen::CAE::SimLoadRecipe@endlink   @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SimLoadRecipeTypes::LoadConditionHandling GetLoadConditionHandlingType
            (
            );
            /** Sets the type of load conditions handling of the @link NXOpen::CAE::SimLoadRecipe NXOpen::CAE::SimLoadRecipe@endlink  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLoadConditionHandlingType
            (
                NXOpen::CAE::SimLoadRecipeTypes::LoadConditionHandling lcHandling /** lchandling */ 
            );
            /** Gets the load condition strings declared in the @link NXOpen::CAE::SimLoadRecipe NXOpen::CAE::SimLoadRecipe@endlink   @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetLoadConditions
            (
            );
            /** Gets the tracking value strings declared in the @link NXOpen::CAE::SimLoadRecipe NXOpen::CAE::SimLoadRecipe@endlink   @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetTrackingValues
            (
            );
            /** Disables a load condition in the Load Recipe. Disabled load conditions will not be used when
                        creating a solution from load recipe.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void DisableLoadCondition
            (
                const NXString & loadCondition /** loadcondition */ 
            );
            /** Disables a load condition in the Load Recipe. Disabled load conditions will not be used when
                        creating a solution from load recipe.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void DisableLoadCondition
            (
                const char * loadCondition /** loadcondition */ 
            );
            /** Enables a load condition in the Load Recipe. Only enabled load conditions will be used
                        when creating a solution from load recipe. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void EnableLoadCondition
            (
                const NXString & loadCondition /** loadcondition */ 
            );
            /** Enables a load condition in the Load Recipe. Only enabled load conditions will be used
                        when creating a solution from load recipe. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void EnableLoadCondition
            (
                const char * loadCondition /** loadcondition */ 
            );
            /** Disables a tracking value in the Load Recipe. Disabled tracking values will not be used when
                        creating a solution from load recipe. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void DisableTrackingValue
            (
                const NXString & trackingValue /** trackingvalue */ 
            );
            /** Disables a tracking value in the Load Recipe. Disabled tracking values will not be used when
                        creating a solution from load recipe. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void DisableTrackingValue
            (
                const char * trackingValue /** trackingvalue */ 
            );
            /** Enables a tracking value in the Load Recipe. Only enabled tracking values will be used
                        when creating a solution from load recipe. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void EnableTrackingValue
            (
                const NXString & trackingValue /** trackingvalue */ 
            );
            /** Enables a tracking value in the Load Recipe. Only enabled tracking values will be used
                        when creating a solution from load recipe. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void EnableTrackingValue
            (
                const char * trackingValue /** trackingvalue */ 
            );
            /** Creates a new @link NXOpen::CAE::SimLoadRecipeLbcGenerator NXOpen::CAE::SimLoadRecipeLbcGenerator@endlink .  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SimLoadRecipeLbcGenerator * NewLbcGeneratorFromLoadRecipe
            (
            );
            /** Imports mapping entries from a CSV file. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void ImportFromCSVFile
            (
                const NXString & filePath /** Path of the CSV file */,
                const NXString & csvDelim /** Delimiter character used in the CSV file. 
                                                                            If NULL, the comma character will be used. 
                                                                            If this string contains more then one character, only the first one will be used. */,
                bool* noParsedContent /** True if no valid data could be parsed from the file. */,
                bool* invalidLoadType /** True if an invalid load type was found. All data for this load type will be ignored. */,
                bool* invalidEntityType /** True if an invalid entity type was found. The entities with invalid entity type will be ignored. */,
                bool* invalidNbrOfParameters /** True if an invalid number of parameters was found for an entry. 
                                                                            If the number of parameters is less then expected, it will populate the first values for which it 
                                                                            has values. If the number of parameters is more then expected, the last values will be ignored. */
            );
            /** Imports mapping entries from a CSV file. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void ImportFromCSVFile
            (
                const char * filePath /** Path of the CSV file */,
                const char * csvDelim /** Delimiter character used in the CSV file. 
                                                                            If NULL, the comma character will be used. 
                                                                            If this string contains more then one character, only the first one will be used. */,
                bool* noParsedContent /** True if no valid data could be parsed from the file. */,
                bool* invalidLoadType /** True if an invalid load type was found. All data for this load type will be ignored. */,
                bool* invalidEntityType /** True if an invalid entity type was found. The entities with invalid entity type will be ignored. */,
                bool* invalidNbrOfParameters /** True if an invalid number of parameters was found for an entry. 
                                                                            If the number of parameters is less then expected, it will populate the first values for which it 
                                                                            has values. If the number of parameters is more then expected, the last values will be ignored. */
            );
            /** Exports mapping entries to a CSV file.  @return  True if the mapping table entries contain the CSV delimiter character. 
                                                                        If this is true, it will cause inconsistencies when importing the file.  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: bool ExportToCSVFile
            (
                const NXString & filePath /** Path of the CSV file */
            );
            /** Exports mapping entries to a CSV file.  @return  True if the mapping table entries contain the CSV delimiter character. 
                                                                        If this is true, it will cause inconsistencies when importing the file.  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            bool ExportToCSVFile
            (
                const char * filePath /** Path of the CSV file */
            );
            /** Fills the mapping tables of the load recipe based on available functions in the data sources. 
                        
                        Creates and adds @link NXOpen::CAE::SimLoadRecipeMapEntry NXOpen::CAE::SimLoadRecipeMapEntry@endlink  instances to the load recipe. Sets the 
                        value of @link NXOpen::CAE::SimLoadRecipeMapEntry::Target NXOpen::CAE::SimLoadRecipeMapEntry::Target @endlink and @link NXOpen::CAE::SimLoadRecipeMapEntry::SetTarget NXOpen::CAE::SimLoadRecipeMapEntry::SetTarget @endlink  for each map entry to the entity label read  
                        from the data sources. This method doesn't create entries with @link NXOpen::CAE::SimLoadRecipeMapEntry::TargetType NXOpen::CAE::SimLoadRecipeMapEntry::TargetType @endlink and @link NXOpen::CAE::SimLoadRecipeMapEntry::SetTargetType NXOpen::CAE::SimLoadRecipeMapEntry::SetTargetType @endlink  
                        which refer to groups or meshes.
                        
                        The parameters available in the data sources are filled for each entry in the following
                        format: "ME:\<target label\>".
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void Autofill
            (
            );
            /** Overload to specify a component of the FEM assembly for which to autofill the mapping tables. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void Autofill
            (
                NXOpen::CAE::FEModelOccurrence * feModelOcc /** femodelocc */ 
            );
            /** Validation of the Load Recipe 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void Validation
            (
            );
            /** Loads all the load conditions available in the data sources and enables them.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void LoadLoadConditions
            (
            );
            /** Loads all the tracking values available in the data sources and enables them. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void LoadTrackingValues
            (
            );


            /** Returns the @link NXOpen::CAE::SimLoadRecipeMappingCollection NXOpen::CAE::SimLoadRecipeMappingCollection@endlink . 
             <br>  Created in NX10.0.0.  <br>  
            */
            public: NXOpen::CAE::SimLoadRecipeMappingCollection *MappingCollection();
            /** Contains a @link NXOpen::CAE::SimLoadRecipeSourceCollection NXOpen::CAE::SimLoadRecipeSourceCollection@endlink . 
             <br>  Created in NX10.0.0.  <br>  
            */
            public: NXOpen::CAE::SimLoadRecipeSourceCollection *SourceCollection();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
