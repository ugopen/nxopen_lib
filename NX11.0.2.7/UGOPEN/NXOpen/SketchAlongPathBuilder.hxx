#ifndef NXOpen_SKETCHALONGPATHBUILDER_HXX_INCLUDED
#define NXOpen_SKETCHALONGPATHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SketchAlongPathBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_OnPathDimensionBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SketchAlongPathBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class SketchAlongPathBuilder;
    class Builder;
    class Direction;
    namespace GeometricUtilities
    {
        class OnPathDimensionBuilder;
    }
    class ScCollector;
    class Section;
    class SelectIReferenceAxis;
    class _SketchAlongPathBuilderBuilder;
    class SketchAlongPathBuilderImpl;
    /**
    Use the @link NXOpen::SketchAlongPathBuilder NXOpen::SketchAlongPathBuilder@endlink  to create or reattach a @link NXOpen::Sketch NXOpen::Sketch@endlink  along a path.
     <br> To create a new instance of this class, use @link NXOpen::SketchCollection::CreateSketchAlongPathBuilder  NXOpen::SketchCollection::CreateSketchAlongPathBuilder @endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    ShowAllDatumAxes </td> <td> 
     
    True </td> </tr> 

    <tr><td> 
     
    SketchOrient </td> <td> 
     
    Automatic </td> </tr> 

    </table>  

     <br>  Created in NX5.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  SketchAlongPathBuilder : public NXOpen::Builder
    {
        /** Indicates the orientation of the plane */
        public: enum PlaneOrientationType
        {
            PlaneOrientationTypeNormalToPath/** Normal to Path */,
            PlaneOrientationTypeNormalToVector/** Normal to Vector */,
            PlaneOrientationTypeParallelToVector/** Parallel to Vector */,
            PlaneOrientationTypeThroughAxis/** Through Axis */
        };

        /** Indicates the sketch orientation method. For the sketch orientation type is 'Automatic': two set of 
              * datum axes are created if the path contains a shared edge, one set of each face. For laminar edge 
              * one set of datum axes is created. If the path contains only wireframe the two set of axes are created.
              * For the sketch orientation type is 'Relative to face': one set of datum axes is craeted using the orienting faces
              * For the sketch orientation type is 'Use curve parameter': one set of datum axes is created using the the curve parameter*/
        public: enum SketchOrientationType
        {
            SketchOrientationTypeAutomatic/** Automatic */,
            SketchOrientationTypeRelativeToFace/** Relative to face*/,
            SketchOrientationTypeUseCurveParameters/** Based on curve parameter */
        };

        private: SketchAlongPathBuilderImpl * m_sketchalongpathbuilder_impl;
        private: friend class  _SketchAlongPathBuilderBuilder;
        protected: SketchAlongPathBuilder();
        public: ~SketchAlongPathBuilder();
        /**Returns  the path 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Section * Section
        (
        );
        /**Returns  the plane location 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * PlaneLocation
        (
        );
        /**Returns  the plane orientation type 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::SketchAlongPathBuilder::PlaneOrientationType PlaneOrientation
        (
        );
        /**Sets  the plane orientation type 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: void SetPlaneOrientation
        (
            NXOpen::SketchAlongPathBuilder::PlaneOrientationType planeOrientationType /** planeorientationtype */ 
        );
        /**Returns  the flag to indicate the plane normal is reversed  
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: bool ReversePlaneNormal
        (
        );
        /**Sets  the flag to indicate the plane normal is reversed  
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: void SetReversePlaneNormal
        (
            bool reversePlaneNormal /** reverseplanenormal */ 
        );
        /**Returns  the plane orientation axis for one of the types of "Normal to Vector", "Parallel to Vector" and "Through Axis" 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Direction * PlaneOrientationAxis
        (
        );
        /**Sets  the plane orientation axis for one of the types of "Normal to Vector", "Parallel to Vector" and "Through Axis" 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: void SetPlaneOrientationAxis
        (
            NXOpen::Direction * vector /** vector */ 
        );
        /**Returns  the horizontal reference 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::SelectIReferenceAxis * Axis
        (
        );
        /**Returns  the flag to indicate the horizontal reference axis is reversed 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: bool ReverseAxis
        (
        );
        /**Sets  the flag to indicate the horizontal reference axis is reversed 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: void SetReverseAxis
        (
            bool reverseAxis /** reverseaxis */ 
        );
        /**Returns  the parameter indicating the location of the next solution 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: double NextThroughPointSolution
        (
        );
        /**Returns  the sketch orientation method as @link NXOpen::SketchAlongPathBuilder::SketchOrientationType NXOpen::SketchAlongPathBuilder::SketchOrientationType@endlink 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::SketchAlongPathBuilder::SketchOrientationType SketchOrient
        (
        );
        /**Sets  the sketch orientation method as @link NXOpen::SketchAlongPathBuilder::SketchOrientationType NXOpen::SketchAlongPathBuilder::SketchOrientationType@endlink 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: void SetSketchOrient
        (
            NXOpen::SketchAlongPathBuilder::SketchOrientationType sketchOrientMethod /** sketch orient method */ 
        );
        /**Returns  the orienting faces to evaluate X and Y axis of sketch if @link NXOpen::SketchAlongPathBuilder::SketchOrientationType NXOpen::SketchAlongPathBuilder::SketchOrientationType@endlink  is @link NXOpen::SketchAlongPathBuilder::SketchOrientationTypeRelativeToFace NXOpen::SketchAlongPathBuilder::SketchOrientationTypeRelativeToFace@endlink .
             The datum axes are evaluated as tangent and normal of the orienting face.
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::ScCollector * OrientingFace
        (
        );
        /**Returns  the flag to create all datum axes for path having shared edge. This option is applicable only when 
                @link NXOpen::SketchAlongPathBuilder::SketchOrientationType NXOpen::SketchAlongPathBuilder::SketchOrientationType@endlink  is @link NXOpen::SketchAlongPathBuilder::SketchOrientationTypeRelativeToFace NXOpen::SketchAlongPathBuilder::SketchOrientationTypeRelativeToFace@endlink 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: bool ShowAllDatumAxes
        (
        );
        /**Sets  the flag to create all datum axes for path having shared edge. This option is applicable only when 
                @link NXOpen::SketchAlongPathBuilder::SketchOrientationType NXOpen::SketchAlongPathBuilder::SketchOrientationType@endlink  is @link NXOpen::SketchAlongPathBuilder::SketchOrientationTypeRelativeToFace NXOpen::SketchAlongPathBuilder::SketchOrientationTypeRelativeToFace@endlink 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: void SetShowAllDatumAxes
        (
            bool showAllDatumAxes /** show all datum axes */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
