#ifndef NXOpen_DRAFTING_MOVETODRAWINGVIEWBUILDER_HXX_INCLUDED
#define NXOpen_DRAFTING_MOVETODRAWINGVIEWBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drafting_MoveToDrawingViewBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drafting_MoveToDrawingViewBuilder.hxx>
#include <NXOpen/Drawings_View2dOrientBuilder.hxx>
#include <NXOpen/Drawings_ViewScaleBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_drafting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drafting
    {
        class MoveToDrawingViewBuilder;
    }
    class Builder;
    namespace Drawings
    {
        class View2dOrientBuilder;
    }
    namespace Drawings
    {
        class ViewScaleBuilder;
    }
    namespace Drawings
    {
        class ViewStyleBuilder;
    }
    class Point;
    class SelectTaggedObjectList;
    namespace Drafting
    {
        class _MoveToDrawingViewBuilderBuilder;
        class MoveToDrawingViewBuilderImpl;
        /** This builder allows the user to extract contents from a sheet and transfer them to a new Drawing
                view, also provide some other options for view creation
              <br> To create a new instance of this class, use @link NXOpen::Drafting::DraftingApplicationManager::CreateMoveToDrawingViewBuilder  NXOpen::Drafting::DraftingApplicationManager::CreateMoveToDrawingViewBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ViewScale.Denominator </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        ViewScale.Numerator </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        ViewScale.ScaleType </td> <td> 
         
        Ratio </td> </tr> 

        <tr><td> 
         
        ViewStyle.ViewStyleGeneral.AngleSetting.Angle.Value </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ViewStyle.ViewStyleGeneral.AngleSetting.Associative </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ViewStyle.ViewStyleGeneral.AngleSetting.EvaluationPlane </td> <td> 
         
        DrawingSheet </td> </tr> 

        <tr><td> 
         
        ViewStyle.ViewStyleOrientation.HingeLine.ReverseDirection </td> <td> 
         
        false </td> </tr> 

        <tr><td> 
         
        ViewStyle.ViewStyleOrientation.HingeLine.VectorOption </td> <td> 
         
        Inferred </td> </tr> 

        <tr><td> 
         
        ViewStyle.ViewStyleOrientation.Ovt.AssociativeOrientation </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        XCoordinate </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        YCoordinate </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_DRAFTINGEXPORT  MoveToDrawingViewBuilder : public NXOpen::Builder
        {
            private: MoveToDrawingViewBuilderImpl * m_movetodrawingviewbuilder_impl;
            private: friend class  _MoveToDrawingViewBuilderBuilder;
            protected: MoveToDrawingViewBuilder();
            public: ~MoveToDrawingViewBuilder();
            /**Returns  the select objects from the current sheet
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * SelectObjects
            (
            );
            /**Returns  the select point to calculate the new created drawing view's reference point
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * SelectPoint
            (
            );
            /**Sets  the select point to calculate the new created drawing view's reference point
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetSelectPoint
            (
                NXOpen::Point * selectPoint /** selectpoint */ 
            );
            /**Returns  the x coordinate to calculate the new created drawing view's reference point
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double XCoordinate
            (
            );
            /**Sets  the x coordinate to calculate the new created drawing view's reference point
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetXCoordinate
            (
                double xCoordinate /** xcoordinate */ 
            );
            /**Returns  the y coordinate to calculate the new created drawing view's reference point
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double YCoordinate
            (
            );
            /**Sets  the y coordinate to calculate the new created drawing view's reference point
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetYCoordinate
            (
                double yCoordinate /** ycoordinate */ 
            );
            /**Returns  the view scale 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::ViewScaleBuilder * ViewScale
            (
            );
            /**Returns  the view orientation 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::View2dOrientBuilder * TwoDOrientation
            (
            );
            /**Returns  the view style 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::ViewStyleBuilder * ViewStyle
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
