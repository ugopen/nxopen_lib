#ifndef NXOpen_FEATURES_VEHICLEDESIGN_HEADIMPACTOPILLARWIZARDBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_VEHICLEDESIGN_HEADIMPACTOPILLARWIZARDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VehicleDesign_HeadImpactOPillarWizardBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_VehicleDesign_HeadImpactOPillarWizardBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactOPillarWizardBuilder;
        }
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Point;
    class ScCollector;
    namespace Features
    {
        namespace VehicleDesign
        {
            class _HeadImpactOPillarWizardBuilderBuilder;
            class HeadImpactOPillarWizardBuilderImpl;
            /** Represents a @link NXOpen::Features::VehicleDesign::HeadImpactOPillarWizardBuilder NXOpen::Features::VehicleDesign::HeadImpactOPillarWizardBuilder@endlink .  <br> This is an abstract class and cannot be instantiated.  <br> 
             <br>  Created in NX9.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  HeadImpactOPillarWizardBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
            {
                private: HeadImpactOPillarWizardBuilderImpl * m_headimpactopillarwizardbuilder_impl;
                private: friend class  _HeadImpactOPillarWizardBuilderBuilder;
                protected: HeadImpactOPillarWizardBuilder();
                public: ~HeadImpactOPillarWizardBuilder();
                /**Returns  the upper roof interior geometry. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * UpperRoofInterior
                (
                );
                /**Returns  the left additional pillar geometry. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * OPillarLeft
                (
                );
                /**Returns  the right additional pillar geometry. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * OPillarRight
                (
                );
                /**Returns  the left additional pillar centerline geometry. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * CenterlineLeft
                (
                );
                /**Returns  the right additional pillar centerline geometry. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * CenterlineRight
                (
                );
                /**Returns  the left forward door opening geometry. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * DoorOpeningLeft
                (
                );
                /**Returns  the right forward door opening geometry. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * DoorOpeningRight
                (
                );
                /**Returns  the left forward daylight opening geometry. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * DaylightOpeningLeft
                (
                );
                /**Returns  the right forward daylight opening geometry. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * DaylightOpeningRight
                (
                );
                /**Returns  the left additional pillar 1 point. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * OP1Left
                (
                );
                /**Sets  the left additional pillar 1 point. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetOP1Left
                (
                    NXOpen::Point * op1Left /** op1left */ 
                );
                /**Returns  the right additional pillar 1 point. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * OP1Right
                (
                );
                /**Sets  the right additional pillar 1 point. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetOP1Right
                (
                    NXOpen::Point * op1Right /** op1right */ 
                );
                /**Returns  the left door opening top point. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * DoorTopLeft
                (
                );
                /**Sets  the left door opening top point. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDoorTopLeft
                (
                    NXOpen::Point * doorTopLeft /** doortopleft */ 
                );
                /**Returns  the right door opening top point. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * DoorTopRight
                (
                );
                /**Sets  the right door opening top point. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDoorTopRight
                (
                    NXOpen::Point * doorTopRight /** doortopright */ 
                );
                /**Returns  the left daylight opening bottom point. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * DaylightBottomLeft
                (
                );
                /**Sets  the left daylight opening bottom point. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDaylightBottomLeft
                (
                    NXOpen::Point * daylightBottomLeft /** daylightbottomleft */ 
                );
                /**Returns  the right daylight opening bottom point. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * DaylightBottomRight
                (
                );
                /**Sets  the right daylight opening bottom point. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDaylightBottomRight
                (
                    NXOpen::Point * daylightBottomRight /** daylightbottomright */ 
                );
                /** Validate whether the inputs to the component are sufficient for 
                            commit to be called.  If the component is not in a state to commit
                            then an exception is thrown.  For example, if the component requires
                            you to set some property, this method will throw an exception if
                            you haven't set it.  This method throws a not-yet-implemented
                            NXException for some components.
                         @return  Was self validation successful 
                 <br>  Created in NX3.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
