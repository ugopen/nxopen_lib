#ifndef NXOpen_PDM_NATIVEPARTLOGICALOBJECT_HXX_INCLUDED
#define NXOpen_PDM_NATIVEPARTLOGICALOBJECT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDM_NativePartLogicalObject.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/PDM_LogicalObject.hxx>
#include <NXOpen/PDM_PartOperationImportBuilder.hxx>
#include <NXOpen/libnxopencpp_pdm_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PDM
    {
        class NativePartLogicalObject;
    }
    namespace PDM
    {
        class LogicalObject;
    }
    namespace PDM
    {
        class _NativePartLogicalObjectBuilder;
        class NativePartLogicalObjectImpl;
        /**
                Represents the class that contains information for the objects participating in import operation.
             <br> Instances of this class can be accessed through various application specific builders  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_PDMEXPORT  NativePartLogicalObject : public NXOpen::PDM::LogicalObject
        {
            private: NativePartLogicalObjectImpl * m_nativepartlogicalobject_impl;
            private: friend class  _NativePartLogicalObjectBuilder;
            protected: NativePartLogicalObject();
            public: ~NativePartLogicalObject();
            /** Gets the initial name of this logical object.  @return  the filename of added for import 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetInitialName
            (
            );
            /** Gets the final name of this logical object.  @return  the database name assigned to the part being imported 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetFinalName
            (
            );
            /** Gets the flag indicating whether part name is autoassigned or not.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsPartNameAutoAssigned
            (
            );
            /** Checks if the part represented by this logical object is a candidate for import.
                        The part is not a candidate for import if it is lost or name-only.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsCandidateForImport
            (
            );
            /** Gets the existing part action defined for this part  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PDM::PartOperationImportBuilder::ExistingPartAction GetExistingPartAction
            (
            );
            /** Sets the existing part action defined for this part 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void SetExistingPartAction
            (
                NXOpen::PDM::PartOperationImportBuilder::ExistingPartAction existingPartAction /** existingpartaction */ 
            );
            /** Gets the validation mode setting defined for this part  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PDM::PartOperationImportBuilder::Validation GetValidationMode
            (
            );
            /** Sets the validation mode setting defined for this part 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void SetValidationMode
            (
                NXOpen::PDM::PartOperationImportBuilder::Validation validationMode /** validationmode */ 
            );
            /** Gets the validation rule set file browse option defined for this part  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PDM::PartOperationImportBuilder::ValidationRuleSetFileBrowseOption GetValidationRuleSetFileBrowseOption
            (
            );
            /** Sets the validation rule set file browse option defined for this part 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void SetValidationRuleSetFileBrowseOption
            (
                NXOpen::PDM::PartOperationImportBuilder::ValidationRuleSetFileBrowseOption browseOption /** browseoption */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
