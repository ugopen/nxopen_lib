#ifndef NXOpen_FEATURES_SHIPDESIGN_PROFILETRANSITIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_PROFILETRANSITIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_ProfileTransitionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ShipDesign_ProfileTransitionBuilder.hxx>
#include <NXOpen/Features_ShipDesign_SteelFeatureSpreadsheetBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class ProfileTransitionBuilder;
        }
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class SteelFeatureSpreadsheetBuilder;
        }
    }
    class ScCollector;
    namespace Features
    {
        namespace ShipDesign
        {
            class _ProfileTransitionBuilderBuilder;
            class ProfileTransitionBuilderImpl;
            /**
                    Builder used to create or edit a @link NXOpen::Features::ShipDesign::ProfileTransition NXOpen::Features::ShipDesign::ProfileTransition@endlink  feature.
                     <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateProfileTransitionBuilder  NXOpen::Features::ShipCollection::CreateProfileTransitionBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            AngularTolerance </td> <td> 
             
            0.5 </td> </tr> 

            <tr><td> 
             
            DistanceTolerance </td> <td> 
             
            0.0254 (millimeters part), 0.001 (inches part) </td> </tr> 

            <tr><td> 
             
            FeatureMode </td> <td> 
             
            Target </td> </tr> 

            <tr><td> 
             
            MisalignedMode </td> <td> 
             
            ToBoundary </td> </tr> 

            </table>  

             <br>  Created in NX9.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  ProfileTransitionBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** Represents the feature mode option. */
                public: enum FeatureModeType
                {
                    FeatureModeTypeTarget/** Create transition on the target body. */,
                    FeatureModeTypeSeparateWebAndFace/** Create in separate parts for web and face plate. */,
                    FeatureModeTypeSeparateFace/** Create web trim on target body and face plate in a separate part. */
                };

                /** Represents the misaligned profile mode. */
                public: enum MisalignedModeType
                {
                    MisalignedModeTypeNotAllowed/** Ignore misaligned profiles. */,
                    MisalignedModeTypeToBoundary/** Transition target directly to boundary end. */,
                    MisalignedModeTypeBisect/** Extend/trim boundary end to bisector plane between target and boundary. Transition target to new boundary end. */
                };

                private: ProfileTransitionBuilderImpl * m_profiletransitionbuilder_impl;
                private: friend class  _ProfileTransitionBuilderBuilder;
                protected: ProfileTransitionBuilder();
                public: ~ProfileTransitionBuilder();
                /**Returns  the spreadsheet builder. 
                             <br> 
                            Users can specify the Profile Transition length in the spreadsheet. The spreadsheet
                            is controlled by the @link NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder@endlink .
                             <br> 
                            
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder * Spreadsheet
                (
                );
                /**Returns  the feature mode used to create new Profile Transition features. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ProfileTransitionBuilder::FeatureModeType FeatureMode
                (
                );
                /**Sets  the feature mode used to create new Profile Transition features. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetFeatureMode
                (
                    NXOpen::Features::ShipDesign::ProfileTransitionBuilder::FeatureModeType featureMode /** featuremode */ 
                );
                /**Returns  the misaligned mode used to create new Profile Transition features. 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ProfileTransitionBuilder::MisalignedModeType MisalignedMode
                (
                );
                /**Sets  the misaligned mode used to create new Profile Transition features. 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetMisalignedMode
                (
                    NXOpen::Features::ShipDesign::ProfileTransitionBuilder::MisalignedModeType misalignedMode /** misalignedmode */ 
                );
                /**Returns  the collector containing the target bodies. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * Targets
                (
                );
                /**Returns  the collector containing the boundary bodies. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * Boundaries
                (
                );
                /**Returns  the distance tolerance (part units) 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: double DistanceTolerance
                (
                );
                /**Sets  the distance tolerance (part units) 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetDistanceTolerance
                (
                    double distanceTolerance /** distancetolerance */ 
                );
                /**Returns  the angular tolerance (degrees) 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: double AngularTolerance
                (
                );
                /**Sets  the angular tolerance (degrees) 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetAngularTolerance
                (
                    double angularTolerance /** angulartolerance */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
