#ifndef NXOpen_CAE_LAMINATEIMPORTZONESBUILDER_HXX_INCLUDED
#define NXOpen_CAE_LAMINATEIMPORTZONESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_LaminateImportZonesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_LaminateImportZonesBuilder.hxx>
#include <NXOpen/CAE_LaminateSelectEntitiesBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class LaminateImportZonesBuilder;
    }
    class Builder;
    namespace CAE
    {
        class LaminateSelectEntitiesBuilder;
    }
    class Expression;
    namespace CAE
    {
        class _LaminateImportZonesBuilderBuilder;
        class LaminateImportZonesBuilderImpl;
        /** Represents a @link NXOpen::CAE::LaminateImportZonesBuilder NXOpen::CAE::LaminateImportZonesBuilder@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::CAE::LaminateGlobalLayupMgr::CreateLaminateImportZonesBuilder  NXOpen::CAE::LaminateGlobalLayupMgr::CreateLaminateImportZonesBuilder @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  LaminateImportZonesBuilder : public NXOpen::Builder
        {
            private: LaminateImportZonesBuilderImpl * m_laminateimportzonesbuilder_impl;
            private: friend class  _LaminateImportZonesBuilderBuilder;
            protected: LaminateImportZonesBuilder();
            public: ~LaminateImportZonesBuilder();
            /**Returns  the geometric face(s) and element face(s) on which to zones will be imported 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::LaminateSelectEntitiesBuilder * Selection
            (
            );
            /**Returns  the search distance used to localize each FEM element in the FiberSIM zone mesh 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SearchDistance
            (
            );
            /**Returns  the full name and path of the file to be imported 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Filename
            (
            );
            /**Sets  the full name and path of the file to be imported 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void SetFilename
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the full name and path of the file to be imported 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            void SetFilename
            (
                const char * filename /** filename */ 
            );
            /**Returns  the material import option 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool ImportMaterials
            (
            );
            /**Sets  the material import option 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void SetImportMaterials
            (
                bool importMaterials /** importmaterials */ 
            );
            /**Returns  the material import overwrite option 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool OverwriteMaterials
            (
            );
            /**Sets  the material import overwrite option 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void SetOverwriteMaterials
            (
                bool overwriteMaterials /** overwritematerials */ 
            );
            /**Returns  the laminate properties overwrite option 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool OverwriteLamProps
            (
            );
            /**Sets  the laminate properties overwrite option 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void SetOverwriteLamProps
            (
                bool overwriteLamProps /** overwritelamprops */ 
            );
            /**Returns  the mesh collectors overwrite option 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool OverwriteCollectors
            (
            );
            /**Sets  the mesh collectors overwrite option 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void SetOverwriteCollectors
            (
                bool overwriteCollectors /** overwritecollectors */ 
            );
            /**Returns  the boundaries import option 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool ImportBoundaries
            (
            );
            /**Sets  the boundaries import option 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void SetImportBoundaries
            (
                bool importBoundaries /** importboundaries */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
