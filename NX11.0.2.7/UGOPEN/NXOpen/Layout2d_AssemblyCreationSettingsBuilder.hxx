#ifndef NXOpen_LAYOUT2D_ASSEMBLYCREATIONSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_LAYOUT2D_ASSEMBLYCREATIONSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Layout2d_AssemblyCreationSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Layout2d_AssemblyCreationSettingsBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_layout2d_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Layout2d
    {
        class AssemblyCreationSettingsBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Layout2d
    {
        class _AssemblyCreationSettingsBuilderBuilder;
        class AssemblyCreationSettingsBuilderImpl;
        /**
             Represents a @link NXOpen::Layout2d::AssemblyCreationSettingsBuilder NXOpen::Layout2d::AssemblyCreationSettingsBuilder@endlink 
            
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_LAYOUT2DEXPORT  AssemblyCreationSettingsBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: AssemblyCreationSettingsBuilderImpl * m_assemblycreationsettingsbuilder_impl;
            private: friend class  _AssemblyCreationSettingsBuilderBuilder;
            protected: AssemblyCreationSettingsBuilder();
            public: ~AssemblyCreationSettingsBuilder();
            /**Returns  the settings to determines whether or not transfer top level sketch annotation 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool TransferTopLevelSketchAnnotation
            (
            );
            /**Sets  the settings to determines whether or not transfer top level sketch annotation 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetTransferTopLevelSketchAnnotation
            (
                bool transferTopLevelSketchAnnotation /** transfertoplevelsketchannotation */ 
            );
            /**Returns  the settings to determines whether or not transfer 2d component annotation
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool Transfer2dComponentAnnotation
            (
            );
            /**Sets  the settings to determines whether or not transfer 2d component annotation
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetTransfer2dComponentAnnotation
            (
                bool transfer2dComponentAnnotation /** transfer2dcomponentannotation */ 
            );
            /**Returns   the settings todetermines whether or not automatically start modeling application
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool AutomaticallyStartModelingApplication
            (
            );
            /**Sets   the settings todetermines whether or not automatically start modeling application
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAutomaticallyStartModelingApplication
            (
                bool automaticallyStartModelingApplication /** automaticallystartmodelingapplication */ 
            );
            /** Inherit Settings From Customer Default 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void InheritSettingsFromCustomerDefault
            (
            );
            /** Inherit Settings From Preference 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void InheritSettingsFromPreferences
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
