#ifndef NXOpen_TOOLING_SELECTREUSELIBRARYLISTBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_SELECTREUSELIBRARYLISTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_SelectReuseLibraryListBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/Tooling_SelectReuseLibraryListBuilder.hxx>
#include <NXOpen/Tooling_SelectReuseLibraryListItemBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class SelectReuseLibraryListBuilder;
    }
    namespace Tooling
    {
        class SelectReuseLibraryListItemBuilder;
    }
    namespace Tooling
    {
        class SelectReuseLibraryListItemBuilderList;
    }
    namespace Tooling
    {
        class _SelectReuseLibraryListBuilderBuilder;
        class SelectReuseLibraryListBuilderImpl;
        /** Select a list of objects from the reuse library 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  SelectReuseLibraryListBuilder : public NXOpen::TaggedObject
        {
            private: SelectReuseLibraryListBuilderImpl * m_selectreuselibrarylistbuilder_impl;
            private: friend class  _SelectReuseLibraryListBuilderBuilder;
            protected: SelectReuseLibraryListBuilder();
            public: ~SelectReuseLibraryListBuilder();
            /**Returns  the select reuse item list. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::SelectReuseLibraryListItemBuilderList * ReuseItemList
            (
            );
            /**Returns  the item name from the reuse library 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ItemName
            (
            );
            /**Sets  the item name from the reuse library 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetItemName
            (
                const NXString & itemName /** itemname */ 
            );
            /**Sets  the item name from the reuse library 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            void SetItemName
            (
                const char * itemName /** itemname */ 
            );
            /** Generate a list item.  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::SelectReuseLibraryListItemBuilder * CreateListItem
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
