#ifndef NXOpen_PID_PORT_HXX_INCLUDED
#define NXOpen_PID_PORT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PID_Port.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/PDM_PortArtifact.hxx>
#include <NXOpen/PDM_PortArtifact.hxx>
#include <NXOpen/PID_DataType.hxx>
#include <NXOpen/libpidopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PID
    {
        class Port;
    }
    namespace PDM
    {
        class PortArtifact;
    }
    namespace PID
    {
        class _PortBuilder;
        class PortImpl;

        /// \cond NX_NO_DOC 
        /** Represents the port class.  <br> This class is not created directly by the user.  <br> 
         <br>  Created in NX11.0.1.  <br>  
        */
        class PIDOPENCPPEXPORT  Port : public NXOpen::PDM::PortArtifact
        {
            private: PortImpl * m_port_impl;
            private: friend class  _PortBuilder;
            protected: Port();
            public: ~Port();
            /**Returns  the Id of the port.
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_pid_design_reader ("NX P and ID Design Reader") OR nx_pid_design_author ("NX P and ID Design Author") */
            public: NXString Id
            (
            );
            /**Returns  the Id of the port.
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_pid_design_reader ("NX P and ID Design Reader") OR nx_pid_design_author ("NX P and ID Design Author") */
            public: NXString PortAlias
            (
            );
            /**Returns  the Id of the port.
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_pid_design_reader ("NX P and ID Design Reader") OR nx_pid_design_author ("NX P and ID Design Author") */
            public: NXString Discipline
            (
            );
            /**Returns  the Id of the port.
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_pid_design_reader ("NX P and ID Design Reader") OR nx_pid_design_author ("NX P and ID Design Author") */
            public: NXOpen::PID::PortDirectionOption Direction
            (
            );
            /**Returns  the connection type of the port.
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_pid_design_reader ("NX P and ID Design Reader") OR nx_pid_design_author ("NX P and ID Design Author") */
            public: NXString ConnectionType
            (
            );
            /**Returns  the material of the port.
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_pid_design_reader ("NX P and ID Design Reader") OR nx_pid_design_author ("NX P and ID Design Author") */
            public: NXString Material
            (
            );
            /**Returns  the nps of the port.
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_pid_design_reader ("NX P and ID Design Reader") OR nx_pid_design_author ("NX P and ID Design Author") */
            public: double Nps
            (
            );
            /**Returns  the indicator of the port's terminating.
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_pid_design_reader ("NX P and ID Design Reader") OR nx_pid_design_author ("NX P and ID Design Author") */
            public: bool Terminating
            (
            );
            /**Returns  the indicator of the port's inline.
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_pid_design_reader ("NX P and ID Design Reader") OR nx_pid_design_author ("NX P and ID Design Author") */
            public: bool Inline
            (
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
