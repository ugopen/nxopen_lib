#ifndef NXOpen_PREFERENCES_OBJECTPREFERENCES_HXX_INCLUDED
#define NXOpen_PREFERENCES_OBJECTPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_ObjectPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Preferences
    {
        class ObjectPreferences;
    }
    class UI;
    namespace Preferences
    {
        class ObjectPreferencesImpl;
        /** Captures the UI based calls required for Object Preferences  <br> To obtain an instance of this class, refer to @link NXOpen::UI  NXOpen::UI @endlink  <br> 
         <br>  Created in NX3.0.0.  <br>  
        */
        class NXOPENUICPPEXPORT  ObjectPreferences
        {
            /** Describes whether the translucency is enabled or disabled */
            public: enum Translucency
            {
                TranslucencyDisabled/** disabled */ ,
                TranslucencyEnabled/** enabled */ ,
                TranslucencyTemporarilyEnabled/** temporarily enabled */ 
            };

            private: ObjectPreferencesImpl * m_objectpreferences_impl;
            private: NXOpen::UI* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit ObjectPreferences(NXOpen::UI *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~ObjectPreferences();
            /** Resets the session translucency 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void ResetSessionTranslucency
            (
                bool option /** User can set TRUE or FALSE */,
                NXOpen::Preferences::ObjectPreferences::Translucency* sessionTranslucency /** Return Value */
            );
            /** Sets the session translucency 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSessionTranslucency
            (
                NXOpen::Preferences::ObjectPreferences::Translucency option /** option */ ,
                NXOpen::Preferences::ObjectPreferences::Translucency* sessionTranslucency /** Return Value */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
