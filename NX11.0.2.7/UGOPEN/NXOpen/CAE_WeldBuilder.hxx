#ifndef NXOpen_CAE_WELDBUILDER_HXX_INCLUDED
#define NXOpen_CAE_WELDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_WeldBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ElementTypeBuilder.hxx>
#include <NXOpen/CAE_WeldBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class WeldBuilder;
    }
    class Builder;
    namespace CAE
    {
        class ElementTypeBuilder;
    }
    namespace CAE
    {
        class SelectFENodeList;
    }
    class Direction;
    class Expression;
    class SelectTaggedObjectList;
    namespace CAE
    {
        class _WeldBuilderBuilder;
        class WeldBuilderImpl;
        /**
            Represents a @link NXOpen::CAE::WeldBuilder NXOpen::CAE::WeldBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::MeshManager::CreateWeldBuilder  NXOpen::CAE::MeshManager::CreateWeldBuilder @endlink  <br> 
         <br>  Created in NX7.5.2.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  WeldBuilder : public NXOpen::Builder
        {
            /**  Represents the options for type of operation */
            public: enum WeldLocation
            {
                WeldLocationPoint/** Creates a weld at locations specified using points */,
                WeldLocationFile/** Creates a weld at locations specified in an input file */,
                WeldLocationEdge/** Creates a weld at locations on an edge */,
                WeldLocationNode/** Creates a weld at locations specified using nodes */
            };

            /**  Represents the options for specifying number of weld points on an edge */
            public: enum PointOnEdgeType
            {
                PointOnEdgeTypeByNumber/** Specify the number of weld points to be created on an edge */,
                PointOnEdgeTypeByDistance/** Specify the distance between weld points created on an edge */,
                PointOnEdgeTypeByPattern/** Specify the distance between weld points as a pattern */
            };

            /**  Represents the options for specifying maximum number of weld points on an edge */
            public: enum NumberOfPointsOnEdgeType
            {
                NumberOfPointsOnEdgeTypeMaximumNumber/** Create the maximum number of points on an edge */,
                NumberOfPointsOnEdgeTypeSpecifiedNumber/** Specify the number of points to be created on an edge */
            };

            private: WeldBuilderImpl * m_weldbuilder_impl;
            private: friend class  _WeldBuilderBuilder;
            protected: WeldBuilder();
            public: ~WeldBuilder();
            /**Returns  the location of the specified weld 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::WeldBuilder::WeldLocation Location
            (
            );
            /**Sets  the location of the specified weld 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLocation
            (
                NXOpen::CAE::WeldBuilder::WeldLocation location /** location */ 
            );
            /**Returns  the point(s) used to specify the location of the weld 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * PointsSelection
            (
            );
            /**Returns  the name of the input file used to specify locations for the weld 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : None */
            public: NXString InputFile
            (
            );
            /**Sets  the name of the input file used to specify locations for the weld 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetInputFile
            (
                const NXString & inputFile /** inputfile */ 
            );
            /**Sets  the name of the input file used to specify locations for the weld 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetInputFile
            (
                const char * inputFile /** inputfile */ 
            );
            /**Returns  the edge(s) used to specify the location of the weld 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * EdgeSelection
            (
            );
            /**Returns  the flip state of the selected edge(s) 
             <br>  Created in NX7.5.4.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: int FlipState
            (
            );
            /**Sets  the flip state of the selected edge(s) 
             <br>  Created in NX7.5.4.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetFlipState
            (
                int flipState /** flipstate */ 
            );
            /**Returns  the distance of the first point from the beginning of the edge(s) 
             <br>  Created in NX7.5.4.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StartOffset
            (
            );
            /**Returns  the distance of the last point from the end of the edge(s) 
             <br>  Created in NX7.5.4.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * EndOffset
            (
            );
            /**Returns  the distance to offset the points from the edge(s) 
             <br>  Created in NX7.5.4.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * OffsetDistance
            (
            );
            /**Returns  the vector along which to offset the points 
             <br>  Created in NX7.5.4.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * OffsetVector
            (
            );
            /**Sets  the vector along which to offset the points 
             <br>  Created in NX7.5.4.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetOffsetVector
            (
                NXOpen::Direction * offsetVector /** offsetvector */ 
            );
            /**Returns  the location of the points on the edge 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::WeldBuilder::PointOnEdgeType PointOnEdgeOption
            (
            );
            /**Sets  the location of the points on the edge 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetPointOnEdgeOption
            (
                NXOpen::CAE::WeldBuilder::PointOnEdgeType pointOnEdgeOption /** pointonedgeoption */ 
            );
            /**Returns  the number of points on the edge(s) used to specify the location of the weld 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : None */
            public: int NumberOfPointsOnEdge
            (
            );
            /**Sets  the number of points on the edge(s) used to specify the location of the weld 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetNumberOfPointsOnEdge
            (
                int numberOfPoints /** numberofpoints */ 
            );
            /**Returns  the distance between the points on the edge(s) used to specify the location of the weld 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * DistanceBetween
            (
            );
            /**Returns  the pattern used to specify locations on the edge(s) 
             <br>  Created in NX7.5.4.  <br>  
             <br> License requirements : None */
            public: NXString Pattern
            (
            );
            /**Sets  the pattern used to specify locations on the edge(s) 
             <br>  Created in NX7.5.4.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetPattern
            (
                const NXString & pattern /** pattern */ 
            );
            /**Sets  the pattern used to specify locations on the edge(s) 
             <br>  Created in NX7.5.4.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetPattern
            (
                const char * pattern /** pattern */ 
            );
            /**Returns  the option to specify the maximum number of points on the edge(s) used to specify the location of the weld 
             <br>  Created in NX7.5.4.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::WeldBuilder::NumberOfPointsOnEdgeType NumberOfPointsOption
            (
            );
            /**Sets  the option to specify the maximum number of points on the edge(s) used to specify the location of the weld 
             <br>  Created in NX7.5.4.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetNumberOfPointsOption
            (
                NXOpen::CAE::WeldBuilder::NumberOfPointsOnEdgeType pointOnEdgeOption /** pointonedgeoption */ 
            );
            /**Returns  the maximum number of points on the edge(s) used to specify the location of the weld 
             <br>  Created in NX7.5.4.  <br>  
             <br> License requirements : None */
            public: int SpecifiedNumberOfPoints
            (
            );
            /**Sets  the maximum number of points on the edge(s) used to specify the location of the weld 
             <br>  Created in NX7.5.4.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetSpecifiedNumberOfPoints
            (
                int specifiedNumberOfPoints /** specifiednumberofpoints */ 
            );
            /**Returns  the node(s) used to specify the location of the weld 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SelectFENodeList * NodeSelection
            (
            );
            /**Returns  the distance within which to search for PIDs 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SearchDistance
            (
            );
            /**Returns  the option to include all PIDs within the search distance for creating welds  
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : None */
            public: bool SupportAllPids
            (
            );
            /**Sets  the option to include all PIDs within the search distance for creating welds  
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetSupportAllPids
            (
                bool isSupportAllPids /** issupportallpids */ 
            );
            /**Returns  the element type to be created for the weld 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ElementTypeBuilder * ElementType
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
