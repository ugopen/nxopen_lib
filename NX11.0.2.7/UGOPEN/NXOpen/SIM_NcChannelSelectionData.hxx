#ifndef NXOpen_SIM_NCCHANNELSELECTIONDATA_HXX_INCLUDED
#define NXOpen_SIM_NCCHANNELSELECTIONDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_NcChannelSelectionData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        class NcChannelSelectionData;
    }
    class NXObject;
    namespace SIM
    {
        class _NcChannelSelectionDataBuilder;
        class NcChannelSelectionDataImpl;
        /**  @brief  Represents the NcChannelSelectionData class object  

            <br> Use the @link NXOpen::SIM::NcChannelSelectionData NXOpen::SIM::NcChannelSelectionData@endlink  class to create a NcChannelSelectionData object.  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_SIMEXPORT  NcChannelSelectionData : public NXOpen::NXObject
        {
            private: NcChannelSelectionDataImpl * m_ncchannelselectiondata_impl;
            private: friend class  _NcChannelSelectionDataBuilder;
            protected: NcChannelSelectionData();
            public: ~NcChannelSelectionData();
            /** Assign a file to a channel using the channel number. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void AssignFile
            (
                int channel /** The channel number */,
                const NXString & file /** The file to be assigned */
            );
            /** Assign a file to a channel using the channel number. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            void AssignFile
            (
                int channel /** The channel number */,
                const char * file /** The file to be assigned */
            );
            /** Assign a file to a channel using the channel name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void AssignFile
            (
                const NXString & channel /** The channel name */,
                const NXString & file /** The file to be assigned */
            );
            /** Assign a file to a channel using the channel name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            void AssignFile
            (
                const char * channel /** The channel name */,
                const char * file /** The file to be assigned */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
