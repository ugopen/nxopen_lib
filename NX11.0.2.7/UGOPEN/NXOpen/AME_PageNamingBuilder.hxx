#ifndef NXOpen_AME_PAGENAMINGBUILDER_HXX_INCLUDED
#define NXOpen_AME_PAGENAMINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_PageNamingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_PageNamingBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class PageNamingBuilder;
    }
    namespace AME
    {
        class SelectAMEBaseNode;
    }
    class Builder;
    namespace AME
    {
        class _PageNamingBuilderBuilder;
        class PageNamingBuilderImpl;
        /** Class to define Page naming schema  <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreatePageNamingBuilder  NXOpen::AME::AMEManager::CreatePageNamingBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        DisplayDigits </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        Increment </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        Start </td> <td> 
         
        1 </td> </tr> 

        </table>  

         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  PageNamingBuilder : public NXOpen::Builder
        {
            private: PageNamingBuilderImpl * m_pagenamingbuilder_impl;
            private: friend class  _PageNamingBuilderBuilder;
            protected: PageNamingBuilder();
            public: ~PageNamingBuilder();
            /**Returns  the Target node selection 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::SelectAMEBaseNode * TargetSelection
            (
            );
            /**Returns  the start name
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: int Start
            (
            );
            /**Sets  the start name
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetStart
            (
                int start /** start */ 
            );
            /**Returns  the increment 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: int Increment
            (
            );
            /**Sets  the increment 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetIncrement
            (
                int increment /** increment */ 
            );
            /**Returns  the Display Digits 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: int DisplayDigits
            (
            );
            /**Sets  the Display Digits 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetDisplayDigits
            (
                int displayDigits /** displaydigits */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
