#ifndef NXOpen_STEP203IMPORTER_HXX_INCLUDED
#define NXOpen_STEP203IMPORTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Step203Importer.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DexBuilder.hxx>
#include <NXOpen/ObjectTypeSelector.hxx>
#include <NXOpen/Step203Importer.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class Step203Importer;
    class DexBuilder;
    class ObjectTypeSelector;
    class _Step203ImporterBuilder;
    class Step203ImporterImpl;
    /**
        Represents a @link NXOpen::Step203Importer NXOpen::Step203Importer@endlink  to be used when importing the STEP203 Data
        This class is created using @link NXOpen::DexManager NXOpen::DexManager@endlink .
        NULL object will be returned from Commit()  <br> To create a new instance of this class, use @link NXOpen::DexManager::CreateStep203Importer  NXOpen::DexManager::CreateStep203Importer @endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    FlattenAssembly </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    ImportTo </td> <td> 
     
    WorkPart </td> </tr> 

    <tr><td> 
     
    ImportToTeamcenter </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    LayerDefault </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    Optimize </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    ProcessHoldFlag </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    SewSurfaces </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    SimplifyGeometry </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    SmoothBSurfaces </td> <td> 
     
    1 </td> </tr> 

    </table>  

     <br>  Created in NX6.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  Step203Importer : public NXOpen::DexBuilder
    {
        /** Create the builder */
        public: enum ImportToOption
        {
            ImportToOptionWorkPart/** import iges file to work part */,
            ImportToOptionNewPart/** import iges file to new part */
        };

        private: Step203ImporterImpl * m_step203importer_impl;
        private: friend class  _Step203ImporterBuilder;
        protected: Step203Importer();
        public: ~Step203Importer();
        /** Saves the save settings - this will save the settings to a file specified 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SaveSettings
        (
            const NXString & filename /** filename */ 
        );
        /** Saves the save settings - this will save the settings to a file specified 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void SaveSettings
        (
            const char * filename /** filename */ 
        );
        /**Returns  the input file - name of a file which is being imported
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXString InputFile
        (
        );
        /**Sets  the input file - name of a file which is being imported
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetInputFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the input file - name of a file which is being imported
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void SetInputFile
        (
            const char * filename /** filename */ 
        );
        /**Returns  the import to - this option will determine the destination for imported iges file. it can
                    either be new part or work part. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Step203Importer::ImportToOption ImportTo
        (
        );
        /**Sets  the import to - this option will determine the destination for imported iges file. it can
                    either be new part or work part. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetImportTo
        (
            NXOpen::Step203Importer::ImportToOption importTo /** importto */ 
        );
        /**Returns  the output file - if iges file is imported to new part then this name will be used to
                    write the output. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXString OutputFile
        (
        );
        /**Sets  the output file - if iges file is imported to new part then this name will be used to
                    write the output. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetOutputFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the output file - if iges file is imported to new part then this name will be used to
                    write the output. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void SetOutputFile
        (
            const char * filename /** filename */ 
        );
        /**Returns  the ImportToTeamcenter command - if set to true then the assembly will be imported into Teamcenter 
         <br>  Created in NX7.0.0.  <br>  
         <br> License requirements : None */
        public: bool ImportToTeamcenter
        (
        );
        /**Sets  the ImportToTeamcenter command - if set to true then the assembly will be imported into Teamcenter 
         <br>  Created in NX7.0.0.  <br>  
         <br> License requirements : None */
        public: void SetImportToTeamcenter
        (
            bool importToTeamcenter /** importtoteamcenter */ 
        );
        /**Returns  the settings file - definition file for default options 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXString SettingsFile
        (
        );
        /**Sets  the settings file - definition file for default options 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSettingsFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the settings file - definition file for default options 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void SetSettingsFile
        (
            const char * filename /** filename */ 
        );
        /**Returns  the objectTypes - this is subcomponent being used to set object types filters. This
                    will be used to filter objects based on the types 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::ObjectTypeSelector * ObjectTypes
        (
        );
        /**Returns  the sew surfaces - if set to true surfaces will be sewed automatically 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: bool SewSurfaces
        (
        );
        /**Sets  the sew surfaces - if set to true surfaces will be sewed automatically 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSewSurfaces
        (
            bool sewSurfaces /** sewsurfaces */ 
        );
        /**Returns  the simplify geometry - if set to true geometry will be simplified automatically 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: bool SimplifyGeometry
        (
        );
        /**Sets  the simplify geometry - if set to true geometry will be simplified automatically 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSimplifyGeometry
        (
            bool simplifyGeometry /** simplifygeometry */ 
        );
        /**Returns  the optimize - if set to true Optimizes geometry 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: bool Optimize
        (
        );
        /**Sets  the optimize - if set to true Optimizes geometry 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetOptimize
        (
            bool optimize /** optimize */ 
        );
        /**Returns  the Smooth B-Surfaces - if set to true smooth B-Surfaces 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: bool SmoothBSurfaces
        (
        );
        /**Sets  the Smooth B-Surfaces - if set to true smooth B-Surfaces 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSmoothBSurfaces
        (
            bool smoothBSurfaces /** smoothbsurfaces */ 
        );
        /**Returns  the flatten assembly - if set to true then assembly structure will not be retained 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: bool FlattenAssembly
        (
        );
        /**Sets  the flatten assembly - if set to true then assembly structure will not be retained 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void SetFlattenAssembly
        (
            bool flattenAssembly /** flattenassembly */ 
        );
        /**Returns  the layer default for level 0
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: int LayerDefault
        (
        );
        /**Sets  the layer default for level 0
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetLayerDefault
        (
            int layerDefault /** layerdefault */ 
        );
        /**Returns  the file open flag - set this to false if doing file import
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: bool FileOpenFlag
        (
        );
        /**Sets  the file open flag - set this to false if doing file import
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFileOpenFlag
        (
            bool doingFileOpen /** doingfileopen */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
