#ifndef NXOpen_GEOMETRICUTILITIES_FTMTRANSFORMPOINTSBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_FTMTRANSFORMPOINTSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_FtmTransformPointsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_FtmTransformPointsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class FtmTransformPointsBuilder;
    }
    class Builder;
    class Point;
    namespace GeometricUtilities
    {
        class _FtmTransformPointsBuilderBuilder;
        class FtmTransformPointsBuilderImpl;
        /**
            Represents a @link NXOpen::GeometricUtilities::FtmTransformPointsBuilder NXOpen::GeometricUtilities::FtmTransformPointsBuilder@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::GeometricUtilities::OmnicadManager::CreateFtmTransformPointsBuilder  NXOpen::GeometricUtilities::OmnicadManager::CreateFtmTransformPointsBuilder @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  FtmTransformPointsBuilder : public NXOpen::Builder
        {
            private: FtmTransformPointsBuilderImpl * m_ftmtransformpointsbuilder_impl;
            private: friend class  _FtmTransformPointsBuilderBuilder;
            protected: FtmTransformPointsBuilder();
            public: ~FtmTransformPointsBuilder();
            /**Returns  the start point that defines the starting point constraint on the product shape 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * TransformStartPoint
            (
            );
            /**Sets  the start point that defines the starting point constraint on the product shape 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTransformStartPoint
            (
                NXOpen::Point * transformStartPoint /** transformstartpoint */ 
            );
            /**Returns  the end point that defines the end or target point constraint on the product shape 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * TransformEndPoint
            (
            );
            /**Sets  the end point that defines the end or target point constraint on the product shape 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTransformEndPoint
            (
                NXOpen::Point * transformEndPoint /** transformendpoint */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
