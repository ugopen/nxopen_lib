#ifndef NXOpen_MOTION_CONTROLOUTPUTBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_CONTROLOUTPUTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_ControlOutputBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion_ControlOutputBuilder.hxx>
#include <NXOpen/Motion_LinkAttachmentData.hxx>
#include <NXOpen/Motion_MotionBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class ControlOutputBuilder;
    }
    namespace Motion
    {
        class LinkAttachmentData;
    }
    namespace Motion
    {
        class MotionBuilder;
    }
    namespace Motion
    {
        class SelectControlPort;
    }
    namespace Motion
    {
        class SelectJoint;
    }
    namespace Motion
    {
        class _ControlOutputBuilderBuilder;
        class ControlOutputBuilderImpl;
        /** Represents a @link Motion::ControlOutput Motion::ControlOutput@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Motion::ControlOutputCollection::CreateControlOutputBuilder  NXOpen::Motion::ControlOutputCollection::CreateControlOutputBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Direction </td> <td> 
         
        Z </td> </tr> 

        <tr><td> 
         
        OutputType </td> <td> 
         
        Link </td> </tr> 

        <tr><td> 
         
        Variable </td> <td> 
         
        Force </td> </tr> 

        </table>  

         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  ControlOutputBuilder : public NXOpen::Motion::MotionBuilder
        {
            /** Control Output type */
            public: enum ControlOutputType
            {
                ControlOutputTypeLink/** Control Output Type Link. Requires an action link attachment. Can have a base link attachment. */,
                ControlOutputTypeJointOrConstraint/** Control Output Type Joint or Constraint. Requires a Joint or Point on Curve Constraint as input. */
            };

            /** Output Variable type */
            public: enum VariableType
            {
                VariableTypeForce/** Output Variable type Force */,
                VariableTypeTorque/** Output Variable type Torque. */,
                VariableTypeActionTorque/** Output Variable type Action Torque. Valid only in control output has universal joint as input.*/,
                VariableTypeBaseTorque/** Output Variable type Base Torque. Valid only in control output has universal joint as input.*/
            };

            /** Output Variable Direction */
            public: enum DirectionType
            {
                DirectionTypeX/** Output Variable Direction X*/,
                DirectionTypeY/** Output Variable Direction Y*/,
                DirectionTypeZ/** Output Variable Direction Z*/
            };

            private: ControlOutputBuilderImpl * m_controloutputbuilder_impl;
            private: friend class  _ControlOutputBuilderBuilder;
            protected: ControlOutputBuilder();
            public: ~ControlOutputBuilder();
            /**Returns  the Control Output type. Default Control Output Type is Link. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::ControlOutputBuilder::ControlOutputType OutputType
            (
            );
            /**Sets  the Control Output type. Default Control Output Type is Link. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetOutputType
            (
                NXOpen::Motion::ControlOutputBuilder::ControlOutputType outputType /** outputtype */ 
            );
            /**Returns  the action link attachment. Required in type of Control Output is Link.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::LinkAttachmentData * ActionLinkAttachment
            (
            );
            /**Returns  the base link attachment. Used if the type of Control Output is Link. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::LinkAttachmentData * BaseLinkAttachment
            (
            );
            /**Returns  the joint selection. Required if the type of Control Output is Joint/Constraint. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectJoint * JointSelection
            (
            );
            /**Returns  the control Output Variable type. Default Control Output Variable Type is Force. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::ControlOutputBuilder::VariableType Variable
            (
            );
            /**Sets  the control Output Variable type. Default Control Output Variable Type is Force. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetVariable
            (
                NXOpen::Motion::ControlOutputBuilder::VariableType variable /** variable */ 
            );
            /**Returns  the control Output Variable direction. Default Control Output Variable Direction is Z direction.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::ControlOutputBuilder::DirectionType Direction
            (
            );
            /**Sets  the control Output Variable direction. Default Control Output Variable Direction is Z direction.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDirection
            (
                NXOpen::Motion::ControlOutputBuilder::DirectionType direction /** direction */ 
            );
            /**Returns  the control output port
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectControlPort * PortSelection
            (
            );
            /**Returns  the name of the control output element. Must be unique across all motion elements. An unique name is set by default.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString Name
            (
            );
            /**Sets  the name of the control output element. Must be unique across all motion elements. An unique name is set by default.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name of the control output element. Must be unique across all motion elements. An unique name is set by default.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
