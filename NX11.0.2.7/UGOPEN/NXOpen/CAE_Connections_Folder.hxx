#ifndef NXOpen_CAE_CONNECTIONS_FOLDER_HXX_INCLUDED
#define NXOpen_CAE_CONNECTIONS_FOLDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Connections_Folder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Connections_Folder.hxx>
#include <NXOpen/CAE_Connections_IConnection.hxx>
#include <NXOpen/CAE_Connections_SpotWeld.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Connections
        {
            class Folder;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class IConnection;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class IConnectionMod;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class SpotWeld;
        }
    }
    class NXObject;
    class Unit;
    namespace CAE
    {
        namespace Connections
        {
            class _FolderBuilder;
            class FolderImpl;
            /**  @brief  The Folder class offers a way to create a hierarchy of connections and sub-folders  

               <br> To obtain an instance of this object use the add_folder creator in a parent folder.  <br> 
             <br>  Created in NX11.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  Folder : public NXOpen::NXObject
            {
                private: FolderImpl * m_folder_impl;
                private: friend class  _FolderBuilder;
                protected: Folder();
                public: ~Folder();
                /** Creates a @link CAE::Connections::Folder CAE::Connections::Folder@endlink  in this folder with the specified name  @return  the created @link CAE::Connections::Folder CAE::Connections::Folder@endlink  
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::Connections::Folder * CreateFolder
                (
                    const NXString & name /**  Name that the created folder should have */
                );
                /** Creates a @link CAE::Connections::Folder CAE::Connections::Folder@endlink  in this folder with the specified name  @return  the created @link CAE::Connections::Folder CAE::Connections::Folder@endlink  
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                NXOpen::CAE::Connections::Folder * CreateFolder
                (
                    const char * name /**  Name that the created folder should have */
                );
                /** Create a @link CAE::Connections::SpotWeld CAE::Connections::SpotWeld@endlink  in this folder with the specified name  @return  the created connection 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::Connections::SpotWeld * CreateSpotWeld
                (
                    const NXString & name /** name of the connection */
                );
                /** Create a @link CAE::Connections::SpotWeld CAE::Connections::SpotWeld@endlink  in this folder with the specified name  @return  the created connection 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                NXOpen::CAE::Connections::SpotWeld * CreateSpotWeld
                (
                    const char * name /** name of the connection */
                );
                /**Returns  the name of the connection folder. Error is raised if setting a name not unique in the containing folder. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString Name
                (
                );
                /**Sets  the name of the connection folder. Error is raised if setting a name not unique in the containing folder. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetName
                (
                    const NXString & name /** name */ 
                );
                /**Sets  the name of the connection folder. Error is raised if setting a name not unique in the containing folder. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                void SetName
                (
                    const char * name /** name */ 
                );
                /** Add a subfolder to this folder. The subfolder is moved if found in other folder. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void AddFolder
                (
                    NXOpen::CAE::Connections::Folder * subfolder /** subfolder */ 
                );
                /** Add a connection to this folder. The connection is removed from previous parent folder. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void MoveConnectionToThisFolder
                (
                    NXOpen::CAE::Connections::IConnectionMod * connection /** connection */ 
                );
                /** Create @link CAE::Connections::SpotWeld CAE::Connections::SpotWeld@endlink  connections in the current @link CAE::Connections::Folder CAE::Connections::Folder@endlink  
                            using connection data imported from a WCD file.   @return  the created connections 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: std::vector<NXOpen::CAE::Connections::SpotWeld *> ImportSpotWeldWcd
                (
                    const NXString & file /** name of the import file */,
                    NXOpen::Unit * inputFileUnit /** the length unit used in the input file */
                );
                /** Create @link CAE::Connections::SpotWeld CAE::Connections::SpotWeld@endlink  connections in the current @link CAE::Connections::Folder CAE::Connections::Folder@endlink  
                            using connection data imported from a WCD file.   @return  the created connections 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                std::vector<NXOpen::CAE::Connections::SpotWeld *> ImportSpotWeldWcd
                (
                    const char * file /** name of the import file */,
                    NXOpen::Unit * inputFileUnit /** the length unit used in the input file */
                );
                /** Create @link CAE::Connections::IConnection CAE::Connections::IConnection@endlink  connections in the current @link CAE::Connections::Folder CAE::Connections::Folder@endlink  
                            using connection data imported from a MCF file.   @return  the created connections 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: std::vector<NXOpen::CAE::Connections::IConnection *> ImportConnectionsFromMcf
                (
                    const NXString & file /** name of the import file */,
                    NXOpen::Unit * inputFileUnit /** the length unit used in the input file */
                );
                /** Create @link CAE::Connections::IConnection CAE::Connections::IConnection@endlink  connections in the current @link CAE::Connections::Folder CAE::Connections::Folder@endlink  
                            using connection data imported from a MCF file.   @return  the created connections 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                std::vector<NXOpen::CAE::Connections::IConnection *> ImportConnectionsFromMcf
                (
                    const char * file /** name of the import file */,
                    NXOpen::Unit * inputFileUnit /** the length unit used in the input file */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
