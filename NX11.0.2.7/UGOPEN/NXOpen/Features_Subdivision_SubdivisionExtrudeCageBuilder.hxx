#ifndef NXOpen_FEATURES_SUBDIVISION_SUBDIVISIONEXTRUDECAGEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SUBDIVISION_SUBDIVISIONEXTRUDECAGEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_Subdivision_SubdivisionExtrudeCageBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_Subdivision_SelectCageObjectData.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionExtrudeCageBuilder.hxx>
#include <NXOpen/GeometricUtilities_TransformerData.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionExtrudeCageBuilder;
        }
    }
    class Builder;
    class Direction;
    class Expression;
    namespace Features
    {
        namespace Subdivision
        {
            class SelectCageObjectData;
        }
    }
    namespace GeometricUtilities
    {
        class TransformerData;
    }
    namespace Features
    {
        namespace Subdivision
        {
            class _SubdivisionExtrudeCageBuilderBuilder;
            class SubdivisionExtrudeCageBuilderImpl;
            /** Represents a @link NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder@endlink  builder.   <br> To create a new instance of this class, use @link NXOpen::Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionExtrudeCageBuilder  NXOpen::Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionExtrudeCageBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            CanRelocateToolToSelection </td> <td> 
             
            true </td> </tr> 

            <tr><td> 
             
            CanReorientToolToSelection </td> <td> 
             
            true </td> </tr> 

            <tr><td> 
             
            NumberOfSegments </td> <td> 
             
            1 </td> </tr> 

            </table>  

             <br>  Created in NX9.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  SubdivisionExtrudeCageBuilder : public NXOpen::Builder
            {
                /** Transformation method types */
                public: enum TransformationMethodType
                {
                    TransformationMethodTypeDragLinear/** Drag extruded topology in linear direction */,
                    TransformationMethodTypeTransform/** Transform extruded topology  */
                };

                /** Represents the extrude direction. */
                public: enum DirectionType
                {
                    DirectionTypeInferred/** inferred */ ,
                    DirectionTypeVector/** vector */ ,
                    DirectionTypePerpendicular/** perpendicular */ 
                };

                /** Type of continuity. */
                public: enum ContinuityType
                {
                    ContinuityTypeSmooth/** Smooth continuity */,
                    ContinuityTypeSharp/** Sharp continuity */
                };

                /** Scaling method */
                public: enum ScalingMethodType
                {
                    ScalingMethodTypeLinear/** Scale in the specified direction */,
                    ScalingMethodTypePlanar/** Scale in the plane normal to specified direction */,
                    ScalingMethodTypeUniform/** Scale uniformly all the directions */
                };

                private: SubdivisionExtrudeCageBuilderImpl * m_subdivisionextrudecagebuilder_impl;
                private: friend class  _SubdivisionExtrudeCageBuilderBuilder;
                protected: SubdivisionExtrudeCageBuilder();
                public: ~SubdivisionExtrudeCageBuilder();
                /**Returns  the selection object. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SelectCageObjectData * SelectionObject
                (
                );
                /**Returns  the direction option 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder::DirectionType DirectionOption
                (
                );
                /**Sets  the direction option 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetDirectionOption
                (
                    NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder::DirectionType directionOption /** directionoption */ 
                );
                /**Returns  the vector for extrude. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * Vector
                (
                );
                /**Sets  the vector for extrude. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetVector
                (
                    NXOpen::Direction * vector /** vector */ 
                );
                /**Returns  the distance. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Distance
                (
                );
                /**Returns  the number of segments. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: int NumberOfSegments
                (
                );
                /**Sets  the number of segments. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetNumberOfSegments
                (
                    int numOfSegments /** numofsegments */ 
                );
                /** Perform extrude operation. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void Extrude
                (
                );
                /**Returns  the continuity. The continuity is used to specify creases in the limit surface corresponding to the outer
                                edges of the faces or boundary edges specified by @link NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder::SelectionObject NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder::SelectionObject@endlink . 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder::ContinuityType Continuity
                (
                );
                /**Sets  the continuity. The continuity is used to specify creases in the limit surface corresponding to the outer
                                edges of the faces or boundary edges specified by @link NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder::SelectionObject NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder::SelectionObject@endlink . 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetContinuity
                (
                    NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder::ContinuityType continuity /** continuity */ 
                );
                /**Returns  the transformation method. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder::TransformationMethodType TransformationMethod
                (
                );
                /**Sets  the transformation method. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetTransformationMethod
                (
                    NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder::TransformationMethodType method /** method */ 
                );
                /**Returns  the transformation tool. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::GeometricUtilities::TransformerData * Transformer
                (
                );
                /**Returns  the flag indicating if transformer tool can be moved without transforming the selected cage topology. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CanMoveToolOnly
                (
                );
                /**Sets  the flag indicating if transformer tool can be moved without transforming the selected cage topology. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetCanMoveToolOnly
                (
                    bool canMove /** canmove */ 
                );
                /**Returns  the flag indicating if transformer tool can be relocated based on cage topology selection. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CanRelocateToolToSelection
                (
                );
                /**Sets  the flag indicating if transformer tool can be relocated based on cage topology selection. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetCanRelocateToolToSelection
                (
                    bool canRelocate /** canrelocate */ 
                );
                /**Returns  the flag indicating if transformer tool can be reoriented based on cage topology selection. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CanReorientToolToSelection
                (
                );
                /**Sets  the flag indicating if transformer tool can be reoriented based on cage topology selection. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetCanReorientToolToSelection
                (
                    bool canReorient /** canreorient */ 
                );
                /**Returns  the scaling method. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder::ScalingMethodType ScalingMethod
                (
                );
                /**Sets  the scaling method. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetScalingMethod
                (
                    NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder::ScalingMethodType scalingMethod /** scalingmethod */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
