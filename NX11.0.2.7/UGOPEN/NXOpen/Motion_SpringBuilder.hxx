#ifndef NXOpen_MOTION_SPRINGBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_SPRINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_SpringBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Motion.hxx>
#include <NXOpen/Motion_SpringBuilder.hxx>
#include <NXOpen/Motion_ConnectorBuilder.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class SpringBuilder;
    }
    namespace CAE
    {
        class Function;
    }
    class Expression;
    namespace Motion
    {
        class ConnectorBuilder;
    }
    namespace Motion
    {
        class _SpringBuilderBuilder;
        class SpringBuilderImpl;
        /**
            Represents a SpringBuilder
             <br> To create a new instance of this class, use @link NXOpen::Motion::SpringCollection::CreateSpringBuilder  NXOpen::Motion::SpringCollection::CreateSpringBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        FreeLength (deprecated) </td> <td> 
         
        0.0 </td> </tr> 

        <tr><td> 
         
        InitialLength (deprecated) </td> <td> 
         
        0.0 </td> </tr> 

        <tr><td> 
         
        Stiffness (deprecated) </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        StiffnessType </td> <td> 
         
        Constant </td> </tr> 

        </table>  

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  SpringBuilder : public NXOpen::Motion::ConnectorBuilder
        {
            private: SpringBuilderImpl * m_springbuilder_impl;
            private: friend class  _SpringBuilderBuilder;
            protected: SpringBuilder();
            public: ~SpringBuilder();
            /**Returns  the stiffness type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ConnectorCoefficientTypes StiffnessType
            (
            );
            /**Sets  the stiffness type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetStiffnessType
            (
                NXOpen::Motion::ConnectorCoefficientTypes stiffnessType /** stiffnesstype */ 
            );
            /**Returns  the stiffness. Only valid if @link Motion::ConnectorCoefficientTypesConstant Motion::ConnectorCoefficientTypesConstant@endlink  is set 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::SpringBuilder::Stiffness Motion::SpringBuilder::Stiffness@endlink  and @link Motion::SpringBuilder::TorsionalStiffnessExpression Motion::SpringBuilder::TorsionalStiffnessExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::SpringBuilder::Stiffness and Motion::SpringBuilder::TorsionalStiffnessExpression to query or edit it.") double Stiffness
            (
            );
            /**Sets  the stiffness. Only valid if @link Motion::ConnectorCoefficientTypesConstant Motion::ConnectorCoefficientTypesConstant@endlink  is set 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::SpringBuilder::Stiffness Motion::SpringBuilder::Stiffness@endlink  and @link Motion::SpringBuilder::TorsionalStiffnessExpression Motion::SpringBuilder::TorsionalStiffnessExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::SpringBuilder::Stiffness and Motion::SpringBuilder::TorsionalStiffnessExpression to query or edit it.") void SetStiffness
            (
                double stiffness /** stiffness */ 
            );
            /**Returns  the function tag. Only valid if @link Motion::ConnectorCoefficientTypesSpline Motion::ConnectorCoefficientTypesSpline@endlink  is set 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::Function * StiffnessFunction
            (
            );
            /**Sets  the function tag. Only valid if @link Motion::ConnectorCoefficientTypesSpline Motion::ConnectorCoefficientTypesSpline@endlink  is set 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetStiffnessFunction
            (
                NXOpen::CAE::Function * function /** function */ 
            );
            /**Returns  the free length 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::SpringBuilder::FreeLengthExpression Motion::SpringBuilder::FreeLengthExpression@endlink  or @link Motion::SpringBuilder::FreeLengthExpression Motion::SpringBuilder::FreeLengthExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::SpringBuilder::FreeLengthExpression or Motion::SpringBuilder::FreeLengthExpression to query or edit it.") double FreeLength
            (
            );
            /**Sets  the free length 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::SpringBuilder::FreeLengthExpression Motion::SpringBuilder::FreeLengthExpression@endlink  or @link Motion::SpringBuilder::FreeLengthExpression Motion::SpringBuilder::FreeLengthExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::SpringBuilder::FreeLengthExpression or Motion::SpringBuilder::FreeLengthExpression to query or edit it.") void SetFreeLength
            (
                double freeLength /** freelength */ 
            );
            /**Returns  the initial length used for spring attached to slide joint
             <br>  @deprecated Deprecated in NX8.0.0.  Obtian the expression using @link Motion::SpringBuilder::InitialLengthExpression Motion::SpringBuilder::InitialLengthExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtian the expression using Motion::SpringBuilder::InitialLengthExpression to query or edit it.") double InitialLength
            (
            );
            /**Sets  the initial length used for spring attached to slide joint
             <br>  @deprecated Deprecated in NX8.0.0.  Obtian the expression using @link Motion::SpringBuilder::InitialLengthExpression Motion::SpringBuilder::InitialLengthExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtian the expression using Motion::SpringBuilder::InitialLengthExpression to query or edit it.") void SetInitialLength
            (
                double initialLength /** initiallength */ 
            );
            /**Returns  the name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the stiffness expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StiffnessExpression
            (
            );
            /**Returns  the torsional stiffness expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TorsionalStiffnessExpression
            (
            );
            /**Returns  the free length expression 
             <br>  @deprecated Deprecated in NX11.0.0.  Obtian the expression using @link Motion::SpringBuilder::PreloadedLengthExpression Motion::SpringBuilder::PreloadedLengthExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX11.0.0.  Obtian the expression using Motion::SpringBuilder::PreloadedLengthExpression to query or edit it.") NXOpen::Expression * FreeLengthExpression
            (
            );
            /**Returns  the free angle expression 
             <br>  @deprecated Deprecated in NX11.0.0.  Obtian the expression using @link Motion::SpringBuilder::PreloadedAngleExpression Motion::SpringBuilder::PreloadedAngleExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX11.0.0.  Obtian the expression using Motion::SpringBuilder::PreloadedAngleExpression to query or edit it.") NXOpen::Expression * FreeAngleExpression
            (
            );
            /**Returns  the initial length expression for spring which attachs to slide joint
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * InitialLengthExpression
            (
            );
            /**Returns  the preload expression 
             <br>  @deprecated Deprecated in NX11.0.0.  Obtian the expression using @link Motion::SpringBuilder::PreloadForceExpression Motion::SpringBuilder::PreloadForceExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX11.0.0.  Obtian the expression using Motion::SpringBuilder::PreloadForceExpression to query or edit it.") NXOpen::Expression * PreloadExpression
            (
            );
            /**Returns  the preload expression 
             <br>  @deprecated Deprecated in NX11.0.0.  Obtian the expression using @link Motion::SpringBuilder::PreloadMomentExpression Motion::SpringBuilder::PreloadMomentExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX11.0.0.  Obtian the expression using Motion::SpringBuilder::PreloadMomentExpression to query or edit it.") NXOpen::Expression * PreloadAngleExpression
            (
            );
            /**Returns  the create damper toggle 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool CreateDamper
            (
            );
            /**Sets  the create damper toggle 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetCreateDamper
            (
                bool createDamper /** createdamper */ 
            );
            /**Returns  the coefficient type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ConnectorCoefficientTypes CoefficientType
            (
            );
            /**Sets  the coefficient type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCoefficientType
            (
                NXOpen::Motion::ConnectorCoefficientTypes coefficientType /** coefficienttype */ 
            );
            /**Returns  the translational coefficient expression 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * CoefficientExpression
            (
            );
            /**Returns  the torsional coefficient expression 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TorsionalCoefficientExpression
            (
            );
            /**Returns  the function tag. Only valid if @link Motion::ConnectorCoefficientTypesSpline Motion::ConnectorCoefficientTypesSpline@endlink  is set 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::Function * CoefficientFunction
            (
            );
            /**Sets  the function tag. Only valid if @link Motion::ConnectorCoefficientTypesSpline Motion::ConnectorCoefficientTypesSpline@endlink  is set 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCoefficientFunction
            (
                NXOpen::CAE::Function * function /** function */ 
            );
            /**Returns  the damper dname 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString DamperName
            (
            );
            /**Sets  the damper dname 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDamperName
            (
                const NXString & damperName /** dampername */ 
            );
            /**Sets  the damper dname 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetDamperName
            (
                const char * damperName /** dampername */ 
            );
            /**Returns  the length flag, if this flag is set to true, it will not update the preloaded length, if this flag 
                        is set to false, it will update the preloaded length according to the installed length
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool LengthFlag
            (
            );
            /**Sets  the length flag, if this flag is set to true, it will not update the preloaded length, if this flag 
                        is set to false, it will update the preloaded length according to the installed length
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetLengthFlag
            (
                bool lengthFlag /** lengthflag */ 
            );
            /**Returns  the preloaded length expression 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PreloadedLengthExpression
            (
            );
            /**Returns  the preloaded angle expression 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PreloadedAngleExpression
            (
            );
            /**Returns  the preload force expression 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PreloadForceExpression
            (
            );
            /**Returns  the preload moment expression 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PreloadMomentExpression
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
