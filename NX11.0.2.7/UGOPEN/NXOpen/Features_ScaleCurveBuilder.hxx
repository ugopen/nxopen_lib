#ifndef NXOpen_FEATURES_SCALECURVEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SCALECURVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ScaleCurveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_ScaleCurveBuilder.hxx>
#include <NXOpen/GeometricUtilities_CurveSettings.hxx>
#include <NXOpen/Features_ServiceOrientedFeatureCurveBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class ScaleCurveBuilder;
    }
    class CoordinateSystem;
    class Expression;
    namespace Features
    {
        class ServiceOrientedFeatureCurveBuilder;
    }
    namespace GeometricUtilities
    {
        class CurveSettings;
    }
    class Point;
    class Section;
    namespace Features
    {
        class _ScaleCurveBuilderBuilder;
        class ScaleCurveBuilderImpl;
        /**
        Represents a @link Features::ScaleCurveBuilder Features::ScaleCurveBuilder@endlink  builder
         <br> To create a new instance of this class, use @link NXOpen::Features::CurveFeatureCollection::CreateScaleCurveBuilder  NXOpen::Features::CurveFeatureCollection::CreateScaleCurveBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        CurveSettings.CurveFitData.CurveJoinMethod </td> <td> 
         
        No </td> </tr> 

        <tr><td> 
         
        CurveSettings.CurveFitData.Degree </td> <td> 
         
        7 </td> </tr> 

        <tr><td> 
         
        CurveSettings.CurveFitData.FitMethod </td> <td> 
         
        DegreeAndSegments </td> </tr> 

        <tr><td> 
         
        CurveSettings.CurveFitData.IsAdvancedFit </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        CurveSettings.CurveFitData.IsAlignShape </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        CurveSettings.CurveFitData.MaximumDegree </td> <td> 
         
        7 </td> </tr> 

        <tr><td> 
         
        CurveSettings.CurveFitData.MaximumSegments </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        CurveSettings.CurveFitData.MinimumDegree </td> <td> 
         
        5 </td> </tr> 

        <tr><td> 
         
        CurveSettings.CurveFitData.Segments </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        ScaleAlongXDirection.Value </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        ScaleAlongYDirection.Value </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        ScaleAlongZDirection.Value </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        ScaleType </td> <td> 
         
        Uniform </td> </tr> 

        <tr><td> 
         
        UniformScaleFactor.Value </td> <td> 
         
        1 </td> </tr> 

        </table>  

         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  ScaleCurveBuilder : public NXOpen::Features::ServiceOrientedFeatureCurveBuilder
        {
            /** Scale type */
            public: enum ScaleCurveType
            {
                ScaleCurveTypeUniform/** Uniform scaling */,
                ScaleCurveTypeNonUniform/** NonUniform scaling */
            };

            private: ScaleCurveBuilderImpl * m_scalecurvebuilder_impl;
            private: friend class  _ScaleCurveBuilderBuilder;
            protected: ScaleCurveBuilder();
            public: ~ScaleCurveBuilder();
            /**Returns  the input cuvres,point to scale 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * ObjectsToScale
            (
            );
            /**Returns  the scale type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ScaleCurveBuilder::ScaleCurveType ScaleType
            (
            );
            /**Sets  the scale type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetScaleType
            (
                NXOpen::Features::ScaleCurveBuilder::ScaleCurveType scaleType /** scaletype */ 
            );
            /**Returns  the reference point 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * ReferencePoint
            (
            );
            /**Sets  the reference point 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReferencePoint
            (
                NXOpen::Point * referencePoint /** referencepoint */ 
            );
            /**Returns  the reference csys 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * ReferenceCSYS
            (
            );
            /**Sets  the reference csys 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReferenceCSYS
            (
                NXOpen::CoordinateSystem * referenceCSYS /** referencecsys */ 
            );
            /**Returns  the uniform scale factor 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * UniformScaleFactor
            (
            );
            /**Returns  the scale along xdirection 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ScaleAlongXDirection
            (
            );
            /**Returns  the scale along ydirection 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ScaleAlongYDirection
            (
            );
            /**Returns  the scale along zdirection 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ScaleAlongZDirection
            (
            );
            /**Returns  the curve setting data 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::CurveSettings * CurveSettings
            (
            );
            /**Sets  the curve setting data 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCurveSettings
            (
                NXOpen::GeometricUtilities::CurveSettings * curveSettingData /** curvesettingdata */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
