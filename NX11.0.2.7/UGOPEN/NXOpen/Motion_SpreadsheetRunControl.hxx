#ifndef NXOpen_MOTION_SPREADSHEETRUNCONTROL_HXX_INCLUDED
#define NXOpen_MOTION_SPREADSHEETRUNCONTROL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_SpreadsheetRunControl.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion.hxx>
#include <NXOpen/Motion_SpreadsheetRunControl.hxx>
#include <NXOpen/Motion_PostControl.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class SpreadsheetRunControl;
    }
    namespace Motion
    {
        class PostControl;
    }
    namespace Motion
    {
        class _SpreadsheetRunControlBuilder;
        class SpreadsheetRunControlImpl;
        /** Represents the @link NXOpen::Motion::SpreadsheetRunControl NXOpen::Motion::SpreadsheetRunControl@endlink   <br> An instance of this class can not be obtained  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  SpreadsheetRunControl : public NXOpen::Motion::PostControl
        {
            private: SpreadsheetRunControlImpl * m_spreadsheetruncontrol_impl;
            private: friend class  _SpreadsheetRunControlBuilder;
            protected: SpreadsheetRunControl();
            public: ~SpreadsheetRunControl();
            /** SpreadsheetRun finish 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void Finish
            (
            );
            /** SpreadsheetRun step to special step 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void StepTo
            (
                int step /** This is the step number in spreadsheet. If the step number = -1, the system will use the current position in spreadsheet.*/
            );
            /** SpreadsheetRun solve function 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void Solve
            (
            );
            /** SpreadsheetRun step forward 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void StepForward
            (
            );
            /** SpreadsheetRun step backward 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void StepBackward
            (
            );
            /** SpreadsheetRun to design position 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void StepToDesignPosition
            (
            );
            /** SpreadsheetRun to assembly position 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void StepToAssemblyPosition
            (
            );
            /** SpreadsheetRun stop 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void Stop
            (
            );
            /** SpreadsheetRun update from spreadsheet 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void UpdateFromSpreadsheet
            (
            );
            /** Quit spreadsheet 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void QuitSpreadsheet
            (
            );
            /**Returns  the spreadsheet run delay 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: int Delay
            (
            );
            /**Sets  the spreadsheet run delay 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDelay
            (
                int delay /** delay */ 
            );
            /**Returns  the spreadsheet run play mode 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: int PlayMode
            (
            );
            /**Sets  the spreadsheet run play mode 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetPlayMode
            (
                int mode /** mode */ 
            );
            /**Returns  the active view 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::ActiveView ActiveView
            (
            );
            /**Sets  the active view 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetActiveView
            (
                NXOpen::Motion::ActiveView activeView /** activeview */ 
            );
            /**Returns  the spreadsheet run joint limits setting 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool JointsLimits
            (
            );
            /**Sets  the spreadsheet run joint limits setting 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetJointsLimits
            (
                bool jointLimits /** jointlimits */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
