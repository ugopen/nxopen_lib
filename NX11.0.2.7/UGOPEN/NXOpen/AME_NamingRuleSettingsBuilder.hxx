#ifndef NXOpen_AME_NAMINGRULESETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_AME_NAMINGRULESETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_NamingRuleSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_NamingRuleListBuilder.hxx>
#include <NXOpen/AME_NamingRuleSettingsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class NamingRuleSettingsBuilder;
    }
    namespace AME
    {
        class NamingRuleListBuilder;
    }
    class Builder;
    namespace AME
    {
        class _NamingRuleSettingsBuilderBuilder;
        class NamingRuleSettingsBuilderImpl;
        /**
                JA class for dialog for naming rule settings
             <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateNamingRuleSettingsBuilder  NXOpen::AME::AMEManager::CreateNamingRuleSettingsBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  NamingRuleSettingsBuilder : public NXOpen::Builder
        {
            /** different types of Delimiter sources */
            public: enum Sources
            {
                SourcesPeriod/** period */ ,
                SourcesAspectPrefix/** aspect prefix */ ,
                SourcesNothing/** nothing */ 
            };

            private: NamingRuleSettingsBuilderImpl * m_namingrulesettingsbuilder_impl;
            private: friend class  _NamingRuleSettingsBuilderBuilder;
            protected: NamingRuleSettingsBuilder();
            public: ~NamingRuleSettingsBuilder();
            /**Returns  the engineering object name builder 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::NamingRuleListBuilder * EngObjectName
            (
            );
            /**Returns  the advanced aspect naming builder 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::NamingRuleListBuilder * AdvancedAspectNaming
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
