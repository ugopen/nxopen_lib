#ifndef NXOpen_CAE_PRETESTEXCITERCONFIG_HXX_INCLUDED
#define NXOpen_CAE_PRETESTEXCITERCONFIG_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PreTestExciterConfig.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_CorrelSolution.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PreTestExciterConfig;
    }
    class NXObject;
    namespace CAE
    {
        class _PreTestExciterConfigBuilder;
        class PreTestExciterConfigImpl;
        /** Represent a exciter selection configuration  <br> To create or edit an instance of this class, use @link NXOpen::CAE::PreTestExciterConfigBuilder  NXOpen::CAE::PreTestExciterConfigBuilder @endlink  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PreTestExciterConfig : public NXOpen::NXObject
        {
            private: PreTestExciterConfigImpl * m_pretestexciterconfig_impl;
            private: friend class  _PreTestExciterConfigBuilder;
            protected: PreTestExciterConfig();
            public: ~PreTestExciterConfig();
            /**Returns  the exciter selection configuration name 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::CAE::PreTestExciterConfig::ConfigName NXOpen::CAE::PreTestExciterConfig::ConfigName@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::CAE::PreTestExciterConfig::ConfigName instead.") NXString Name
            (
            );
            /**Sets  the exciter selection configuration name 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::CAE::PreTestExciterConfig::ConfigName NXOpen::CAE::PreTestExciterConfig::ConfigName@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::CAE::PreTestExciterConfig::ConfigName instead.") void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the exciter selection configuration name 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::CAE::PreTestExciterConfig::ConfigName NXOpen::CAE::PreTestExciterConfig::ConfigName@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the exciter selection configuration name 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString ConfigName
            (
            );
            /**Sets  the exciter selection configuration name 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetConfigName
            (
                const NXString & title /** title */ 
            );
            /**Sets  the exciter selection configuration name 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            void SetConfigName
            (
                const char * title /** title */ 
            );
            /** Export exciter configuration to CSV file 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void ExportCsvFile
            (
                const NXString & filename /** CSV file name. */
            );
            /** Export exciter configuration to CSV file 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            void ExportCsvFile
            (
                const char * filename /** CSV file name. */
            );
            /** Export exciter configuration shape metrics to CSV file 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void ExportShapeMetricsCsvFile
            (
                NXOpen::CAE::CorrelShapemetrictype metricCode /** shape metric code */,
                const NXString & filename /** CSV file name. */
            );
            /** Export exciter configuration shape metrics to CSV file 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            void ExportShapeMetricsCsvFile
            (
                NXOpen::CAE::CorrelShapemetrictype metricCode /** shape metric code */,
                const char * filename /** CSV file name. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
