#ifndef NXOpen_FEATURES_PARTGEOMETRYCOPYSELECTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_PARTGEOMETRYCOPYSELECTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_PartGeometryCopySelectBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_PartGeometryCopySelectBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class PartGeometryCopySelectBuilder;
    }
    class Expression;
    namespace Features
    {
        class SelectFeature;
    }
    class ScCollector;
    class Section;
    class SelectDisplayableObject;
    class SelectFace;
    class SelectSketch;
    class SelectTaggedObject;
    namespace Features
    {
        class _PartGeometryCopySelectBuilderBuilder;
        class PartGeometryCopySelectBuilderImpl;
        /** Represents a @link NXOpen::Features::PartGeometryCopySelectBuilder NXOpen::Features::PartGeometryCopySelectBuilder@endlink  builder 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  PartGeometryCopySelectBuilder : public NXOpen::TaggedObject
        {
            private: PartGeometryCopySelectBuilderImpl * m_partgeometrycopyselectbuilder_impl;
            private: friend class  _PartGeometryCopySelectBuilderBuilder;
            protected: PartGeometryCopySelectBuilder();
            public: ~PartGeometryCopySelectBuilder();
            /**Returns  the type of current object to be copied 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: int CurrentObjectType
            (
            );
            /**Sets  the type of current object to be copied 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetCurrentObjectType
            (
                int currentObjectType /** currentobjecttype */ 
            );
            /**Returns  the body collector 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * BodyCollector
            (
            );
            /**Returns  the body group 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObject * BodyObject
            (
            );
            /**Returns  the curve feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::SelectFeature * CurveFeature
            (
            );
            /**Returns  the sketch 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectSketch * Sketch
            (
            );
            /**Returns  the datum 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObject * Datum
            (
            );
            /**Returns  the point 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObject * Point
            (
            );
            /**Returns  the composite curve 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * CompositeCurve
            (
            );
            /**Returns  the composite face 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * CompositeFace
            (
            );
            /**Returns  the expression 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Expression
            (
            );
            /**Sets  the expression 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetExpression
            (
                NXOpen::Expression * expression /** expression */ 
            );
            /**Returns  the pmi 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObject * Pmi
            (
            );
            /**Returns  the curve 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObject * Curve
            (
            );
            /**Returns  the face 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectFace * Face
            (
            );
            /**Returns  the routing object 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObject * RoutingObject
            (
            );
            /**Returns  the reverse direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseDirection
            (
            );
            /**Sets  the reverse direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetReverseDirection
            (
                bool reverseDirection /** reversedirection */ 
            );
            /**Returns  the object name of selected item 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ObjectName
            (
            );
            /**Sets  the object name of selected item 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetObjectName
            (
                const NXString & objectName /** objectname */ 
            );
            /**Sets  the object name of selected item 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            void SetObjectName
            (
                const char * objectName /** objectname */ 
            );
            /**Returns  the object type of selected item 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ObjectType
            (
            );
            /**Sets  the object type of selected item 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetObjectType
            (
                const NXString & objectType /** objecttype */ 
            );
            /**Sets  the object type of selected item 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            void SetObjectType
            (
                const char * objectType /** objecttype */ 
            );
            /**Returns  the object description of selected item 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ObjectDescription
            (
            );
            /**Sets  the object description of selected item 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetObjectDescription
            (
                const NXString & objectDescription /** objectdescription */ 
            );
            /**Sets  the object description of selected item 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            void SetObjectDescription
            (
                const char * objectDescription /** objectdescription */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
