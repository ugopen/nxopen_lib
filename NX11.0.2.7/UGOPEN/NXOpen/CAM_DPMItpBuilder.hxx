#ifndef NXOpen_CAM_DPMITPBUILDER_HXX_INCLUDED
#define NXOpen_CAM_DPMITPBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_DPMItpBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_ParamBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class DPMItpBuilder;
    }
    namespace CAM
    {
        class CutPatternBuilder;
    }
    namespace CAM
    {
        class DmStreamlineCutStep;
    }
    namespace CAM
    {
        class DmToolPosition;
    }
    namespace CAM
    {
        class DmTrimExtend;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class ParamBuilder;
    }
    namespace CAM
    {
        class StepoverBuilder;
    }
    class SectionList;
    class TaggedObject;
    namespace CAM
    {
        class _DPMItpBuilderBuilder;
        class DPMItpBuilderImpl;
        /** Represents an DPMItp Builder  <br> To create a new instance of this class, use @link NXOpen::CAM::OperationCollection::CreateDpmitpBuilder  NXOpen::CAM::OperationCollection::CreateDpmitpBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  DPMItpBuilder : public NXOpen::CAM::ParamBuilder
        {
            /** Enum of selection method */
            public: enum SelectionMethodOption
            {
                SelectionMethodOptionAutomatic/** automatic  */,
                SelectionMethodOptionSpecify/** specify */,
                SelectionMethodOptionOnPart/** on part */
            };

            /** Enum of tool position */
            public: enum ToolPositionOption
            {
                ToolPositionOptionOn/** On position */,
                ToolPositionOptionTanto/** Tanto position */,
                ToolPositionOptionContact/** Contact position */
            };

            /** Enum of cut type */
            public: enum CutTypeOption
            {
                CutTypeOptionZig/** Zig cut type */,
                CutTypeOptionZigzag/** Zigzag cut type */,
                CutTypeOptionZigzagWithLifts/** Zigzag with lift cut type */,
                CutTypeOptionSpiralHelix/** Spiral/helix cut type */
            };

            /** Enum of step method */
            public: enum StepMethodOption
            {
                StepMethodOptionTolerance/** tolerance */ ,
                StepMethodOptionPoints/** points */ 
            };

            /** Enum of stepover type */
            public: enum StepoverTypeOption
            {
                StepoverTypeOptionNumber/** stepover number */,
                StepoverTypeOptionDistance/** stepover distance */,
                StepoverTypeOptionScallop/** stepover scallop height */
            };

            /** Enum of cross curves creation method */
            public: enum CrossCurvesMethodOption
            {
                CrossCurvesMethodOptionOnPart/** on part  */,
                CrossCurvesMethodOptionNormalToFlow/** normal to flow */
            };

            private: DPMItpBuilderImpl * m_dpmitpbuilder_impl;
            private: friend class  _DPMItpBuilderBuilder;
            protected: DPMItpBuilder();
            public: ~DPMItpBuilder();
            /**Returns  the flow and cross selection method 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::DPMItpBuilder::SelectionMethodOption SelectionMethod
            (
            );
            /**Sets  the flow and cross selection method 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSelectionMethod
            (
                NXOpen::CAM::DPMItpBuilder::SelectionMethodOption selectionMethod /** the selection method value */
            );
            /**Returns  the tool position 
             <br>  @deprecated Deprecated in NX10.0.1.  Use @link NXOpen::CAM::DmToolPosition::ToolPosition NXOpen::CAM::DmToolPosition::ToolPosition @endlink and @link NXOpen::CAM::DmToolPosition::SetToolPosition NXOpen::CAM::DmToolPosition::SetToolPosition @endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public:  NX_DEPRECATED("Deprecated in NX10.0.1.  Use NXOpen::CAM::DmToolPosition::ToolPosition NXOpen::CAM::DmToolPosition::ToolPosition @endlink and @link NXOpen::CAM::DmToolPosition::SetToolPosition NXOpen::CAM::DmToolPosition::SetToolPosition @endlink  instead.") NXOpen::CAM::DPMItpBuilder::ToolPositionOption ToolPosition
            (
            );
            /**Sets  the tool position 
             <br>  @deprecated Deprecated in NX10.0.1.  Use @link NXOpen::CAM::DmToolPosition::ToolPosition NXOpen::CAM::DmToolPosition::ToolPosition @endlink and @link NXOpen::CAM::DmToolPosition::SetToolPosition NXOpen::CAM::DmToolPosition::SetToolPosition @endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public:  NX_DEPRECATED("Deprecated in NX10.0.1.  Use NXOpen::CAM::DmToolPosition::ToolPosition NXOpen::CAM::DmToolPosition::ToolPosition @endlink and @link NXOpen::CAM::DmToolPosition::SetToolPosition NXOpen::CAM::DmToolPosition::SetToolPosition @endlink  instead.") void SetToolPosition
            (
                NXOpen::CAM::DPMItpBuilder::ToolPositionOption toolPosition /** the tool position value */
            );
            /**Returns  the cut type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::DPMItpBuilder::CutTypeOption CutType
            (
            );
            /**Sets  the cut type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCutType
            (
                NXOpen::CAM::DPMItpBuilder::CutTypeOption cutType /** the cut type value */
            );
            /**Returns  the stepover type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::DPMItpBuilder::StepoverTypeOption StepoverType
            (
            );
            /**Sets  the stepover type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStepoverType
            (
                NXOpen::CAM::DPMItpBuilder::StepoverTypeOption stepoverType /** the stepover type value */
            );
            /**Returns  the stepover number 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int StepoverNum
            (
            );
            /**Sets  the stepover number 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStepoverNum
            (
                int stepoverNum /** the stepover number value */
            );
            /**Returns  the stepover distance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: double StepoverDis
            (
            );
            /**Sets  the stepover distance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStepoverDis
            (
                double stepoverDis /** the stepover distance value */
            );
            /**Returns  the stepover scallop height 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: double StepoverScallopHeight
            (
            );
            /**Sets  the stepover scallop height 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStepoverScallopHeight
            (
                double stepoverScallopHeight /** the stepover scallop height value */
            );
            /**Returns  the stepover builder 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::StepoverBuilder * StepoverBuilder
            (
            );
            /**Returns  the cut pattern builder 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CutPatternBuilder * CutPatternBuilder
            (
            );
            /** Get the extend values  @return  the extend values 
             <br>  @deprecated Deprecated in NX10.0.1.  Use @link NXOpen::CAM::DmTrimExtend NXOpen::CAM::DmTrimExtend@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public:  NX_DEPRECATED("Deprecated in NX10.0.1.  Use NXOpen::CAM::DmTrimExtend instead.") std::vector<double> GetExtendValues
            (
            );
            /** Set the extend values 
             <br>  @deprecated Deprecated in NX10.0.1.  Use @link NXOpen::CAM::DmTrimExtend NXOpen::CAM::DmTrimExtend@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public:  NX_DEPRECATED("Deprecated in NX10.0.1.  Use NXOpen::CAM::DmTrimExtend instead.") void SetExtendValues
            (
                const std::vector<double> & values /** the extend value */
            );
            /** Preview drive path 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void MPreview
            (
            );
            /**Returns  the Flow Curve List
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SectionList * FlowCurveList
            (
            );
            /**Returns  the Cross Curve List 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SectionList * CrossCurveList
            (
            );
            /**Returns  the Cut Step
             <br>  @deprecated Deprecated in NX10.0.1.  Use @link NXOpen::CAM::DmStreamlineCutStep::CutStepType NXOpen::CAM::DmStreamlineCutStep::CutStepType @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetCutStepType NXOpen::CAM::DmStreamlineCutStep::SetCutStepType @endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX10.0.1.  Use NXOpen::CAM::DmStreamlineCutStep::CutStepType NXOpen::CAM::DmStreamlineCutStep::CutStepType @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetCutStepType NXOpen::CAM::DmStreamlineCutStep::SetCutStepType @endlink  instead.") NXOpen::CAM::DPMItpBuilder::StepMethodOption StepMethod
            (
            );
            /**Sets  the Cut Step
             <br>  @deprecated Deprecated in NX10.0.1.  Use @link NXOpen::CAM::DmStreamlineCutStep::CutStepType NXOpen::CAM::DmStreamlineCutStep::CutStepType @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetCutStepType NXOpen::CAM::DmStreamlineCutStep::SetCutStepType @endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX10.0.1.  Use NXOpen::CAM::DmStreamlineCutStep::CutStepType NXOpen::CAM::DmStreamlineCutStep::CutStepType @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetCutStepType NXOpen::CAM::DmStreamlineCutStep::SetCutStepType @endlink  instead.") void SetStepMethod
            (
                NXOpen::CAM::DPMItpBuilder::StepMethodOption stepMethod /** the value of Cut Step */
            );
            /**Returns  the First Cut
             <br>  @deprecated Deprecated in NX10.0.1.  Use @link NXOpen::CAM::DmStreamlineCutStep::FirstCut NXOpen::CAM::DmStreamlineCutStep::FirstCut @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetFirstCut NXOpen::CAM::DmStreamlineCutStep::SetFirstCut @endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX10.0.1.  Use NXOpen::CAM::DmStreamlineCutStep::FirstCut NXOpen::CAM::DmStreamlineCutStep::FirstCut @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetFirstCut NXOpen::CAM::DmStreamlineCutStep::SetFirstCut @endlink  instead.") int CutStepFirstCut
            (
            );
            /**Sets  the First Cut
             <br>  @deprecated Deprecated in NX10.0.1.  Use @link NXOpen::CAM::DmStreamlineCutStep::FirstCut NXOpen::CAM::DmStreamlineCutStep::FirstCut @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetFirstCut NXOpen::CAM::DmStreamlineCutStep::SetFirstCut @endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX10.0.1.  Use NXOpen::CAM::DmStreamlineCutStep::FirstCut NXOpen::CAM::DmStreamlineCutStep::FirstCut @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetFirstCut NXOpen::CAM::DmStreamlineCutStep::SetFirstCut @endlink  instead.") void SetCutStepFirstCut
            (
                int firstCut /** the first cut value */
            );
            /**Returns  the  Second Cut
             <br>  @deprecated Deprecated in NX10.0.1.  Use @link NXOpen::CAM::DmStreamlineCutStep::SecondCut NXOpen::CAM::DmStreamlineCutStep::SecondCut @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetSecondCut NXOpen::CAM::DmStreamlineCutStep::SetSecondCut @endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX10.0.1.  Use NXOpen::CAM::DmStreamlineCutStep::SecondCut NXOpen::CAM::DmStreamlineCutStep::SecondCut @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetSecondCut NXOpen::CAM::DmStreamlineCutStep::SetSecondCut @endlink  instead.") int CutStepSecondCut
            (
            );
            /**Sets  the  Second Cut
             <br>  @deprecated Deprecated in NX10.0.1.  Use @link NXOpen::CAM::DmStreamlineCutStep::SecondCut NXOpen::CAM::DmStreamlineCutStep::SecondCut @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetSecondCut NXOpen::CAM::DmStreamlineCutStep::SetSecondCut @endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX10.0.1.  Use NXOpen::CAM::DmStreamlineCutStep::SecondCut NXOpen::CAM::DmStreamlineCutStep::SecondCut @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetSecondCut NXOpen::CAM::DmStreamlineCutStep::SetSecondCut @endlink  instead.") void SetCutStepSecondCut
            (
                int secondCut /** the second cut value */
            );
            /**Returns  the Third Cut
             <br>  @deprecated Deprecated in NX10.0.1.  Use @link NXOpen::CAM::DmStreamlineCutStep::ThirdCut NXOpen::CAM::DmStreamlineCutStep::ThirdCut @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetThirdCut NXOpen::CAM::DmStreamlineCutStep::SetThirdCut @endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX10.0.1.  Use NXOpen::CAM::DmStreamlineCutStep::ThirdCut NXOpen::CAM::DmStreamlineCutStep::ThirdCut @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetThirdCut NXOpen::CAM::DmStreamlineCutStep::SetThirdCut @endlink  instead.") int CutStepThirdCut
            (
            );
            /**Sets  the Third Cut
             <br>  @deprecated Deprecated in NX10.0.1.  Use @link NXOpen::CAM::DmStreamlineCutStep::ThirdCut NXOpen::CAM::DmStreamlineCutStep::ThirdCut @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetThirdCut NXOpen::CAM::DmStreamlineCutStep::SetThirdCut @endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX10.0.1.  Use NXOpen::CAM::DmStreamlineCutStep::ThirdCut NXOpen::CAM::DmStreamlineCutStep::ThirdCut @endlink and @link NXOpen::CAM::DmStreamlineCutStep::SetThirdCut NXOpen::CAM::DmStreamlineCutStep::SetThirdCut @endlink  instead.") void SetCutStepThirdCut
            (
                int thirdCut /** the third cut value */
            );
            /**Returns  the  Cut Step Outol 
             <br>  @deprecated Deprecated in NX10.0.1.  Use @link NXOpen::CAM::DmStreamlineCutStep::StepOutol NXOpen::CAM::DmStreamlineCutStep::StepOutol@endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX10.0.1.  Use NXOpen::CAM::DmStreamlineCutStep::StepOutol instead.") NXOpen::CAM::InheritableDoubleBuilder * StepOuttol
            (
            );
            /**Returns  the  Cut Step Intol 
             <br>  @deprecated Deprecated in NX10.0.1.  Use @link NXOpen::CAM::DmStreamlineCutStep::StepIntol NXOpen::CAM::DmStreamlineCutStep::StepIntol@endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX10.0.1.  Use NXOpen::CAM::DmStreamlineCutStep::StepIntol instead.") NXOpen::CAM::InheritableDoubleBuilder * StepIntol
            (
            );
            /**Returns  the tool position builder 
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DmToolPosition * ToolPositionBuilder
            (
            );
            /**Returns  the trim and extend builder 
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DmTrimExtend * TrimExtendBuilder
            (
            );
            /**Returns  the cut step builder 
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DmStreamlineCutStep * CutStepBuilder
            (
            );
            /**Returns  the flow curve count 
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int FlowCurveCount
            (
            );
            /**Sets  the flow curve count 
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFlowCurveCount
            (
                int flowCurveCount /** the flow curve count */
            );
            /**Returns  the cross curve count 
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int CrossCurveCount
            (
            );
            /**Sets  the cross curve count 
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCrossCurveCount
            (
                int crossCurveCount /** the cross curve count */
            );
            /**Returns  the use of part normal 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: bool UsePartNormal
            (
            );
            /**Sets  the use of part normal 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetUsePartNormal
            (
                bool usePartNormal /** the use of part normal */
            );
            /**Returns  the use of preview 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: bool PreviewEnabled
            (
            );
            /**Sets  the use of preview 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPreviewEnabled
            (
                bool previewEnabled /** the use of preview enabled */
            );
            /**Returns  the cross curves selection method 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::DPMItpBuilder::CrossCurvesMethodOption CrossCurvesMethod
            (
            );
            /**Sets  the cross curves selection method 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCrossCurvesMethod
            (
                NXOpen::CAM::DPMItpBuilder::CrossCurvesMethodOption crossCurvesMethod /** the cross curves method value */
            );
            /**Returns  the cross curves normal to flow count 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int CrossCurveNormalToFlowCount
            (
            );
            /**Sets  the cross curves normal to flow count 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCrossCurveNormalToFlowCount
            (
                int crossCurveNormalToFlowCount /** the cross curve normal to flow count */
            );
            /** Returns the flow curve used in generation of cross curve normal to flow. 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void GetCrossCurveNormalToFlowCurve
            (
                std::vector<NXOpen::TaggedObject *> & curves /** Array of curves */
            );
            /**Sets the flow curve used in generation of cross curves normal to flow. 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCrossCurveNormalToFlowCurve
            (
                const std::vector<NXOpen::TaggedObject *> & curves /** Array of curves */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
