#ifndef NXOpen_DISPLAY_IRAYPLUSSTUDIOEDITORBUILDER_HXX_INCLUDED
#define NXOpen_DISPLAY_IRAYPLUSSTUDIOEDITORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_IRayPlusStudioEditorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DateBuilder.hxx>
#include <NXOpen/Display_IRayPlusStudioEditorBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class IRayPlusStudioEditorBuilder;
    }
    class Builder;
    class DateBuilder;
    namespace Display
    {
        class _IRayPlusStudioEditorBuilderBuilder;
        class IRayPlusStudioEditorBuilderImpl;
        /**
            Represents a @link NXOpen::Display::IRayPlusStudioEditorBuilder NXOpen::Display::IRayPlusStudioEditorBuilder@endlink .
            Ray Traced Studio Editor controls display and output of CPU-based real-time ray tracing.
             <br> This class is restricted to being called from a program running during an 
            Interactive NX session.  If run from a non-interactive session it will 
            return NULL. <br> 
             <br> To create a new instance of this class, use @link NXOpen::ViewCollection::CreateIrayPlusStudioEditorBuilder  NXOpen::ViewCollection::CreateIrayPlusStudioEditorBuilder @endlink  <br> 
         <br>  Created in NX10.0.2.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  IRayPlusStudioEditorBuilder : public NXOpen::Builder
        {
            /** To specify the quality and performance of the Ray Traced Studio display when dynamic interaction stops */
            public: enum DynamicIRayPlusStudioRenderModeType
            {
                DynamicIRayPlusStudioRenderModeTypePhotoreal/** Very good ray traced display quality when dynamic interaction stops */,
                DynamicIRayPlusStudioRenderModeTypeQualityInteractive/** Good ray traced display quality with good performance when dynamic interaction stops */,
                DynamicIRayPlusStudioRenderModeTypeFastInteractive/** The fastest ray traced display performance with preview quality when dynamic interaction stops */
            };

            /** To specify the Ray Traced Studio static image file format */
            public: enum IRayPlusStudioStaticImageFileFormatType
            {
                IRayPlusStudioStaticImageFileFormatTypeTif/** Tagged Image File Format (TIFF) file format */,
                IRayPlusStudioStaticImageFileFormatTypePng/** Portable Network Graphic (PNG) file format */,
                IRayPlusStudioStaticImageFileFormatTypeJpg/** Joint Photographic Experts Group (JPEG) file format */
            };

            /** To specify the Ray Traced Studio static image units */
            public: enum IRayPlusStudioStaticImageUnitsType
            {
                IRayPlusStudioStaticImageUnitsTypePixels/** static image size specified in pixel */,
                IRayPlusStudioStaticImageUnitsTypeMillimeters/** static image size specified in millimeters */,
                IRayPlusStudioStaticImageUnitsTypeInches/** static image size specified in inches */
            };

            /** To specify the Ray Traced Studio static image size */
            public: enum IRayPlusStudioStaticImageSizeType
            {
                IRayPlusStudioStaticImageSizeTypeRenderWindow/** Ray Traced Studio window size used for static image output */,
                IRayPlusStudioStaticImageSizeTypeUserDefined/** user specified size for static image output */
            };

            /** To specify the Ray Traced Studio static image orientation */
            public: enum IRayPlusStudioStaticImageOrientationType
            {
                IRayPlusStudioStaticImageOrientationTypeLandscape/** static image orientation where width is greater than height */,
                IRayPlusStudioStaticImageOrientationTypePortrait/** static image orientation where height is greater than width */
            };

            /** To specify the Ray Traced Studio static image resolution */
            public: enum IRayPlusStudioStaticImageResolutionType
            {
                IRayPlusStudioStaticImageResolutionTypeHigh/** static image output resolution of 300 DPI (dots per inch) */,
                IRayPlusStudioStaticImageResolutionTypeMedium/** static image output resolution of 150 DPI (dots per inch) */,
                IRayPlusStudioStaticImageResolutionTypeLow/** static image output resolution of 72 DPI (dots per inch) */,
                IRayPlusStudioStaticImageResolutionTypeUserDefined/** user specified image output resolution in DPI (dots per inch) */
            };

            /** To specify the Ray Traced Studio remote rendering video mode */
            public: enum IRayPlusStudioRemoteRenderVideoType
            {
                IRayPlusStudioRemoteRenderVideoTypeStreaming/** streaming */ ,
                IRayPlusStudioRemoteRenderVideoTypeSynchronous/** synchronous */ 
            };

            /** To specify the Ray Traced Studio remote rendering format */
            public: enum IRayPlusStudioRemoteRenderFormatType
            {
                IRayPlusStudioRemoteRenderFormatTypeH264/** h264 */ ,
                IRayPlusStudioRemoteRenderFormatTypeLossless/** lossless */ ,
                IRayPlusStudioRemoteRenderFormatTypePng/** png */ ,
                IRayPlusStudioRemoteRenderFormatTypeJpeg/** jpeg */ 
            };

            /** To specify the Ray Traced Studio remote rendering type */
            public: enum IRayPlusStudioRemoteRenderType
            {
                IRayPlusStudioRemoteRenderTypeCluster/** Network Cluster */,
                IRayPlusStudioRemoteRenderTypeVca/** VCA */
            };

            private: IRayPlusStudioEditorBuilderImpl * m_irayplusstudioeditorbuilder_impl;
            private: friend class  _IRayPlusStudioEditorBuilderBuilder;
            protected: IRayPlusStudioEditorBuilder();
            public: ~IRayPlusStudioEditorBuilder();
            /**Returns  the Ray Traced Studio dynamic display rendering mode 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXOpen::Display::IRayPlusStudioEditorBuilder::DynamicIRayPlusStudioRenderModeType DynamicIRayPlusStudioRenderMode
            (
            );
            /**Sets  the Ray Traced Studio dynamic display rendering mode 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetDynamicIRayPlusStudioRenderMode
            (
                NXOpen::Display::IRayPlusStudioEditorBuilder::DynamicIRayPlusStudioRenderModeType dynamicIRayPlusStudioRenderMode /** dynamicirayplusstudiorendermode */ 
            );
            /**Returns  the Ray Traced Studio dynamic display time-based rendering mode timer (read only) 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXOpen::DateBuilder * DynamicIRayPlusStudioTime
            (
            );
            /**Returns  the Ray Traced Studio dynamic antialiasing quality when dynamic interaction stops 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: bool DynamicIRayPlusCaustics
            (
            );
            /**Sets  the Ray Traced Studio dynamic antialiasing quality when dynamic interaction stops 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetDynamicIRayPlusCaustics
            (
                bool dynamicIRayPlusCaustics /** dynamiciraypluscaustics */ 
            );
            /**Returns  the Ray Traced Studio static output image file format 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioStaticImageFileFormatType IRayPlusStudioStaticImageFileFormat
            (
            );
            /**Sets  the Ray Traced Studio static output image file format 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetIRayPlusStudioStaticImageFileFormat
            (
                NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioStaticImageFileFormatType iRayPlusStudioStaticImageFileFormat /** irayplusstudiostaticimagefileformat */ 
            );
            /**Returns  the Ray Traced Studio static image units 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioStaticImageUnitsType IRayPlusStudioStaticImageUnits
            (
            );
            /**Sets  the Ray Traced Studio static image units 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetIRayPlusStudioStaticImageUnits
            (
                NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioStaticImageUnitsType iRayPlusStudioStaticImageUnits /** irayplusstudiostaticimageunits */ 
            );
            /**Returns  the Ray Traced Studio static image size 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioStaticImageSizeType IRayPlusStudioStaticImageSize
            (
            );
            /**Sets  the Ray Traced Studio static image size 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetIRayPlusStudioStaticImageSize
            (
                NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioStaticImageSizeType iRayPlusStudioStaticImageSize /** irayplusstudiostaticimagesize */ 
            );
            /**Returns  the Ray Traced Studio static image orientation 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioStaticImageOrientationType IRayPlusStudioStaticImageOrientation
            (
            );
            /**Sets  the Ray Traced Studio static image orientation 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetIRayPlusStudioStaticImageOrientation
            (
                NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioStaticImageOrientationType iRayPlusStudioStaticImageOrientation /** irayplusstudiostaticimageorientation */ 
            );
            /**Returns  the Ray Traced Studio static image aspect ratio will be maintained 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: bool IRayPlusStudioStaticImageLockAspectRatio
            (
            );
            /**Sets  the Ray Traced Studio static image aspect ratio will be maintained 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetIRayPlusStudioStaticImageLockAspectRatio
            (
                bool iRayPlusStudioStaticImageLockAspectRatio /** irayplusstudiostaticimagelockaspectratio */ 
            );
            /**Returns  the Ray Traced Studio static image pixel width 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: int IRayPlusStudioStaticImagePixelWidth
            (
            );
            /**Sets  the Ray Traced Studio static image pixel width 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetIRayPlusStudioStaticImagePixelWidth
            (
                int iRayPlusStudioStaticImagePixelWidth /** irayplusstudiostaticimagepixelwidth */ 
            );
            /**Returns  the Ray Traced Studio static image pixel height 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: int IRayPlusStudioStaticImagePixelHeight
            (
            );
            /**Sets  the Ray Traced Studio static image pixel height 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetIRayPlusStudioStaticImagePixelHeight
            (
                int iRayPlusStudioStaticImagePixelHeight /** irayplusstudiostaticimagepixelheight */ 
            );
            /**Returns  the Ray Traced Studio static image width 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: double IRayPlusStudioStaticImageDoubleWidth
            (
            );
            /**Sets  the Ray Traced Studio static image width 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetIRayPlusStudioStaticImageDoubleWidth
            (
                double iRayPlusStudioStaticImageDoubleWidth /** irayplusstudiostaticimagedoublewidth */ 
            );
            /**Returns  the Ray Traced Studio static image height 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: double IRayPlusStudioStaticImageDoubleHeight
            (
            );
            /**Sets  the Ray Traced Studio static image height 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetIRayPlusStudioStaticImageDoubleHeight
            (
                double iRayPlusStudioStaticImageDoubleHeight /** irayplusstudiostaticimagedoubleheight */ 
            );
            /**Returns  the Ray Traced Studio static image resolution 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioStaticImageResolutionType IRayPlusStudioStaticImageResolution
            (
            );
            /**Sets  the Ray Traced Studio static image resolution 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetIRayPlusStudioStaticImageResolution
            (
                NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioStaticImageResolutionType iRayPlusStudioStaticImageResolution /** irayplusstudiostaticimageresolution */ 
            );
            /**Returns  the Ray Traced Studio static image dots per inch (DPI) 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: int IRayPlusStudioStaticImageDotsPerInch
            (
            );
            /**Sets  the Ray Traced Studio static image dots per inch (DPI) 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetIRayPlusStudioStaticImageDotsPerInch
            (
                int iRayPlusStudioStaticImageDotsPerInch /** irayplusstudiostaticimagedotsperinch */ 
            );
            /**Returns  the Ray Traced Studio static display time-based rendering timer (read only) 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXOpen::DateBuilder * StaticIRayPlusStudioTime
            (
            );
            /**Returns  the Ray Traced Studio display remote rendering video mode 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioRemoteRenderVideoType RemoteRenderVideoMode
            (
            );
            /**Sets  the Ray Traced Studio display remote rendering video mode 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetRemoteRenderVideoMode
            (
                NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioRemoteRenderVideoType remoteRenderVideoType /** remoterendervideotype */ 
            );
            /**Returns  the Ray Traced Studio display remote rendering format 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioRemoteRenderFormatType RemoteRenderFormat
            (
            );
            /**Sets  the Ray Traced Studio display remote rendering format 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetRemoteRenderFormat
            (
                NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioRemoteRenderFormatType remoteRenderFormatType /** remoterenderformattype */ 
            );
            /**Returns  the Ray Traced Studio display remote rendering type 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioRemoteRenderType RemoteRenderType
            (
            );
            /**Sets  the Ray Traced Studio display remote rendering type 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetRemoteRenderType
            (
                NXOpen::Display::IRayPlusStudioEditorBuilder::IRayPlusStudioRemoteRenderType remoteRenderType /** remoterendertype */ 
            );
            /**Returns  the Ray Traced Studio display remote rendering IP address 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXString RemoteRenderIP
            (
            );
            /**Sets  the Ray Traced Studio display remote rendering IP address 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetRemoteRenderIP
            (
                const NXString & remoteRenderIP /** remoterenderip */ 
            );
            /**Sets  the Ray Traced Studio display remote rendering IP address 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            void SetRemoteRenderIP
            (
                const char * remoteRenderIP /** remoterenderip */ 
            );
            /**Returns  the Ray Traced Studio display remote rendering security token 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXString RemoteRenderSecurityToken
            (
            );
            /**Sets  the Ray Traced Studio display remote rendering security token 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetRemoteRenderSecurityToken
            (
                const NXString & remoteRenderSecurityToken /** remoterendersecuritytoken */ 
            );
            /**Sets  the Ray Traced Studio display remote rendering security token 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            void SetRemoteRenderSecurityToken
            (
                const char * remoteRenderSecurityToken /** remoterendersecuritytoken */ 
            );
            /**Returns  the Ray Traced Studio display if remote rendering is used 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: bool RemoteRenderToggle
            (
            );
            /**Sets  the Ray Traced Studio display if remote rendering is used 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetRemoteRenderToggle
            (
                bool remoteRenderToggle /** remoterendertoggle */ 
            );
            /**Returns  the Ray Traced Studio progess status indicator percent complete display 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: bool IRayPlusStudioshowStatusIndicator
            (
            );
            /**Sets  the Ray Traced Studio progess status indicator percent complete display 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetIRayPlusStudioshowStatusIndicator
            (
                bool iRayPlusStudioshowStatusIndicator /** irayplusstudioshowstatusindicator */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
