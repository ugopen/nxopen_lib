#ifndef NXOpen_SKETCHCONSTRAINTBUILDER_HXX_INCLUDED
#define NXOpen_SKETCHCONSTRAINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SketchConstraintBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/SketchConstraintBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class SketchConstraintBuilder;
    class Builder;
    class SelectNXObject;
    class SelectNXObjectList;
    class _SketchConstraintBuilderBuilder;
    class SketchConstraintBuilderImpl;
    /** Represents a @link NXOpen::SketchConstraint NXOpen::SketchConstraint@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::SketchCollection::CreateConstraintBuilder  NXOpen::SketchCollection::CreateConstraintBuilder @endlink  <br> 
     <br>  Created in NX8.5.0.  <br>  
    */
    class NXOPENCPPEXPORT  SketchConstraintBuilder : public NXOpen::Builder
    {
        /** the types of the constraint */
        public: enum Constraint
        {
            ConstraintCoincident/** coincident */ ,
            ConstraintPointOnCurve/** point on curve */ ,
            ConstraintTangent/** tangent */ ,
            ConstraintParallel/** parallel */ ,
            ConstraintPerpendicular/** perpendicular */ ,
            ConstraintHorizontal/** horizontal */ ,
            ConstraintVertical/** vertical */ ,
            ConstraintHorizontalAlignment/** horizontal alignment */ ,
            ConstraintVerticalAlignment/** vertical alignment */ ,
            ConstraintMidpoint/** midpoint */ ,
            ConstraintCollinear/** collinear */ ,
            ConstraintConcentric/** concentric */ ,
            ConstraintEqualLength/** equal length */ ,
            ConstraintEqualRadius/** equal radius */ ,
            ConstraintSymmetric/** symmetric */ ,
            ConstraintFixed/** fixed */ ,
            ConstraintFullyFixed/** fully fixed */ ,
            ConstraintConstantAngle/** constant angle */ ,
            ConstraintConstantLength/** constant length */ ,
            ConstraintPointOnString/** point on string */ ,
            ConstraintTangentToString/** tangent to string */ ,
            ConstraintPerpendicularToString/** perpendicular to string */ ,
            ConstraintNonUniformScale/** non uniform scale */ ,
            ConstraintUniformScale/** uniform scale */ ,
            ConstraintSlopeOfCurve/** slope of curve */ 
        };

        private: SketchConstraintBuilderImpl * m_sketchconstraintbuilder_impl;
        private: friend class  _SketchConstraintBuilderBuilder;
        protected: SketchConstraintBuilder();
        public: ~SketchConstraintBuilder();
        /**Returns  the constraint type 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::SketchConstraintBuilder::Constraint ConstraintType
        (
        );
        /**Sets  the constraint type 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetConstraintType
        (
            NXOpen::SketchConstraintBuilder::Constraint constraintType /** constrainttype */ 
        );
        /**Returns  the geometries to be constrained 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::SelectNXObjectList * GeometryToConstrain
        (
        );
        /**Returns  the secondary geometries to be constrained 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::SelectNXObject * GeometryToConstrainTo
        (
        );
        /**Returns  the centerline for a symmetric constraint type 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::SelectNXObject * Centerline
        (
        );
        /**Returns  the flag specifying whether or not to make the centerline reference geometry 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: bool MakeReference
        (
        );
        /**Sets  the flag specifying whether or not to make the centerline reference geometry 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetMakeReference
        (
            bool makeReference /** makereference */ 
        );
        /**Returns  the flag specifying whether or not to update the sketch during the builder commit. The default value 
                    is true. If the value is set to false, the sketch will not update during the builder commit. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: bool UpdateSketchAtCommit
        (
        );
        /**Sets  the flag specifying whether or not to update the sketch during the builder commit. The default value 
                    is true. If the value is set to false, the sketch will not update during the builder commit. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetUpdateSketchAtCommit
        (
            bool updateSketch /** updatesketch */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
