#ifndef NXOpen_CAE_OPTIMIZATION_DAOSOLUTION_HXX_INCLUDED
#define NXOpen_CAE_OPTIMIZATION_DAOSOLUTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Optimization_DAOSolution.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Optimization_DAOConstraint.hxx>
#include <NXOpen/CAE_Optimization_DAODesignVariable.hxx>
#include <NXOpen/CAE_Optimization_DAOObjective.hxx>
#include <NXOpen/CAE_Optimization_DAOOptimizationDataTypes.hxx>
#include <NXOpen/CAE_Optimization_DAOSolution.hxx>
#include <NXOpen/CAE_Optimization_DAOStopCondition.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Optimization
        {
            class DAOSolution;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class DAOConstraint;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class DAOConstraintBuilder;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class DAOConstraintCollection;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class DAODesignVariable;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class DAODesignVariableBuilder;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class DAODesignVariableCollection;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class DAOObjective;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class DAOStopCondition;
        }
    }
    class NXObject;
    namespace CAE
    {
        namespace Optimization
        {
            class _DAOSolutionBuilder;
            class DAOSolutionImpl;
            /** Represents a @link NXOpen::CAE::Optimization::DAOSolution NXOpen::CAE::Optimization::DAOSolution@endlink .  <br> To create or edit an instance of this class, use @link NXOpen::CAE::Optimization::DAOSolutionBuilder  NXOpen::CAE::Optimization::DAOSolutionBuilder @endlink  <br> 
             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  DAOSolution : public NXOpen::NXObject
            {
                private: DAOSolutionImpl * m_daosolution_impl;
                private: friend class  _DAOSolutionBuilder;
                protected: DAOSolution();
                public: ~DAOSolution();
                /**Returns  the optimization solution name 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString Name
                (
                );
                /**Sets  the optimization solution name 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetName
                (
                    const NXString & solutionName /** Solution name */
                );
                /**Sets  the optimization solution name 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                void SetName
                (
                    const char * solutionName /** Solution name */
                );
                /**Returns  the optimization solution solver type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Optimization::Solver SolverType
                (
                );
                /**Sets  the optimization solution solver type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetSolverType
                (
                    NXOpen::CAE::Optimization::Solver solverType /** Optimization solution solver type */
                );
                /** Gets the optimization solution design objective  @return  Design objective 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Optimization::DAOObjective * GetDesignObjective
                (
                );
                /** Gets the optimization solution design constraints  @return  Design constraints 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::CAE::Optimization::DAOConstraint *> GetDesignConstraints
                (
                );
                /** Sets the optimization solution design constraints 
                 <br>  @deprecated Deprecated in NX9.0.0.  Not a valid method. Use @link NXOpen::CAE::Optimization::DAOSolution::CreateConstraintBuilder NXOpen::CAE::Optimization::DAOSolution::CreateConstraintBuilder@endlink  instead. <br>  

                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public:  NX_DEPRECATED("Deprecated in NX9.0.0.  Not a valid method. Use NXOpen::CAE::Optimization::DAOSolution::CreateConstraintBuilder instead.") void SetDesignConstraints
                (
                    const std::vector<NXOpen::CAE::Optimization::DAOConstraint *> & designConstraints /** Design constraints */
                );
                /** Gets the optimization solution design variables for general optimization type  @return  Design variables 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::CAE::Optimization::DAODesignVariable *> GetOptimizationDesignVariables
                (
                );
                /** Sets the optimization solution design variables for general optimization type 
                 <br>  @deprecated Deprecated in NX9.0.0.  Not a valid method. Use @link NXOpen::CAE::Optimization::DAOSolution::CreateDesignVariableBuilder NXOpen::CAE::Optimization::DAOSolution::CreateDesignVariableBuilder@endlink  instead. <br>  

                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public:  NX_DEPRECATED("Deprecated in NX9.0.0.  Not a valid method. Use NXOpen::CAE::Optimization::DAOSolution::CreateDesignVariableBuilder instead.") void SetOptimizationDesignVariables
                (
                    const std::vector<NXOpen::CAE::Optimization::DAOConstraint *> & designVariables /** Design variables */
                );
                /** Gets the optimization solution design variables for global sensitivity optimization type  @return  Design variables 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::CAE::Optimization::DAODesignVariable *> GetGlobalSensitivityDesignVariables
                (
                );
                /** Sets the optimization solution design variables for global sensitivity optimization type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetGlobalSensitivityDesignVariables
                (
                    const std::vector<NXOpen::CAE::Optimization::DAODesignVariable *> & designVariables /** Design variables */
                );
                /**Returns  the optimization solution optimizer control 
                 <br>  @deprecated Deprecated in NX9.0.0.  Not a valid method. Use @link NXOpen::CAE::Optimization::DAOSolution::GetSolutionControls NXOpen::CAE::Optimization::DAOSolution::GetSolutionControls@endlink  instead. <br>  

                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public:  NX_DEPRECATED("Deprecated in NX9.0.0.  Not a valid method. Use NXOpen::CAE::Optimization::DAOSolution::GetSolutionControls instead.") NXOpen::CAE::Optimization::DAOStopCondition * OptimizerControl
                (
                );
                /**Sets  the optimization solution optimizer control 
                 <br>  @deprecated Deprecated in NX9.0.0.  Not a valid method. Use @link NXOpen::CAE::Optimization::DAOSolution::GetSolutionControls NXOpen::CAE::Optimization::DAOSolution::GetSolutionControls@endlink  instead. <br>  

                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public:  NX_DEPRECATED("Deprecated in NX9.0.0.  Not a valid method. Use NXOpen::CAE::Optimization::DAOSolution::GetSolutionControls instead.") void SetOptimizerControl
                (
                    NXOpen::CAE::Optimization::DAOStopCondition * optimizerControl /** Optimizer control */
                );
                /** Gets the optimization solution optimizer control  @return  Optimizer control 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Optimization::DAOStopCondition * GetSolutionControls
                (
                );
                /** Solves the optimization solution 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void Solve
                (
                );
                /** Deletes the optimization solution 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void DeleteSolution
                (
                );
                /** Activates the optimization solution setup 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void ActivateSolution
                (
                );
                /** Creates the builder object of optimization solution design constraint  @return  Design constraint builder 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: NXOpen::CAE::Optimization::DAOConstraintBuilder * CreateConstraintBuilder
                (
                    NXOpen::CAE::Optimization::DAOConstraint * optimizationConstraint /** Design constraint */
                );
                /** Creates the builder object of optimization solution design variable  @return  Design variable builder 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: NXOpen::CAE::Optimization::DAODesignVariableBuilder * CreateDesignVariableBuilder
                (
                    NXOpen::CAE::Optimization::DAODesignVariable * optimizationDesvar /** Design variable */
                );


                /** Returns the optimization design constraint collection. 
                 <br>  Created in NX8.0.0.  <br>  
                */
                public: NXOpen::CAE::Optimization::DAOConstraintCollection *DesignConstraint();
                /** Returns the optimization design variable collection. 
                 <br>  Created in NX8.0.0.  <br>  
                */
                public: NXOpen::CAE::Optimization::DAODesignVariableCollection *DesignVariable();
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
