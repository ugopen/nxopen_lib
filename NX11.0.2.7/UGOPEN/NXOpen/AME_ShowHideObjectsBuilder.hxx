#ifndef NXOpen_AME_SHOWHIDEOBJECTSBUILDER_HXX_INCLUDED
#define NXOpen_AME_SHOWHIDEOBJECTSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_ShowHideObjectsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_ShowHideObjectsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class ShowHideObjectsBuilder;
    }
    class Builder;
    namespace AME
    {
        class _ShowHideObjectsBuilderBuilder;
        class ShowHideObjectsBuilderImpl;
        /** JA class for ShowHideObjectsBuilder <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateShowHideObjectsBuilder  NXOpen::AME::AMEManager::CreateShowHideObjectsBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  ShowHideObjectsBuilder : public NXOpen::Builder
        {
            private: ShowHideObjectsBuilderImpl * m_showhideobjectsbuilder_impl;
            private: friend class  _ShowHideObjectsBuilderBuilder;
            protected: ShowHideObjectsBuilder();
            public: ~ShowHideObjectsBuilder();
            /**Returns  the setting for showing/hiding software blocks in aspect navigators
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ShowSoftwareBlocks
            (
            );
            /**Sets  the setting for showing/hiding software blocks in aspect navigators
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetShowSoftwareBlocks
            (
                bool showSoftwareBlocks /** showsoftwareblocks */ 
            );
            /**Returns  the setting for showing/hiding EPLAN objects in aspect navigators
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ShowEPLAN
            (
            );
            /**Sets  the setting for showing/hiding EPLAN objects in aspect navigators
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetShowEPLAN
            (
                bool showEPLAN /** showeplan */ 
            );
            /**Returns  the setting for showing/hiding Plc Tags in aspect navigators
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ShowTags
            (
            );
            /**Sets  the setting for showing/hiding Plc Tags in aspect navigators
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetShowTags
            (
                bool showTags /** showtags */ 
            );
            /**Returns  the setting for showing/hiding Plc Channels in aspect navigators
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ShowChannels
            (
            );
            /**Sets  the setting for showing/hiding Plc Channels in aspect navigators
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetShowChannels
            (
                bool showChannels /** showchannels */ 
            );
            /**Returns  the setting for showing/hiding the setting for unplaced fragments in aspect navigators
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ShowUnplacedFragments
            (
            );
            /**Sets  the setting for showing/hiding the setting for unplaced fragments in aspect navigators
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetShowUnplacedFragments
            (
                bool showUnplacedFragments /** showunplacedfragments */ 
            );
            /**Returns  the setting for showing/hiding placed fragments in aspect navigators
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ShowPlacedFragments
            (
            );
            /**Sets  the setting for showing/hiding placed fragments in aspect navigators
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetShowPlacedFragments
            (
                bool showPlacedFragments /** showplacedfragments */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
