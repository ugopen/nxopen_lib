#ifndef NXOpen_CAE_DURABILITYEVALUATEFATIGUEHISTORYBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DURABILITYEVALUATEFATIGUEHISTORYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurabilityEvaluateFatigueHistoryBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DurabilityEvaluateFatigueHistoryBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurabilityEvaluateFatigueHistoryBuilder;
    }
    class Builder;
    namespace CAE
    {
        class _DurabilityEvaluateFatigueHistoryBuilderBuilder;
        class DurabilityEvaluateFatigueHistoryBuilderImpl;
        /** Represents the builder for evaluating fatigue histories.  <br> To create a new instance of this class, use @link NXOpen::CAE::DurabilityManager::CreateDurabilityEvaluateFatigueHistoryBuilder  NXOpen::CAE::DurabilityManager::CreateDurabilityEvaluateFatigueHistoryBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        FatigueHistoryDataType </td> <td> 
         
        Stress </td> </tr> 

        </table>  

         <br>  Created in NX8.0.1.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurabilityEvaluateFatigueHistoryBuilder : public NXOpen::Builder
        {
            /** Fatigue history data type: as per event, stress or strain */
            public: enum FatigueHistoryDataTypeEnum
            {
                FatigueHistoryDataTypeEnumAsPerEvent/** as per event */ ,
                FatigueHistoryDataTypeEnumStress/** stress */ ,
                FatigueHistoryDataTypeEnumStrain/** strain */ 
            };

            private: DurabilityEvaluateFatigueHistoryBuilderImpl * m_durabilityevaluatefatiguehistorybuilder_impl;
            private: friend class  _DurabilityEvaluateFatigueHistoryBuilderBuilder;
            protected: DurabilityEvaluateFatigueHistoryBuilder();
            public: ~DurabilityEvaluateFatigueHistoryBuilder();
            /**Returns  the fatigue history enum 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurabilityEvaluateFatigueHistoryBuilder::FatigueHistoryDataTypeEnum FatigueHistoryDataType
            (
            );
            /**Sets  the fatigue history enum 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetFatigueHistoryDataType
            (
                NXOpen::CAE::DurabilityEvaluateFatigueHistoryBuilder::FatigueHistoryDataTypeEnum fatigueHistoryDataType /** fatiguehistorydatatype */ 
            );
            /**Returns  the output afu file name. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: NXString OutputAfuFileName
            (
            );
            /**Sets  the output afu file name. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetOutputAfuFileName
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the output afu file name. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            void SetOutputAfuFileName
            (
                const char * filename /** filename */ 
            );
            /** The function is called when the user click the button of Edit Event Attributes 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void EditEvent
            (
            );
            /** The function is called when the user click the button of Export to AFU Funciton 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void AfuFunction
            (
            );
            /** Export fatigue history functions to a csv file. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void ExportFatigueHistoryToCsv
            (
                const NXString & csvFilename /** fatigue history functions will be written-out to this file. */
            );
            /** Export fatigue history functions to a csv file. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            void ExportFatigueHistoryToCsv
            (
                const char * csvFilename /** fatigue history functions will be written-out to this file. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
