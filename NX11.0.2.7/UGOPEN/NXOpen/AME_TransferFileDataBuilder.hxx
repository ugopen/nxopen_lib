#ifndef NXOpen_AME_TRANSFERFILEDATABUILDER_HXX_INCLUDED
#define NXOpen_AME_TRANSFERFILEDATABUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_TransferFileDataBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_TransferFileDataBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class TransferFileDataBuilder;
    }
    class Builder;
    class SelectNXObject;
    namespace AME
    {
        class _TransferFileDataBuilderBuilder;
        class TransferFileDataBuilderImpl;
        /** Imports a new one or updates the existing configuration in AD Upstream Data Navigator from the external file.  <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateTransferFileDataBuilder  NXOpen::AME::AMEManager::CreateTransferFileDataBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  TransferFileDataBuilder : public NXOpen::Builder
        {
            private: TransferFileDataBuilderImpl * m_transferfiledatabuilder_impl;
            private: friend class  _TransferFileDataBuilderBuilder;
            protected: TransferFileDataBuilder();
            public: ~TransferFileDataBuilder();
            /**Returns  the excel file which is being imported 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString FileToImport
            (
            );
            /**Sets  the excel file which is being imported 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetFileToImport
            (
                const NXString & fileToImport /** filetoimport */ 
            );
            /**Sets  the excel file which is being imported 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetFileToImport
            (
                const char * fileToImport /** filetoimport */ 
            );
            /**Returns  the node which needs to update during import operation 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::SelectNXObject * NodeToUpdate
            (
            );
            /** Validate and populate excel import data. This should be called prior to commit. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void ValidateAndPopulateExcelData
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
