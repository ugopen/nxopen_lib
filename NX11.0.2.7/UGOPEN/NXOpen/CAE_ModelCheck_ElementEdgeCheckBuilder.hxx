#ifndef NXOpen_CAE_MODELCHECK_ELEMENTEDGECHECKBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MODELCHECK_ELEMENTEDGECHECKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelCheck_ElementEdgeCheckBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ModelCheckDataTypes.hxx>
#include <NXOpen/CAE_ModelCheck_ElementEdgeCheckBuilder.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/NXColor.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_ModelCheck_ISelectionBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ModelCheck
        {
            class ElementEdgeCheckBuilder;
        }
    }
    class Builder;
    namespace CAE
    {
        class CaeGroup;
    }
    namespace CAE
    {
        class FEElemEdge;
    }
    namespace CAE
    {
        class FEElement;
    }
    namespace CAE
    {
        namespace ModelCheck
        {
            class ISelectionBuilder;
        }
    }
    class NXColor;
    class SelectTaggedObjectList;
    namespace CAE
    {
        namespace ModelCheck
        {
            class _ElementEdgeCheckBuilderBuilder;
            class ElementEdgeCheckBuilderImpl;
            /** Represents a @link NXOpen::CAE::ModelCheck::ElementEdgeCheckBuilder NXOpen::CAE::ModelCheck::ElementEdgeCheckBuilder@endlink  which can be
                        used to detect free element edges or non-manifold edges.
                         <br> 
                        A free edge is any Element edge that is not shared by any other element face (on
                        either 2D or 3D elements ) within the defined scope of the check.
                        A non-manifold edge is any Element edge that is shared more than 2 element faces (on
                        either 2D or 3D elements ) within the defined scope of the check.
                         <br> 
                        The computation scope @link ElementEdgeCheckBuilder::ComputationScope ElementEdgeCheckBuilder::ComputationScope @endlink and @link ElementEdgeCheckBuilder::SetComputationScope ElementEdgeCheckBuilder::SetComputationScope @endlink 
                        will affect on the checking result. The free element edges or non-manifold edges found will
                        be displayed using the display setting @link NXOpen::CAE::ModelCheck::ElementEdgeCheckBuilder::EdgeDisplayStyle NXOpen::CAE::ModelCheck::ElementEdgeCheckBuilder::EdgeDisplayStyle@endlink .
                        You can execute checking through @link Builder::Commit Builder::Commit@endlink  or
                        @link NXOpen::CAE::ModelCheck::ElementEdgeCheckBuilder::ExecuteCheck NXOpen::CAE::ModelCheck::ElementEdgeCheckBuilder::ExecuteCheck@endlink . Commiting the builder
                        performs checking and displays the free edges and non-manifold edges in graphic window.
                     <br> To create a new instance of this class, use @link NXOpen::CAE::ModelCheckManager::CreateElementEdgeCheckBuilder  NXOpen::CAE::ModelCheckManager::CreateElementEdgeCheckBuilder @endlink  <br> 
             <br>  Created in NX8.5.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  ElementEdgeCheckBuilder : public NXOpen::Builder, public virtual NXOpen::CAE::ModelCheck::ISelectionBuilder
            {
                /** the Scope over which the Computation of free/non-manifold edges with be done */
                public: enum Scope
                {
                    ScopeEntireModel/** Takes all elements in the model into account while computing */,
                    ScopeVisibleModel/** Only takes visible elements into account while computing */,
                    ScopeSelectedModels/** Only takes selected elements into account while computing */
                };

                 /** the display style of the edges detected */
                public:
                struct  EdgeDisplayStyle
                {
                    public: /** line font */NXOpen::DisplayableObject::ObjectFont Font;
                    public: /** line width */NXOpen::DisplayableObject::ObjectWidth Width;
                    public: /** line color */NXColor* Color;
                    public: EdgeDisplayStyle() :
                        Font((NXOpen::DisplayableObject::ObjectFont)0),
                        Width((NXOpen::DisplayableObject::ObjectWidth)0),
                        Color()
                    {
                    }
                    /** Constructor for the EdgeDisplayStyle struct. */ 
                    public: EdgeDisplayStyle(NXOpen::DisplayableObject::ObjectFont fontInitial /** line font */, 
                            NXOpen::DisplayableObject::ObjectWidth widthInitial /** line width */, 
                            NXColor* colorInitial /** line color */) :
                        Font(fontInitial),
                        Width(widthInitial),
                        Color(colorInitial)
                    {
                    }
                };

                private: ElementEdgeCheckBuilderImpl * m_elementedgecheckbuilder_impl;
                private: friend class  _ElementEdgeCheckBuilderBuilder;
                protected: ElementEdgeCheckBuilder();
                public: ~ElementEdgeCheckBuilder();
                /**Returns  the selected objects to be checked. The objects must be @link NXOpen::CAE::Mesh NXOpen::CAE::Mesh@endlink  or
                                @link NXOpen::CAE::FEElement NXOpen::CAE::FEElement@endlink  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectTaggedObjectList * SelectionList
                (
                );
                /**Returns  the value indicating whether to check free edges or not 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool CheckFreeEdges
                (
                );
                /**Sets  the value indicating whether to check free edges or not 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetCheckFreeEdges
                (
                    bool checkFreeEdges /** checkfreeedges */ 
                );
                /**Returns  the value indicating whether to check non-manifold edges or not 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool CheckNonManifoldEdges
                (
                );
                /**Sets  the value indicating whether to check non-manifold edges or not 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetCheckNonManifoldEdges
                (
                    bool checkNonManifoldEdges /** checknonmanifoldedges */ 
                );
                /** Hides or unhides the input meshes 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void HideInputMeshes
                (
                    bool hideInputMeshes /** hideinputmeshes */ 
                );
                /**Returns  the display style for free edges detected 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::ModelCheck::ElementEdgeCheckBuilder::EdgeDisplayStyle FreeEdgeDisplayStyle
                (
                );
                /**Sets  the display style for free edges detected 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetFreeEdgeDisplayStyle
                (
                    const NXOpen::CAE::ModelCheck::ElementEdgeCheckBuilder::EdgeDisplayStyle & freeEdgesStyle /** freeedgesstyle */ 
                );
                /**Returns  the displaying style for non-manifold edges detected 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::ModelCheck::ElementEdgeCheckBuilder::EdgeDisplayStyle NonManifoldEdgeDisplayStyle
                (
                );
                /**Sets  the displaying style for non-manifold edges detected 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetNonManifoldEdgeDisplayStyle
                (
                    const NXOpen::CAE::ModelCheck::ElementEdgeCheckBuilder::EdgeDisplayStyle & nonManifoldEdgeStyle /** nonmanifoldedgestyle */ 
                );
                /**Returns  the computation scope 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::ModelCheck::ElementEdgeCheckBuilder::Scope ComputationScope
                (
                );
                /**Sets  the computation scope 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetComputationScope
                (
                    NXOpen::CAE::ModelCheck::ElementEdgeCheckBuilder::Scope computationScope /** computationscope */ 
                );
                /** Finds free edges when @link CAE::ModelCheck::ElementEdgeCheckBuilder::CheckFreeEdges CAE::ModelCheck::ElementEdgeCheckBuilder::CheckFreeEdges @endlink and @link CAE::ModelCheck::ElementEdgeCheckBuilder::SetCheckFreeEdges CAE::ModelCheck::ElementEdgeCheckBuilder::SetCheckFreeEdges @endlink  is set,
                                and non-manifold edges when @link CAE::ModelCheck::ElementEdgeCheckBuilder::CheckNonManifoldEdges CAE::ModelCheck::ElementEdgeCheckBuilder::CheckNonManifoldEdges @endlink and @link CAE::ModelCheck::ElementEdgeCheckBuilder::SetCheckNonManifoldEdges CAE::ModelCheck::ElementEdgeCheckBuilder::SetCheckNonManifoldEdges @endlink  is set.
                                The method @link Builder::Commit Builder::Commit@endlink  will also do the same thing,
                                but display the element edges instead of returning them.
                             
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void ExecuteCheck
                (
                    std::vector<NXOpen::CAE::FEElemEdge *> & freeEdges /** free element edges */,
                    std::vector<NXOpen::CAE::FEElemEdge *> & nonManifoldEdges /** non-manifold element edges */
                );
                /** Finds free edges when @link CAE::ModelCheck::ElementEdgeCheckBuilder::CheckFreeEdges CAE::ModelCheck::ElementEdgeCheckBuilder::CheckFreeEdges @endlink and @link CAE::ModelCheck::ElementEdgeCheckBuilder::SetCheckFreeEdges CAE::ModelCheck::ElementEdgeCheckBuilder::SetCheckFreeEdges @endlink  is set,
                                and non-manifold edges when @link CAE::ModelCheck::ElementEdgeCheckBuilder::CheckNonManifoldEdges CAE::ModelCheck::ElementEdgeCheckBuilder::CheckNonManifoldEdges @endlink and @link CAE::ModelCheck::ElementEdgeCheckBuilder::SetCheckNonManifoldEdges CAE::ModelCheck::ElementEdgeCheckBuilder::SetCheckNonManifoldEdges @endlink  is set,
                                returns the associated elements and output group for free and/or non-manifold element edges.
                                For the associated elements, if both checks are done at the same time, the elements associated to free edges are
                                returned firstly in the list.
                             
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void DoCheck
                (
                    std::vector<NXOpen::CAE::FEElemEdge *> & freeEdges /** free element edges */,
                    std::vector<NXOpen::CAE::FEElemEdge *> & nonManifoldEdges /** non-manifold element edges */,
                    std::vector<NXOpen::CAE::FEElement *> & assoElems /** associated elements for free and/or non-manifold element edges,
                                                                                                             if both checks are done at the same time, the elements associated
                                                                                                             to free edges are returned firstly in the list.
                                                                                                          */,
                    NXOpen::CAE::CaeGroup ** outputGroup /** output group for free and/or non-manifold element edges */
                );
                /**Returns  the check scope setting 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual NXOpen::CAE::ModelCheck::CheckScope CheckScopeOption
                (
                );
                /**Sets  the check scope setting 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual void SetCheckScopeOption
                (
                    NXOpen::CAE::ModelCheck::CheckScope scope /** scope */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
