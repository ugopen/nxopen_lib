#ifndef NXOpen_ANNOTATIONS_TITLEBLOCKCELLBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_TITLEBLOCKCELLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_TitleBlockCellBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class TitleBlockCellBuilder;
    }
    class DisplayableObject;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Annotations
    {
        class _TitleBlockCellBuilderBuilder;
        class TitleBlockCellBuilderImpl;
        /**
            Represents a @link NXOpen::Annotations::TitleBlockCellBuilder NXOpen::Annotations::TitleBlockCellBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::Annotations::TitleBlockCollection::CreateCellBuilder  NXOpen::Annotations::TitleBlockCollection::CreateCellBuilder @endlink  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  TitleBlockCellBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: TitleBlockCellBuilderImpl * m_titleblockcellbuilder_impl;
            private: friend class  _TitleBlockCellBuilderBuilder;
            protected: TitleBlockCellBuilder();
            public: ~TitleBlockCellBuilder();
            /**Returns  the lock status 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool Lock
            (
            );
            /**Sets  the lock status 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetLock
            (
                bool lockStatus /** lockstatus */ 
            );
            /**Returns  the cell label 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Label
            (
            );
            /**Sets  the cell label 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetLabel
            (
                const NXString & label /** label */ 
            );
            /**Sets  the cell label 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void SetLabel
            (
                const char * label /** label */ 
            );
            /**Returns  the editable text of the cell 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString EditableText
            (
            );
            /**Sets  the editable text of the cell 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetEditableText
            (
                const NXString & text /** text */ 
            );
            /**Sets  the editable text of the cell 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void SetEditableText
            (
                const char * text /** text */ 
            );
            /**Returns  the evaluated text of the cell. If the cell cannot be evaluated then its raw text is returned. 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : None */
            public: NXString Text
            (
            );
            /** Edits the title block cell attributes such as lock status, content type, value, label etc. 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void EditCell
            (
                bool lockStatus /** cell lock status */,
                int contentType /** cell content type */,
                const NXString & value /** cell value */,
                const NXString & label /** cell label */,
                bool canChangeLockStatus /** can change lock status of cell */
            );
            /** Edits the title block cell attributes such as lock status, content type, value, label etc. 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void EditCell
            (
                bool lockStatus /** cell lock status */,
                int contentType /** cell content type */,
                const char * value /** cell value */,
                const char * label /** cell label */,
                bool canChangeLockStatus /** can change lock status of cell */
            );
            /**Returns  the tabular note cell corresponding to this title block cell 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::DisplayableObject * Cell
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
