#ifndef NXOpen_FIELDS_SPATIALMAPBUILDER_HXX_INCLUDED
#define NXOpen_FIELDS_SPATIALMAPBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Fields_SpatialMapBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Fields_PathObjects.hxx>
#include <NXOpen/Fields_SpatialMap.hxx>
#include <NXOpen/Fields_SpatialMapBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_fields_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Fields
    {
        class SpatialMapBuilder;
    }
    class Builder;
    class CoordinateSystem;
    class Expression;
    namespace Fields
    {
        class PathObjects;
    }
    namespace Fields
    {
        class PathObjectsList;
    }
    class Point;
    class SelectNXObjectList;
    namespace Fields
    {
        class _SpatialMapBuilderBuilder;
        class SpatialMapBuilderImpl;
        /**  @brief  Represents a @link NXOpen::Fields::SpatialMap NXOpen::Fields::SpatialMap@endlink  builder  

         
             <br> Used to create and or edit a @link NXOpen::Fields::SpatialMap NXOpen::Fields::SpatialMap@endlink . <br> 
             <br> To create a new instance of this class, use @link NXOpen::Fields::FieldManager::CreateSpatialMapBuilder  NXOpen::Fields::FieldManager::CreateSpatialMapBuilder @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_FIELDSEXPORT  SpatialMapBuilder : public NXOpen::Builder
        {
            private: SpatialMapBuilderImpl * m_spatialmapbuilder_impl;
            private: friend class  _SpatialMapBuilderBuilder;
            protected: SpatialMapBuilder();
            public: ~SpatialMapBuilder();
            /**Returns  the map type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::SpatialMap::TypeEnum MapType
            (
            );
            /**Sets  the map type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMapType
            (
                NXOpen::Fields::SpatialMap::TypeEnum mapType /** maptype */ 
            );
            /**Returns  the map subtype 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::SpatialMap::SubtypeEnum MapSubtype
            (
            );
            /**Sets  the map subtype 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetMapSubtype
            (
                NXOpen::Fields::SpatialMap::SubtypeEnum mapSubType /** mapsubtype */ 
            );
            /**Returns  the subtype mapping 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::SpatialMap::SubtypeMappingEnum MapSubtypeMapping
            (
            );
            /**Sets  the subtype mapping 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetMapSubtypeMapping
            (
                NXOpen::Fields::SpatialMap::SubtypeMappingEnum mapSubTypeMapping /** mapsubtypemapping */ 
            );
            /**Returns  the parametric plane map 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::SpatialMap::ParametricPlaneMapEnum ParametricPlaneMap
            (
            );
            /**Sets  the parametric plane map 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetParametricPlaneMap
            (
                NXOpen::Fields::SpatialMap::ParametricPlaneMapEnum parmPlaneMap /** parmplanemap */ 
            );
            /** The method to set the face tolerance to a default value based on the current state of the field 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void AutoTolerance
            (
            );
            /**Returns  the face tolerance for 3D degenerate surface maps 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FaceTolerance
            (
            );
            /**Returns  the bounding box map 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::SpatialMap::BoundingBoxMapEnum BoundingBoxMap
            (
            );
            /**Sets  the bounding box map 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetBoundingBoxMap
            (
                NXOpen::Fields::SpatialMap::BoundingBoxMapEnum boundBoxMap /** boundboxmap */ 
            );
            /**Returns  the csys 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * CoordSystem
            (
            );
            /**Sets  the csys 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCoordSystem
            (
                NXOpen::CoordinateSystem * csys /** csys */ 
            );
            /**Returns  the bounded objects 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * BoundedObjects
            (
            );
            /**Returns  the origin 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Origin
            (
            );
            /**Sets  the origin 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOrigin
            (
                NXOpen::Point * origin /** origin */ 
            );
            /**Returns  the opposite corner 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * OppositeCorner
            (
            );
            /**Sets  the opposite corner 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOppositeCorner
            (
                NXOpen::Point * oppositeCorner /** oppositecorner */ 
            );
            /**Returns  the lattice path objects 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::PathObjects * LatticePath
            (
            );
            /**Returns  the const uobjects 
             <br>  @deprecated Deprecated in NX6.0.1.  Use @link NXOpen::Fields::SpatialMapBuilder::ConstUObjects NXOpen::Fields::SpatialMapBuilder::ConstUObjects@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX6.0.1.  Use NXOpen::Fields::SpatialMapBuilder::ConstUObjects instead.") NXOpen::SelectNXObjectList * ConstantUObjects
            (
            );
            /**Returns  the const vobjects 
             <br>  @deprecated Deprecated in NX6.0.1.  Use @link NXOpen::Fields::SpatialMapBuilder::ConstVObjects NXOpen::Fields::SpatialMapBuilder::ConstVObjects@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX6.0.1.  Use NXOpen::Fields::SpatialMapBuilder::ConstVObjects instead.") NXOpen::SelectNXObjectList * ConstantVObjects
            (
            );
            /**Returns  the list of @link NXOpen::Fields::PathObjects NXOpen::Fields::PathObjects@endlink  objects that define sections of constant u 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::PathObjectsList * ConstUObjects
            (
            );
            /**Returns  the list of @link NXOpen::Fields::PathObjects NXOpen::Fields::PathObjects@endlink  objects that define sections of constant v 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::PathObjectsList * ConstVObjects
            (
            );
            /**Returns  the faces to be used as mapping objects 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * MappingFaces
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
