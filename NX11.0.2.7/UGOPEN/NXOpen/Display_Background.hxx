#ifndef NXOpen_DISPLAY_BACKGROUND_HXX_INCLUDED
#define NXOpen_DISPLAY_BACKGROUND_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_Background.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Display_Background.hxx>
#include <NXOpen/Display_Image.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class Background;
    }
    class Builder;
    class Direction;
    namespace Display
    {
        class Image;
    }
    class Point;
    namespace Display
    {
        class _BackgroundBuilder;
        class BackgroundImpl;
        /**
            Represents a @link NXOpen::Display::Background NXOpen::Display::Background@endlink 
            Background defines how background pixels are displayed.  The background
            resides on a virtual plane at the back of a view.  This background is used
            for display in Studio rendering style and High Quality Images.
             <br> This class is restricted to being called from a program running during an 
            Interactive NX session.  If run from a non-interactive session it will 
            return NULL. <br> 
             <br> To create a new instance of this class, use @link NXOpen::ViewCollection::CreateBackground  NXOpen::ViewCollection::CreateBackground @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  Background : public NXOpen::Builder
        {
            /** background 2D3D types */
            public: enum CategoryType
            {
                CategoryTypeFlat/** 2D Background */,
                CategoryTypeDome/** 3D Dome */
            };

            /** background types */
            public: enum Type
            {
                TypePlain/** single color background */,
                TypeGraduated/** two color background, which varies between them */,
                TypeImage/** an image file displayed in the background */,
                TypeHemiDome/** an 3D HDR image displayed in the background */
            };

            private: BackgroundImpl * m_background_impl;
            private: friend class  _BackgroundBuilder;
            protected: Background();
            public: ~Background();
            /**Returns  the background 2D or 3D type 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::Background::CategoryType BackgroundCategory
            (
            );
            /**Sets  the background 2D or 3D type 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : None */
            public: void SetBackgroundCategory
            (
                NXOpen::Display::Background::CategoryType backgroundCategoryType /** backgroundcategorytype */ 
            );
            /**Returns  the background type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::Background::Type BackgroundType
            (
            );
            /**Sets  the background type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetBackgroundType
            (
                NXOpen::Display::Background::Type backgroundType /** backgroundtype */ 
            );
            /** Returns the bottom color  @return  Array of 3 rgb values, each between 0 and 1 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<double> GetBottomColor
            (
            );
            /** Sets the bottom color 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetBottomColor
            (
                const std::vector<double> & bottomColor /** Array of 3 rgb values, each between 0 and 1 */
            );
            /** Returns the top color  @return  Array of 3 rgb values, each between 0 and 1 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<double> GetTopColor
            (
            );
            /** Sets the top color 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTopColor
            (
                const std::vector<double> & topColor /** Array of 3 rgb values, each between 0 and 1 */
            );
            /**Returns  the background's image builder 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::Image * Image
            (
            );
            /**Sets  the background's image builder 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetImage
            (
                NXOpen::Display::Image * imageBuilder /** image builder */ 
            );
            /**Returns  the background's image filename 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ImageFilename
            (
            );
            /**Sets  the background's image filename 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetImageFilename
            (
                const NXString & imageFileName /** image file name */ 
            );
            /**Sets  the background's image filename 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            void SetImageFilename
            (
                const char * imageFileName /** image file name */ 
            );
            /**Returns  whether to use stage Size and Orientation 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool UseStageSizeAndOrientation
            (
            );
            /**Sets  whether to use stage Size and Orientation 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetUseStageSizeAndOrientation
            (
                bool StageSizeAndOrientation /** _stage size and orientation */ 
            );
            /**Returns  the dome size 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double DomeSize
            (
            );
            /**Sets  the dome size 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetDomeSize
            (
                double domeSize /** dome size */ 
            );
            /**Returns  the origin 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * DomeOrigin
            (
            );
            /**Sets  the origin 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetDomeOrigin
            (
                NXOpen::Point * origin /** origin */ 
            );
            /**Returns  the dome image horizon 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double ImageHorizon
            (
            );
            /**Sets  the dome image horizon 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetImageHorizon
            (
                double imageHorizon /** image horizon */ 
            );
            /**Returns  the image rotation angle (in degrees) 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double ImageRotation
            (
            );
            /**Sets  the image rotation angle (in degrees) 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetImageRotation
            (
                double imageRotation /** imagerotation */ 
            );
            /**Returns  the image up vector direction, relative to the absolute coordinate system 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * ImageUpVector
            (
            );
            /**Sets  the image up vector direction, relative to the absolute coordinate system 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetImageUpVector
            (
                NXOpen::Direction * imageUpVector /** imageupvector */ 
            );
            /**Returns  the dome background's image builder 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::Image * DomeImage
            (
            );
            /**Sets  the dome background's image builder 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetDomeImage
            (
                NXOpen::Display::Image * domeImageBuilder /** dome image builder */ 
            );
            /**Returns  the background's dome image filename 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString DomeImageFilename
            (
            );
            /**Sets  the background's dome image filename 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetDomeImageFilename
            (
                const NXString & domeImageFileName /** dome image file name */ 
            );
            /**Sets  the background's dome image filename 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetDomeImageFilename
            (
                const char * domeImageFileName /** dome image file name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
