#ifndef NXOpen_FEATURES_SHEETMETAL_REBENDBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_REBENDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_RebendBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_SheetMetal_SheetmetalBaseBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class RebendBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class SheetmetalBaseBuilder;
        }
    }
    class NXObject;
    class ScCollector;
    namespace Features
    {
        namespace SheetMetal
        {
            class _RebendBuilderBuilder;
            class RebendBuilderImpl;
            /** The Rebend feature class. <br> To create a new instance of this class, use @link NXOpen::Features::SheetMetal::SheetmetalManager::CreateRebendFeatureBuilder  NXOpen::Features::SheetMetal::SheetmetalManager::CreateRebendFeatureBuilder @endlink  <br> 
             <br>  Created in NX5.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  RebendBuilder : public NXOpen::Features::SheetMetal::SheetmetalBaseBuilder
            {
                private: RebendBuilderImpl * m_rebendbuilder_impl;
                private: friend class  _RebendBuilderBuilder;
                protected: RebendBuilder();
                public: ~RebendBuilder();
                /**Returns  the non-thickness planar face or linear edge to remain fixed while part is rebent 
                 <br>  Created in NX7.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::NXObject * ReferenceEntity
                (
                );
                /**Sets  the non-thickness planar face or linear edge to remain fixed while part is rebent 
                 <br>  Created in NX7.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetReferenceEntity
                (
                    NXOpen::NXObject * referenceEntity /** reference entity */ 
                );
                /**Returns  the unbent faces to rebend 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::ScCollector * FaceCollector
                (
                );
                /**Sets  the unbent faces to rebend 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetFaceCollector
                (
                    NXOpen::ScCollector * faceCollector /** face collector */ 
                );
                /** Verify whether the builder data is valid for creating Rebend or not.
                             <br> 
                                 If the Builder data is valid, returned value shall be 0

                             <br> 
                         @return  
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: int ValidateBuilderData
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
