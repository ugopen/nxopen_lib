#ifndef NXOpen_DRAWINGS_SECTIONLINECOLLECTION_HXX_INCLUDED
#define NXOpen_DRAWINGS_SECTIONLINECOLLECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_SectionLineCollection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <iterator>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_SectionLineBuilder.hxx>
#include <NXOpen/Drawings_SectionLineSegmentBuilder.hxx>
#include <NXOpen/Drawings_SectionLineStyleBuilder.hxx>
#include <NXOpen/Drawings_SketchSectionLineBuilder.hxx>
#include <NXOpen/TaggedObjectCollection.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_drawings_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drawings
    {
        class SectionLineCollection;
    }
    class DraftingManager;
    namespace Drawings
    {
        class SectionLine;
    }
    namespace Annotations
    {
        class BaseNote;
    }
    namespace Drawings
    {
        class SectionLineBuilder;
    }
    namespace Drawings
    {
        class SectionLineSegmentBuilder;
    }
    namespace Drawings
    {
        class SectionLineStyleBuilder;
    }
    namespace Drawings
    {
        class SketchSectionLineBuilder;
    }
    namespace Drawings
    {
        class SectionLineCollectionImpl;
        /** Represents a collection of @link NXOpen::Drawings::SectionLine NXOpen::Drawings::SectionLine@endlink s.    <br> Use @link DraftingManager::SectionLines DraftingManager::SectionLines@endlink  to get the instance of this class.  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_DRAWINGSEXPORT  SectionLineCollection : public NXOpen::TaggedObjectCollection
        {
            private: SectionLineCollectionImpl * m_sectionlinecollection_impl;
            private: NXOpen::DraftingManager* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit SectionLineCollection(NXOpen::DraftingManager *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~SectionLineCollection();
            /** Iterator for accessing the contents of the collection. */
            //lint -sem(NXOpen::Drawings::SectionLineCollection::iterator::copy,initializer)
            class iterator : public std::iterator<std::forward_iterator_tag, NXOpen::Drawings::SectionLine *>
            {
            public:
                /** Default constructor */
                iterator() : m_context(NULL), m_current(NULL_TAG)
                {
                    // coverity[uninit_member]
                } //lint !e1401 m_state is not initialized
                /// \cond NX_NO_DOC
                explicit iterator(NXOpen::Drawings::SectionLineCollection *context) : m_context(context), m_current(NULL_TAG)
                {
                    // coverity[uninit_member]
                }//lint !e1401 m_state is not initialized
                /// \endcond
                /** Copy constructor */
                iterator(const iterator &other): m_context(NULL), m_current(NULL_TAG)
                {
                    copy(other);
                }
                /** Copy constructor */
                iterator &operator =(const iterator &other)
                {
                    if (&other != this)
                        copy(other);
                    return *this;
                }
                /** Tests if the iterator objects on the left side and the right side of the operator are equal. */
                bool operator ==(const iterator &other) const
                {
                    return m_current == other.m_current && m_context == other.m_context;
                }
                /** Tests if the iterator objects on the left side and the right side of the operator are not equal. */
                bool operator !=(const iterator &other) const
                {
                    return !operator == (other);
                }
                /** Return the element currently pointed to by the iterator. */
                NXOPENCPP_DRAWINGSEXPORT  value_type operator * ();
                /** Points the iterator to next element. */
                iterator & operator ++()
                {
                    next();
                    return *this;
                }
                /** Points the iterator to next element. */
                iterator operator ++(int)
                {
                    iterator tmp(*this);
                    ++*this;
                    return tmp;
                }
            private:
                void copy(const iterator &other)
                {
                    m_context = other.m_context;
                    m_current = other.m_current;
                    for (int i = 0; i < sizeof(m_state)/sizeof(m_state[0]); i++)
                         m_state[i] = other.m_state[i];
                }
                NXOPENCPP_DRAWINGSEXPORT  void next();
                NXOpen::Drawings::SectionLineCollection *m_context;
                tag_t m_current;
                unsigned int m_state[8];
            };
            /** Returns an iterator addressing the first element. */
            iterator begin();
            /** Returns an iterator addressing one past the last element. */
            iterator end()
            {
                return iterator(this);
            }
            /** Creates the section line builder  @return  
             <br>  @deprecated Deprecated in NX10.0.0.  Use @link Drawings::SectionViewBuilder::SectionLineSegments Drawings::SectionViewBuilder::SectionLineSegments@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public:  NX_DEPRECATED("Deprecated in NX10.0.0.  Use Drawings::SectionViewBuilder::SectionLineSegments instead.") NXOpen::Drawings::SectionLineBuilder * CreateSectionLineBuilder
            (
                NXOpen::Drawings::SectionLine * sectionLine /** sectionline */ 
            );
            /** Creates the section line segment builder  @return  
             <br>  @deprecated Deprecated in NX10.0.0.  Use @link Drawings::SectionViewBuilder::SectionLineSegments Drawings::SectionViewBuilder::SectionLineSegments@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public:  NX_DEPRECATED("Deprecated in NX10.0.0.  Use Drawings::SectionViewBuilder::SectionLineSegments instead.") NXOpen::Drawings::SectionLineSegmentBuilder * CreateSectionLineSegmentBuilder
            (
            );
            /** Creates the Section Line Style Builder  @return  
             <br>  @deprecated Deprecated in NX10.0.0.  Use @link NXOpen::Drawings::ViewSectionLineBuilder NXOpen::Drawings::ViewSectionLineBuilder@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public:  NX_DEPRECATED("Deprecated in NX10.0.0.  Use NXOpen::Drawings::ViewSectionLineBuilder instead.") NXOpen::Drawings::SectionLineStyleBuilder * CreateSectionLineStyleBuilder
            (
                NXOpen::Drawings::SectionLine * sectionline /** sectionline */ 
            );
            /** Creates the Sketch Section Line builder  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NXOpen::Drawings::SketchSectionLineBuilder * CreateSketchSectionLineBuilder
            (
                NXOpen::Drawings::SectionLine * sectionLine /** sectionline */ 
            );
            /** Generates a parametric text attribute that is similar to the current section line label but contains the section line segment information.
                    Note that the text in the section line note is not overwritten.
                     @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NXString GenerateSectionLineLabelAttribute
            (
                NXOpen::Annotations::BaseNote * note /** The section line note to generate the attribute from */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
