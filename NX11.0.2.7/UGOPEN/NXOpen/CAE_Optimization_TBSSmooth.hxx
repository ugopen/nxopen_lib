#ifndef NXOpen_CAE_OPTIMIZATION_TBSSMOOTH_HXX_INCLUDED
#define NXOpen_CAE_OPTIMIZATION_TBSSMOOTH_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Optimization_TBSSmooth.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Optimization_TBSSmooth.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Optimization
        {
            class TBSSmooth;
        }
    }
    class NXObject;
    namespace CAE
    {
        namespace Optimization
        {
            class _TBSSmoothBuilder;
            class TBSSmoothImpl;
            /** Represents the parameters that control the generation of surfaces by optimization  <br> To create or edit an instance of this class, use @link NXOpen::CAE::Optimization::TBSSmoothBuilder  NXOpen::CAE::Optimization::TBSSmoothBuilder @endlink  <br> 
             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  TBSSmooth : public NXOpen::NXObject
            {
                private: TBSSmoothImpl * m_tbssmooth_impl;
                private: friend class  _TBSSmoothBuilder;
                protected: TBSSmooth();
                public: ~TBSSmooth();
                /** Executes the surface generation 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void Execute
                (
                );
                /** Rename smooth and optionally rename associated results files 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: void Rename
                (
                    const NXString & name /** new solution name */,
                    bool renameResults /** true if you what associated results files to be renamed as well  */
                );
                /** Rename smooth and optionally rename associated results files 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                void Rename
                (
                    const char * name /** new solution name */,
                    bool renameResults /** true if you what associated results files to be renamed as well  */
                );
                /** Returns the result file name and status for the smoothing setting  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetResults
                (
                );
                /** Deletes a smooth and the associated result file optional 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void Destroy
                (
                    bool deleteResult /**  true if you want associated result files to be deleted as well */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
