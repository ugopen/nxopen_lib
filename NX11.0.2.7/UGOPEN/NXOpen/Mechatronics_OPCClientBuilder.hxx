#ifndef NXOpen_MECHATRONICS_OPCCLIENTBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_OPCCLIENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_OPCClientBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Mechatronics_OPCClientBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class OPCClientBuilder;
    }
    class Builder;
    class Expression;
    namespace Mechatronics
    {
        class _OPCClientBuilderBuilder;
        class OPCClientBuilderImpl;
        /** Represents a @link NXOpen::Mechatronics::OPCClientBuilder NXOpen::Mechatronics::OPCClientBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::Mechatronics::PhysicsManager::CreateOpcclientBuilder  NXOpen::Mechatronics::PhysicsManager::CreateOpcclientBuilder @endlink  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  OPCClientBuilder : public NXOpen::Builder
        {
            /** the server option. */
            public: enum ServerOption
            {
                ServerOptionLocal/** local server */,
                ServerOptionRemote/** remote server */,
                ServerOptionInProc/** in proc server */
            };

            /** the data type of OPC item. */
            public: enum TagDataType
            {
                TagDataTypeUnknown/** unknown type */,
                TagDataTypeInteger/** integer type */,
                TagDataTypeFloat/** float   type */,
                TagDataTypeBoolean/** boolean type */
            };

            /** the access right of OPC item. */
            public: enum TagAccess
            {
                TagAccessReadOnly/** read only */ = 1,
                TagAccessWriteOnly/** write only */,
                TagAccessReadWrite/** read and write */
            };

             /** the attribute of OPC item. */
            public:
            struct  TagAttribute
            {
                public: /** item Name */NXString TagName;
                public: /** Data Type */NXOpen::Mechatronics::OPCClientBuilder::TagDataType TagType;
                public: /** Access Right */NXOpen::Mechatronics::OPCClientBuilder::TagAccess TagAccess;
                public: TagAttribute() :
                    TagName(),
                    TagType((NXOpen::Mechatronics::OPCClientBuilder::TagDataType)0),
                    TagAccess((NXOpen::Mechatronics::OPCClientBuilder::TagAccess)0)
                {
                }
                /** Constructor for the TagAttribute struct. */ 
                public: TagAttribute(const NXString &tagNameInitial /** item Name */, 
                        NXOpen::Mechatronics::OPCClientBuilder::TagDataType tagTypeInitial /** Data Type */, 
                        NXOpen::Mechatronics::OPCClientBuilder::TagAccess tagAccessInitial /** Access Right */) :
                    TagName(tagNameInitial),
                    TagType(tagTypeInitial),
                    TagAccess(tagAccessInitial)
                {
                }
            };

            private: OPCClientBuilderImpl * m_opcclientbuilder_impl;
            private: friend class  _OPCClientBuilderBuilder;
            protected: OPCClientBuilder();
            public: ~OPCClientBuilder();
            /**Returns  the server type. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::OPCClientBuilder::ServerOption ServerType
            (
            );
            /**Sets  the server type. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetServerType
            (
                NXOpen::Mechatronics::OPCClientBuilder::ServerOption serverType /** servertype */ 
            );
            /**Returns  the server prog ID. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ServerProgID
            (
            );
            /**Sets  the server prog ID. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetServerProgID
            (
                const NXString & serverProgID /** serverprogid */ 
            );
            /**Sets  the server prog ID. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetServerProgID
            (
                const char * serverProgID /** serverprogid */ 
            );
            /**Returns  the host name. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString HostName
            (
            );
            /**Sets  the host name. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetHostName
            (
                const NXString & hostName /** hostname */ 
            );
            /**Sets  the host name. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetHostName
            (
                const char * hostName /** hostname */ 
            );
            /**Returns  the update time. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * UpdateTime
            (
            );
            /**Returns  the opc file browser. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString OpcFileBrowser
            (
            );
            /**Sets  the opc file browser. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetOpcFileBrowser
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the opc file browser. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetOpcFileBrowser
            (
                const char * filename /** filename */ 
            );
            /** Delete item from the list. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void DeleteTags
            (
            );
            /** Add item to the list. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void AddTags
            (
            );
            /** Get the available OPC items. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void GetAvailableItems
            (
                std::vector<NXString> & tagName /** tagname */ ,
                std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagDataType> & tagType /** tagtype */ 
            );
            /** Set the available OPC items. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetAvailableItems
            (
                const std::vector<NXString> & tagName /** tagname */ ,
                const std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagDataType> & tagType /** tagtype */ 
            );
            /** Get the attribute of OPC items 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void GetItemAttributes
            (
                std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagAttribute> & attr /** attr */ 
            );
            /** Set the attribute of OPC items 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetItemAttributes
            (
                const std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagAttribute> & attr /** attr */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
