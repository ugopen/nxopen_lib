#ifndef NXOpen_SPLINE_HXX_INCLUDED
#define NXOpen_SPLINE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Spline.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Curve.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class Spline;
    class Curve;
    class _SplineBuilder;
    class SplineImpl;
    /** Represents a spline curve.  <br> To create an instance of this object cannot be created at this time.  <br> 
     <br>  Created in NX3.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  Spline : public NXOpen::Curve
    {
        private: SplineImpl * m_spline_impl;
        private: friend class  _SplineBuilder;
        protected: Spline();
        public: ~Spline();
        /**Returns  the order of the spline 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: int Order
        (
        );
        /**Returns  the periodicity of the spline 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: bool Periodic
        (
        );
        /**Returns  the rationality of the spline 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: bool Rational
        (
        );
        /** Returns the knots  @return  
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: std::vector<double> GetKnots
        (
        );
        /**Returns  the number of poles, includes the duplicates in case of periodic spline. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: int PoleCount
        (
        );
        /** Returns the homogeneous poles. Includes the duplicates in case of periodic spline.  @return  
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: std::vector<NXOpen::Point4d> GetPoles
        (
        );
        /** Returns poles in three-dimensional cartesian coordinates of a normalized representation of the spline.
                In case of periodic spline, returns unique poles without duplicates.  @return  
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: std::vector<NXOpen::Point3d> Get3DPoles
        (
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
