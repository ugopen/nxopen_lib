#ifndef NXOpen_CAM_CUTREGIONSDATA_HXX_INCLUDED
#define NXOpen_CAM_CUTREGIONSDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_CutRegionsData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class CutRegionsData;
    }
    namespace CAM
    {
        class CutRegionsDataImpl;

        /// \cond NX_NO_DOC 
        /** Represents the Cut Regions data 
         <br>  Created in NX10.0.2.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  CutRegionsData : public NXOpen::TransientObject
        {
            private: CutRegionsDataImpl * m_cutregionsdata_impl;
            /// \cond NX_NO_DOC 
            public: explicit CutRegionsData(void *ptr);
            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : None */
            public: virtual ~CutRegionsData();

            /// \cond NX_NO_DOC 
            /**Returns  the sort status 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: bool IsSorted
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Sort regions 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SortRegions
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the number of regions 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int NumberRegions
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Regions Centroid Points  @return  
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: std::vector<NXOpen::Point3d> GetCentroidPoints
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Regions Areas  @return  
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: std::vector<double> GetAreas
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Regions Order  @return  
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: std::vector<int> GetOrder
            (
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
