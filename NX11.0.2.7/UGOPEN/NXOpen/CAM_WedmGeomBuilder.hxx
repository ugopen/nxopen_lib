#ifndef NXOpen_CAM_WEDMGEOMBUILDER_HXX_INCLUDED
#define NXOpen_CAM_WEDMGEOMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_WedmGeomBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_WedmGeomBuilder.hxx>
#include <NXOpen/CAM_WedmPointDefinitionBuilder.hxx>
#include <NXOpen/CAM_NCGroupBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class WedmGeomBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class InheritableIntBuilder;
    }
    namespace CAM
    {
        class LayoutCiBuilder;
    }
    namespace CAM
    {
        class NCGroupBuilder;
    }
    namespace CAM
    {
        class NcmWedmBuilder;
    }
    namespace CAM
    {
        class WedmArcOutputTypeCiBuilder;
    }
    namespace CAM
    {
        class WedmCustomBoundaryDataBuilderList;
    }
    namespace CAM
    {
        class WedmCutParameters;
    }
    namespace CAM
    {
        class WedmPointDefinitionBuilder;
    }
    namespace CAM
    {
        class WedmStatusControlCiBuilder;
    }
    namespace CAM
    {
        class _WedmGeomBuilderBuilder;
        class WedmGeomBuilderImpl;
        /** Represents a WedmGeom Builder  <br> To create a new instance of this class, use @link NXOpen::CAM::NCGroupCollection::CreateWedmGeomBuilder  NXOpen::CAM::NCGroupCollection::CreateWedmGeomBuilder @endlink  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  WedmGeomBuilder : public NXOpen::CAM::NCGroupBuilder
        {
            /** the types available for wedm backburn passes 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum BackburnPassesTypes
            {
                BackburnPassesTypesSingle/** single backburn pass */,
                BackburnPassesTypesMultipleRegionFirst/** multiple backburn passes - region first */,
                BackburnPassesTypesMultipleCutoffFirst/** multiple backburn passes - cutoff first */,
                BackburnPassesTypesSingleLastFinish/** single backburn pass - last finish */
            };

            /** the types available for wedm stop point 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum StopPointFlagTypes
            {
                StopPointFlagTypesNone/** stop point option none */,
                StopPointFlagTypesSpecify/** stop point option specify */
            };

            /** the types available for wedm stop point 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum StopPointTypes
            {
                StopPointTypesOpstop/** stop point option opstop */,
                StopPointTypesStop/** stop point option stop */
            };

            /** the types available for smooth_lead_in 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum SmoothLeadInTypes
            {
                SmoothLeadInTypesNone/** smooth leadin type none */,
                SmoothLeadInTypesSpecify/** smooth leadin type specify */
            };

            /** the types available for smooth_lead_out_types 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum SmoothLeadOutTypes
            {
                SmoothLeadOutTypesNone/** smooth leadin type none */,
                SmoothLeadOutTypesSpecify/** smooth leadin type specify */
            };

            /** the types available for convex corner control 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum ConvexCornerTypes
            {
                ConvexCornerTypesRollAround/** roll around */,
                ConvexCornerTypesLoops/** loop */,
                ConvexCornerTypesExtendAndTrim/** extend tangents */
            };

            /** the types available for corner smoothing 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum CornerSmoothingType
            {
                CornerSmoothingTypeNone/** none */,
                CornerSmoothingTypeAllPasses/** all passes */
            };

            private: WedmGeomBuilderImpl * m_wedmgeombuilder_impl;
            private: friend class  _WedmGeomBuilderBuilder;
            protected: WedmGeomBuilder();
            public: ~WedmGeomBuilder();
            /**Returns  the Backburn Passes 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmGeomBuilder::BackburnPassesTypes BackburnPasses
            (
            );
            /**Sets  the Backburn Passes 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetBackburnPasses
            (
                NXOpen::CAM::WedmGeomBuilder::BackburnPassesTypes backburnPasses /** the Backburn Passes  */
            );
            /**Returns  the Stop Point Flag 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmGeomBuilder::StopPointFlagTypes StopPointFlag
            (
            );
            /**Sets  the Stop Point Flag 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStopPointFlag
            (
                NXOpen::CAM::WedmGeomBuilder::StopPointFlagTypes stopPointFlag /** the Stop Point Flag  */
            );
            /**Returns  the Stop Point Type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmGeomBuilder::StopPointTypes StopPointType
            (
            );
            /**Sets  the Stop Point Type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStopPointType
            (
                NXOpen::CAM::WedmGeomBuilder::StopPointTypes stopPointType /** the Stop Point Type  */
            );
            /**Returns  the Smooth Leadin Flag 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmGeomBuilder::SmoothLeadInTypes SmoothLeadInOption
            (
            );
            /**Sets  the Smooth Leadin Flag 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSmoothLeadInOption
            (
                NXOpen::CAM::WedmGeomBuilder::SmoothLeadInTypes leadInFlag /** the Smooth Leadin Flag  */
            );
            /**Returns  the Smooth Leadout Flag 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmGeomBuilder::SmoothLeadOutTypes SmoothLeadOutOption
            (
            );
            /**Sets  the Smooth Leadout Flag 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSmoothLeadOutOption
            (
                NXOpen::CAM::WedmGeomBuilder::SmoothLeadOutTypes leadOutOption /** the Smooth Leadout Flag  */
            );
            /**Returns  the Tab Points 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int NumTabs
            (
            );
            /**Sets  the Tab Points 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetNumTabs
            (
                int numTabs /** the Num Tabs  */
            );
            /**Returns  the Tab Points Region Method 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int RegionMethod
            (
            );
            /**Sets  the Tab Points Region Method 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetRegionMethod
            (
                int regionMethod /** the Tab Points Region Method  */
            );
            /**Returns  the Save Layer/Layout builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::LayoutCiBuilder * LayoutCiBuilder
            (
            );
            /**Returns  the Cutoff Flag 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int CutoffFlag
            (
            );
            /**Sets  the Cutoff Flag 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCutoffFlag
            (
                int cutoffFlag /** the Cutoff Flag  */
            );
            /**Returns  the Rough and Backburn Flag 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int BackburnFlag
            (
            );
            /**Sets  the Rough and Backburn Flag 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetBackburnFlag
            (
                int backburnFlag /** the Backburn Flag  */
            );
            /**Returns  the convex_corner 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmGeomBuilder::ConvexCornerTypes ConvexCorner
            (
            );
            /**Sets  the convex_corner 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetConvexCorner
            (
                NXOpen::CAM::WedmGeomBuilder::ConvexCornerTypes convexCorner /** the cutcom_reg  */
            );
            /**Returns  the smoothing 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmGeomBuilder::CornerSmoothingType Smoothing
            (
            );
            /**Sets  the smoothing 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSmoothing
            (
                NXOpen::CAM::WedmGeomBuilder::CornerSmoothingType smoothing /** the smoothing  */
            );
            /**Returns  the loop radius 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * LoopRadius
            (
            );
            /**Returns  the minimum loop angle 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * MinimumLoopAngle
            (
            );
            /**Returns  the maximum loop angle 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * MaximumLoopAngle
            (
            );
            /**Returns  the rough_passes builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableIntBuilder * RoughPassesBuilder
            (
            );
            /**Returns  the finish_passes builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableIntBuilder * FinishPassesBuilder
            (
            );
            /**Returns  the stop_point_distance builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * StopPointDistanceBuilder
            (
            );
            /**Returns  the smooth_lead_out_distance builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * SmoothLeadOutDistanceBuilder
            (
            );
            /**Returns  the cutoff_stock builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * CutoffStockBuilder
            (
            );
            /**Returns  the cutoff_distance builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * CutoffDistanceBuilder
            (
            );
            /**Returns  the cutoff_flag builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableIntBuilder * CutoffFlagBuilder
            (
            );
            /**Returns  the backburn_distance builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * BackburnDistanceBuilder
            (
            );
            /**Returns  the nocore_stock builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * NocoreStockBuilder
            (
            );
            /**Returns  the corner_radius builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * CornerRadiusBuilder
            (
            );
            /**Returns  the corner_minimum_angle builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * CornerMinimumAngleBuilder
            (
            );
            /**Returns  the corner_maximum_angle builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * CornerMaximumAngleBuilder
            (
            );
            /**Returns  the lead_in_radius_builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * LeadInRadiusBuilder
            (
            );
            /**Returns  the lead_in_circle_angle_builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * LeadInCircleAngleBuilder
            (
            );
            /**Returns  the lead_out_radius_builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * LeadOutRadiusBuilder
            (
            );
            /**Returns  the lead_out_circle_angle_builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * LeadOutCircleAngleBuilder
            (
            );
            /**Returns  the cut parameter object 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::WedmCutParameters * CutParameters
            (
            );
            /**Returns  the non-cutting builder
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::NcmWedmBuilder * NcmWedmBuilder
            (
            );
            /**Returns  the wedm arc output type Builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmArcOutputTypeCiBuilder * WedmArcOutputTypeCiBuilder
            (
            );
            /**Returns  the wedm status control ci Builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmStatusControlCiBuilder * WedmStatusControlCiBuilder
            (
            );
            /**Returns  the retract point 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmPointDefinitionBuilder * RetractPoint
            (
            );
            /**Returns  the thread hole point 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmPointDefinitionBuilder * ThreadHolePoint
            (
            );
            /**Returns  the lead in point 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmPointDefinitionBuilder * LeadInPoint
            (
            );
            /**Returns  the lead out point 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmPointDefinitionBuilder * LeadOutPoint
            (
            );
            /**Returns  the custom boundary data list 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmCustomBoundaryDataBuilderList * CustomBoundaryDataList
            (
            );
            /**Returns  the api exit name  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXString ApiExitName
            (
            );
            /**Sets  the api exit name  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetApiExitName
            (
                const NXString & exitName /**  the api exit name */
            );
            /**Sets  the api exit name  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetApiExitName
            (
                const char * exitName /**  the api exit name */
            );
            /** Execute api exit  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void ExecuteApiExit
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
