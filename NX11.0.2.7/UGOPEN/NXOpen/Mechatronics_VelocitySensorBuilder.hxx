#ifndef NXOpen_MECHATRONICS_VELOCITYSENSORBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_VELOCITYSENSORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_VelocitySensorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Mechatronics_VelocitySensorBuilder.hxx>
#include <NXOpen/Mechatronics_PhysicsConstraintBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class VelocitySensorBuilder;
    }
    class Expression;
    namespace Mechatronics
    {
        class PhysicsConstraintBuilder;
    }
    class SelectNXObject;
    namespace Mechatronics
    {
        class _VelocitySensorBuilderBuilder;
        class VelocitySensorBuilderImpl;
        /**  @brief  Represents a @link NXOpen::Mechatronics::VelocitySensor NXOpen::Mechatronics::VelocitySensor@endlink  builder.  

           <br> To create a new instance of this class, use @link NXOpen::Mechatronics::VelocitySensorCollection::CreateVelocitySensorBuilder  NXOpen::Mechatronics::VelocitySensorCollection::CreateVelocitySensorBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  VelocitySensorBuilder : public NXOpen::Mechatronics::PhysicsConstraintBuilder
        {
            /**  @brief  the Axis Joint types.  

              */
            public: enum AxisJointType
            {
                AxisJointTypeAngular/** Angular */,
                AxisJointTypeLinear/** Linear  */
            };

            /**  @brief  the Measure types.  

              */
            public: enum OutputMeasureType
            {
                OutputMeasureTypeConstant/** MEASURE_UNITLESS */,
                OutputMeasureTypeVoltage/** MEASURE_VOLTAGE */,
                OutputMeasureTypeCurrent/** MEASURE_ELECTRIC_CURRENT  */
            };

            private: VelocitySensorBuilderImpl * m_velocitysensorbuilder_impl;
            private: friend class  _VelocitySensorBuilderBuilder;
            protected: VelocitySensorBuilder();
            public: ~VelocitySensorBuilder();
            /**Returns   @brief  the joint select. This can be a @link NXOpen::Mechatronics::HingeJoint NXOpen::Mechatronics::HingeJoint@endlink , @link NXOpen::Mechatronics::SlidingJoint NXOpen::Mechatronics::SlidingJoint@endlink 
                    , @link NXOpen::Mechatronics::CylindricalJoint NXOpen::Mechatronics::CylindricalJoint@endlink , @link NXOpen::Mechatronics::PointOnCurveJoint NXOpen::Mechatronics::PointOnCurveJoint@endlink ,
                    @link NXOpen::Mechatronics::PositionControl NXOpen::Mechatronics::PositionControl@endlink  and @link NXOpen::Mechatronics::SpeedControl NXOpen::Mechatronics::SpeedControl@endlink . 

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::SelectNXObject * AxisJoint
            (
            );
            /**Returns   @brief  the axis type.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::VelocitySensorBuilder::AxisJointType AxisType
            (
            );
            /**Sets   @brief  the axis type.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetAxisType
            (
                NXOpen::Mechatronics::VelocitySensorBuilder::AxisJointType axisType /** axistype */ 
            );
            /**Returns   @brief  the use trim flag, which is used to control if the velocity sensor includes trim parameters.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: bool UseTrim
            (
            );
            /**Sets   @brief  the use trim flag, which is used to control if the velocity sensor includes trim parameters.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetUseTrim
            (
                bool useTrim /** usetrim */ 
            );
            /**Returns   @brief  the lower trim range used to trim the velocity data.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Expression * LowerTrimRange
            (
            );
            /**Returns   @brief  the upper trim range used to trim the velocity data.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Expression * UpperTrimRange
            (
            );
            /**Returns   @brief  the use scale flag, which is used to control if the velocity sensor includes scale parameters.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: bool UseScale
            (
            );
            /**Sets   @brief  the use scale flag, which is used to control if the velocity sensor includes scale parameters.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetUseScale
            (
                bool useScale /** usescale */ 
            );
            /**Returns   @brief  the measure type.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::VelocitySensorBuilder::OutputMeasureType MeasureType
            (
            );
            /**Sets   @brief  the measure type.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetMeasureType
            (
                NXOpen::Mechatronics::VelocitySensorBuilder::OutputMeasureType measureType /** measuretype */ 
            );
            /**Returns   @brief  the lower output range used to scale the velocity data. Its measure type contains constant, voltage, current  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Expression * LowerOutputRange
            (
            );
            /**Returns   @brief  the upper output range used to scale the velocity data.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Expression * UpperOutputRange
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
