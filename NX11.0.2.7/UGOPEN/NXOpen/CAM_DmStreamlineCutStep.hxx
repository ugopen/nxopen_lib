#ifndef NXOpen_CAM_DMSTREAMLINECUTSTEP_HXX_INCLUDED
#define NXOpen_CAM_DMSTREAMLINECUTSTEP_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_DmStreamlineCutStep.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_DPMItpBuilder.hxx>
#include <NXOpen/CAM_DmStreamlineCutStep.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class DmStreamlineCutStep;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class _DmStreamlineCutStepBuilder;
        class DmStreamlineCutStepImpl;
        /** Represents a streamline cut step builder  <br> This object is a sub-object and cannot be instantiated.  <br> 
         <br>  Created in NX10.0.1.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  DmStreamlineCutStep : public NXOpen::TaggedObject
        {
            private: DmStreamlineCutStepImpl * m_dmstreamlinecutstep_impl;
            private: friend class  _DmStreamlineCutStepBuilder;
            protected: DmStreamlineCutStep();
            public: ~DmStreamlineCutStep();
            /**Returns  the cut step type which defines different cut steps including tolerances and points number
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DPMItpBuilder::StepMethodOption CutStepType
            (
            );
            /**Sets  the cut step type which defines different cut steps including tolerances and points number
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCutStepType
            (
                NXOpen::CAM::DPMItpBuilder::StepMethodOption type /** the cut step type value */
            );
            /**Returns  the step Intol which defines the inner tolerance
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * StepIntol
            (
            );
            /**Returns  the step Outol which defines the outer tolerance
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * StepOutol
            (
            );
            /**Returns  the first cut which defines point number for the first cut
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : None */
            public: int FirstCut
            (
            );
            /**Sets  the first cut which defines point number for the first cut
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFirstCut
            (
                int firstCut /** the first cut value */
            );
            /**Returns  the second cut which defines point number for the second cut
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : None */
            public: int SecondCut
            (
            );
            /**Sets  the second cut which defines point number for the second cut
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSecondCut
            (
                int secondCut /** the second cut value */
            );
            /**Returns  the third cut which defines point number for the third cut and is available when cut pattern is follow
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : None */
            public: int ThirdCut
            (
            );
            /**Sets  the third cut which defines point number for the third cut and is available when cut pattern is follow
             <br>  Created in NX10.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetThirdCut
            (
                int thirdCut /** the third cut value */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
