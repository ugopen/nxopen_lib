#ifndef NXOpen_CAM_DIMENSIONRULE_HXX_INCLUDED
#define NXOpen_CAM_DIMENSIONRULE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_DimensionRule.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_DimensionRule.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class DimensionRule;
    }
    namespace CAM
    {
        class _DimensionRuleBuilder;
        class DimensionRuleImpl;
        /** Represents a DimensionRule Builder 
         <br>  Created in NX11.0.2.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  DimensionRule : public NXOpen::TaggedObject
        {
            /** dimension rule types 
             <br>  Created in NX11.0.2.  <br>  
            */
            public: enum Types
            {
                TypesValue/** Value */,
                TypesToolDiameter/** Tool Diameter Percentage */,
                TypesFluteLength/** Tool Flute Length Percentage */
            };

            private: DimensionRuleImpl * m_dimensionrule_impl;
            private: friend class  _DimensionRuleBuilder;
            protected: DimensionRule();
            public: ~DimensionRule();
            /**Returns  the dimension rule status 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: bool Status
            (
            );
            /**Sets  the dimension rule status 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStatus
            (
                bool newStatus /** the dimension rule status */
            );
            /**Returns  the dimension rule type 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DimensionRule::Types Type
            (
            );
            /**Sets  the dimension rule type 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetType
            (
                NXOpen::CAM::DimensionRule::Types newType /** the dimension rule type */
            );
            /**Returns  the dimension rule value 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: double Value
            (
            );
            /**Sets  the dimension rule value 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetValue
            (
                double newValue /** the dimension rule value */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
