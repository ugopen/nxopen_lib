#ifndef NXOpen_MOTION_MOTIONSOLUTION_HXX_INCLUDED
#define NXOpen_MOTION_MOTIONSOLUTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_MotionSolution.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion_AnimationControl.hxx>
#include <NXOpen/Motion_ArticulationControl.hxx>
#include <NXOpen/Motion_Graph.hxx>
#include <NXOpen/Motion_LoadTransferControl.hxx>
#include <NXOpen/Motion_MotionSolution.hxx>
#include <NXOpen/Motion_PostToolsControl.hxx>
#include <NXOpen/Motion_SpreadsheetRunControl.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class MotionSolution;
    }
    namespace Motion
    {
        class AnimationControl;
    }
    namespace Motion
    {
        class ArticulationControl;
    }
    namespace Motion
    {
        class Graph;
    }
    namespace Motion
    {
        class LoadTransferControl;
    }
    namespace Motion
    {
        class PostToolsControl;
    }
    namespace Motion
    {
        class SpreadsheetRunControl;
    }
    class NXObject;
    class Unit;
    namespace Motion
    {
        class _MotionSolutionBuilder;
        class MotionSolutionImpl;
        /** Represents a solution  <br> To create or edit an instance of this class, use @link NXOpen::Motion::MotionSolutionBuilder  NXOpen::Motion::MotionSolutionBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  MotionSolution : public NXOpen::NXObject
        {
            private: MotionSolutionImpl * m_motionsolution_impl;
            private: friend class  _MotionSolutionBuilder;
            protected: MotionSolution();
            public: ~MotionSolution();
            /** Solve normal run solution 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SolveNormalRunSolution
            (
            );
            /** Export motion host cosim mfiles
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_motion_cosim ("NX Motion CoSimulation") */
            public: void ExportMotionHostCosimMfiles
            (
            );
            /** Edit runsimulink mfile 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_motion_cosim ("NX Motion CoSimulation") */
            public: void EditRunsimulinkMfile
            (
            );
            /** Export simulink host cosim mfiles
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_motion_cosim ("NX Motion CoSimulation") */
            public: void ExportSimulinkHostCosimMfiles
            (
            );
            /** Calculate gruebler count of motion solution  @return  The gruebler count 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: int CalculateGrueblerCount
            (
            );
            /** Adds a solution solved object to a solution 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void AddObject
            (
                NXOpen::NXObject * object /** The solution solved object */
            );
            /** Removes a solution solved object from a solution 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void RemoveObject
            (
                NXOpen::NXObject * object /** The solution solved object */
            );
            /** Adds a suppressed object to a solution 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void AddSuppressedObject
            (
                NXOpen::NXObject * object /** The solution suppressed object */
            );
            /** Removes a suppressed object from a solution 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void RemoveSuppressedObject
            (
                NXOpen::NXObject * object /** The solution suppressed object */
            );
            /** Get @link NXOpen::Motion::AnimationControl NXOpen::Motion::AnimationControl@endlink  object, must be called before any other animation control operation, and 
                    the finish API must be call if not use anymore  @return  The @link NXOpen::Motion::AnimationControl NXOpen::Motion::AnimationControl@endlink  object 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::AnimationControl * GetAnimationControl
            (
            );
            /** Get @link NXOpen::Motion::ArticulationControl NXOpen::Motion::ArticulationControl@endlink  object, must be called before any other articulation control operation, and 
                    the finish API must be call if not use anymore  @return  The @link NXOpen::Motion::ArticulationControl NXOpen::Motion::ArticulationControl@endlink  object 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::ArticulationControl * GetArticulationControl
            (
            );
            /** Get @link NXOpen::Motion::SpreadsheetRunControl NXOpen::Motion::SpreadsheetRunControl@endlink  object, must be called before any other spreadsheet run control operation, and 
                    the finish API must be call if not use anymore  @return  The @link NXOpen::Motion::SpreadsheetRunControl NXOpen::Motion::SpreadsheetRunControl@endlink  object 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SpreadsheetRunControl * GetSpreadsheetRunControl
            (
                const NXString & spreadsheetName /** spreadsheetname */ 
            );
            /** Get @link NXOpen::Motion::SpreadsheetRunControl NXOpen::Motion::SpreadsheetRunControl@endlink  object, must be called before any other spreadsheet run control operation, and 
                    the finish API must be call if not use anymore  @return  The @link NXOpen::Motion::SpreadsheetRunControl NXOpen::Motion::SpreadsheetRunControl@endlink  object 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            NXOpen::Motion::SpreadsheetRunControl * GetSpreadsheetRunControl
            (
                const char * spreadsheetName /** spreadsheetname */ 
            );
            /** Get @link NXOpen::Motion::LoadTransferControl NXOpen::Motion::LoadTransferControl@endlink  object, must be called before any other load transfer control operation.
                    @link NXOpen::Motion::LoadTransferControl::Finish NXOpen::Motion::LoadTransferControl::Finish@endlink  must be called after use is over.  @return  The @link NXOpen::Motion::LoadTransferControl NXOpen::Motion::LoadTransferControl@endlink  object 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::LoadTransferControl * GetLoadTransferControl
            (
            );
            /** Get @link NXOpen::Motion::PostToolsControl NXOpen::Motion::PostToolsControl@endlink  object, must be called before any other post tools control operation.
                    @link NXOpen::Motion::PostToolsControl::Finish NXOpen::Motion::PostToolsControl::Finish@endlink  must be called after use is over.  @return  The @link NXOpen::Motion::PostToolsControl NXOpen::Motion::PostToolsControl@endlink  object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::PostToolsControl * GetPostToolsControl
            (
            );
            /** Get the result of the graph object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void GetGraphObjectResult
            (
                NXOpen::Motion::Graph * graph /** graph */ ,
                std::vector<double> & resultPoints /** Need to free it*/,
                NXOpen::Unit ** unit /** unit */ 
            );
            /** Save the result of graph to spreadsheet 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SaveGraphObjectToSpreadsheet
            (
                NXOpen::Motion::Graph * xGraph /** xgraph */ ,
                const std::vector<NXOpen::Motion::Graph *> & yGraphs /** ygraphs */ ,
                bool showGraph /** showgraph */ ,
                bool writeTime /** writetime */ 
            );
            /** Save the result of graph to afu file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SaveGraphObjectToAfu
            (
                const NXString & fileName /** file name */ ,
                NXOpen::Motion::Graph * xGraph /** xgraph */ ,
                NXOpen::Motion::Graph * yGraph /** ygraph */ 
            );
            /** Save the result of graph to afu file 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SaveGraphObjectToAfu
            (
                const char * fileName /** file name */ ,
                NXOpen::Motion::Graph * xGraph /** xgraph */ ,
                NXOpen::Motion::Graph * yGraph /** ygraph */ 
            );
            /** Load result 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void LoadResult
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
