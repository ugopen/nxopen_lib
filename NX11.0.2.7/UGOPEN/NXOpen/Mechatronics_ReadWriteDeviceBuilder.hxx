#ifndef NXOpen_MECHATRONICS_READWRITEDEVICEBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_READWRITEDEVICEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_ReadWriteDeviceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mechatronics_ReadWriteDeviceBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class ReadWriteDeviceBuilder;
    }
    class Builder;
    namespace Mechatronics
    {
        class SelectCollisionSensor;
    }
    namespace Mechatronics
    {
        class TagFormObject;
    }
    namespace Mechatronics
    {
        class TagTableObject;
    }
    namespace Mechatronics
    {
        class _ReadWriteDeviceBuilderBuilder;
        class ReadWriteDeviceBuilderImpl;
        /**
            Represents a @link NXOpen::Mechatronics::ReadWriteDeviceBuilder NXOpen::Mechatronics::ReadWriteDeviceBuilder@endlink .
             <br> To create a new instance of this class, use @link NXOpen::Mechatronics::ReadWriteDeviceCollection::CreateReadWriteDeviceBuilder  NXOpen::Mechatronics::ReadWriteDeviceCollection::CreateReadWriteDeviceBuilder @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  ReadWriteDeviceBuilder : public NXOpen::Builder
        {
            /** the device types. */
            public: enum DeviceType
            {
                DeviceTypeReader/** Reader */,
                DeviceTypeWriter/** Writer */
            };

            /** the execute modes. */
            public: enum ExecuteMode
            {
                ExecuteModeNone/** Never execute */,
                ExecuteModeAlways/** Always execute */,
                ExecuteModeOnceOnly/** Only execute once */
            };

            private: ReadWriteDeviceBuilderImpl * m_readwritedevicebuilder_impl;
            private: friend class  _ReadWriteDeviceBuilderBuilder;
            protected: ReadWriteDeviceBuilder();
            public: ~ReadWriteDeviceBuilder();
            /**Returns  the selected sensor @link NXOpen::Mechatronics::CollisionSensor NXOpen::Mechatronics::CollisionSensor@endlink  object. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SelectCollisionSensor * Sensor
            (
            );
            /** Gets the form @link NXOpen::Mechatronics::TagFormObject NXOpen::Mechatronics::TagFormObject@endlink  object.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::TagFormObject * GetForm
            (
            );
            /** Sets the form @link NXOpen::Mechatronics::TagFormObject NXOpen::Mechatronics::TagFormObject@endlink  object. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetForm
            (
                NXOpen::Mechatronics::TagFormObject * form /** form */ 
            );
            /** Gets the table @link NXOpen::Mechatronics::TagTableObject NXOpen::Mechatronics::TagTableObject@endlink  object.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::TagTableObject * GetTable
            (
            );
            /** Sets the table @link NXOpen::Mechatronics::TagTableObject NXOpen::Mechatronics::TagTableObject@endlink  object. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetTable
            (
                NXOpen::Mechatronics::TagTableObject * table /** table */ 
            );
            /** Gets device type.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::ReadWriteDeviceBuilder::DeviceType GetDeviceType
            (
            );
            /** Sets device type. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetDeviceType
            (
                NXOpen::Mechatronics::ReadWriteDeviceBuilder::DeviceType type /** type */ 
            );
            /** Gets execute mode.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::ReadWriteDeviceBuilder::ExecuteMode GetExecuteMode
            (
            );
            /** Sets execute mode. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetExecuteMode
            (
                NXOpen::Mechatronics::ReadWriteDeviceBuilder::ExecuteMode mode /** mode */ 
            );
            /**Returns  the name. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
