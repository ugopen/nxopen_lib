#ifndef NXOpen_MECHATRONICS_RELAYBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_RELAYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_RelayBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Mechatronics_RelayBuilder.hxx>
#include <NXOpen/Mechatronics_PhysicsConstraintBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class RelayBuilder;
    }
    class Expression;
    namespace Mechatronics
    {
        class PhysicsConstraintBuilder;
    }
    class SelectNXObject;
    namespace Mechatronics
    {
        class _RelayBuilderBuilder;
        class RelayBuilderImpl;
        /**  @brief  Represents a @link NXOpen::Mechatronics::Relay NXOpen::Mechatronics::Relay@endlink  builder.  

           <br> To create a new instance of this class, use @link NXOpen::Mechatronics::RelayCollection::CreateRelayBuilder  NXOpen::Mechatronics::RelayCollection::CreateRelayBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  RelayBuilder : public NXOpen::Mechatronics::PhysicsConstraintBuilder
        {
            private: RelayBuilderImpl * m_relaybuilder_impl;
            private: friend class  _RelayBuilderBuilder;
            protected: RelayBuilder();
            public: ~RelayBuilder();
            /**Returns   @brief  the physics select. This can be a physics object. 

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::SelectNXObject * SelectedPhysicsObject
            (
            );
            /**Returns   @brief  the Persistent Tag used in the physics object  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: int PersistentTag
            (
            );
            /**Sets   @brief  the Persistent Tag used in the physics object  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetPersistentTag
            (
                int persistentTag /** persistenttag */ 
            );
            /**Returns   @brief  the lower switch point used to judge whether need to switch the state.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Expression * LowerLimit
            (
            );
            /**Returns   @brief  the upper switch point used to judge whether need to switch the state.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Expression * UpperLimit
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
