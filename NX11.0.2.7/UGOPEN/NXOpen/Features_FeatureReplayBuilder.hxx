#ifndef NXOpen_FEATURES_FEATUREREPLAYBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_FEATUREREPLAYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_FeatureReplayBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureReplayBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class FeatureReplayBuilder;
    }
    class Builder;
    namespace Features
    {
        class _FeatureReplayBuilderBuilder;
        class FeatureReplayBuilderImpl;
        /** Represents a @link NXOpen::Features::FeatureReplayBuilder NXOpen::Features::FeatureReplayBuilder@endlink  builder. 
            @link NXOpen::Features::FeatureReplayBuilder NXOpen::Features::FeatureReplayBuilder@endlink  is used to control the feature replay 
            of a part. Using this class, one can make the first feature or the last feature current, and
            step through the features by making the next feature or previous feature current. This class also 
            allows stepping to the next boolean feature or automatically replay to a given feature. If the 
            feature to be replayed to, is more than the current feature, one can specify a delay 
            (time interval in seconds) between the replay of each of the features to observe the part construction
            with interactive NX session. When interactive NX session is not running, there will be no display of 
            objects / current features.  <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateFeatureReplayBuilder  NXOpen::Features::FeatureCollection::CreateFeatureReplayBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ReplayTimestampNumber </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SecondsBetweenSteps </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  FeatureReplayBuilder : public NXOpen::Builder
        {
            private: FeatureReplayBuilderImpl * m_featurereplaybuilder_impl;
            private: friend class  _FeatureReplayBuilderBuilder;
            protected: FeatureReplayBuilder();
            public: ~FeatureReplayBuilder();
            /** Makes the first feature of the work part current. If replay is going
                     on, it will stop. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void MakeFirstCurrent
            (
            );
            /** Makes the previous feature of the work part current. If replay is going
                     on, it will stop. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void MakePreviousCurrent
            (
            );
            /** Makes the next feature of the work part current. If replay is going
                     on, it will stop. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void MakeNextCurrent
            (
            );
            /** Makes the last feature of the work part current. If replay is going
                     on, it will stop. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void MakeLastCurrent
            (
            );
            /** Makes the next boolean feature of the work part current. If replay is going
                     on, it will stop. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void MakeNextBooleanCurrent
            (
            );
            /**Returns  the replay timestamp number of feature. If this feature is more than
                      the current feature, feature replay will continue to this feature
                      showing the steps in between. If this feature is less than the
                      current feature, this feature will be made current on next replay. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: int ReplayTimestampNumber
            (
            );
            /**Sets  the replay timestamp number of feature. If this feature is more than
                      the current feature, feature replay will continue to this feature
                      showing the steps in between. If this feature is less than the
                      current feature, this feature will be made current on next replay. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReplayTimestampNumber
            (
                int replayTimestampNumber /** replaytimestampnumber */ 
            );
            /**Returns  the delay in seconds between replay steps 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: double SecondsBetweenSteps
            (
            );
            /**Sets  the delay in seconds between replay steps 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSecondsBetweenSteps
            (
                double secondsBetweenSteps /** secondsbetweensteps */ 
            );
            /** Starts feature replay. If feature replay is in paused state, it will continue
                     from the paused state. Replay will continue to the
                     feature number as set by
                     @link NXOpen::Features::FeatureReplayBuilder::ReplayTimestampNumber NXOpen::Features::FeatureReplayBuilder::ReplayTimestampNumber @endlink and @link NXOpen::Features::FeatureReplayBuilder::SetReplayTimestampNumber NXOpen::Features::FeatureReplayBuilder::SetReplayTimestampNumber @endlink . If
                     @link NXOpen::Features::FeatureReplayBuilder::ReplayTimestampNumber NXOpen::Features::FeatureReplayBuilder::ReplayTimestampNumber @endlink and @link NXOpen::Features::FeatureReplayBuilder::SetReplayTimestampNumber NXOpen::Features::FeatureReplayBuilder::SetReplayTimestampNumber @endlink  is more
                     than the current feature, feature replay will continue to 
                     @link NXOpen::Features::FeatureReplayBuilder::ReplayTimestampNumber NXOpen::Features::FeatureReplayBuilder::ReplayTimestampNumber @endlink and @link NXOpen::Features::FeatureReplayBuilder::SetReplayTimestampNumber NXOpen::Features::FeatureReplayBuilder::SetReplayTimestampNumber @endlink  - one
                     feature at a time and there will be a delay of
                     @link NXOpen::Features::FeatureReplayBuilder::SecondsBetweenSteps NXOpen::Features::FeatureReplayBuilder::SecondsBetweenSteps @endlink and @link NXOpen::Features::FeatureReplayBuilder::SetSecondsBetweenSteps NXOpen::Features::FeatureReplayBuilder::SetSecondsBetweenSteps @endlink  seconds
                     between replay of each feature. If
                     @link NXOpen::Features::FeatureReplayBuilder::ReplayTimestampNumber NXOpen::Features::FeatureReplayBuilder::ReplayTimestampNumber @endlink and @link NXOpen::Features::FeatureReplayBuilder::SetReplayTimestampNumber NXOpen::Features::FeatureReplayBuilder::SetReplayTimestampNumber @endlink  is less
                     than the current feature, feature
                     @link NXOpen::Features::FeatureReplayBuilder::ReplayTimestampNumber NXOpen::Features::FeatureReplayBuilder::ReplayTimestampNumber @endlink and @link NXOpen::Features::FeatureReplayBuilder::SetReplayTimestampNumber NXOpen::Features::FeatureReplayBuilder::SetReplayTimestampNumber @endlink  will be
                     made current feature and no steps are shown. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void Play
            (
            );
            /** Pauses feature replay. If replay is going
                     on, it will pause. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void Pause
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
