#ifndef NXOpen_STEPCREATOR_HXX_INCLUDED
#define NXOpen_STEPCREATOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     StepCreator.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DexBuilder.hxx>
#include <NXOpen/ObjectSelector.hxx>
#include <NXOpen/ObjectTypeSelector.hxx>
#include <NXOpen/StepCreator.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class StepCreator;
    class DexBuilder;
    class ObjectSelector;
    class ObjectTypeSelector;
    class _StepCreatorBuilder;
    class StepCreatorImpl;
    /**
        Represents a @link NXOpen::StepCreator NXOpen::StepCreator@endlink  to be used when exporting the STEP Data
        This class is created using @link NXOpen::DexManager NXOpen::DexManager@endlink .
        NULL object will be returned from Commit().
        The workpart should be present in the session before calling commit().  <br> To create a new instance of this class, use @link NXOpen::DexManager::CreateStepCreator  NXOpen::DexManager::CreateStepCreator @endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    BsplineTol </td> <td> 
     
    0.0254 </td> </tr> 

    <tr><td> 
     
    ColorAndLayers </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    EntityNames </td> <td> 
     
    LongName </td> </tr> 

    <tr><td> 
     
    ExportAs </td> <td> 
     
    Ap214 </td> </tr> 

    <tr><td> 
     
    ExportExtRef </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    ExportExtRefStructureAs </td> <td> 
     
    Basic </td> </tr> 

    <tr><td> 
     
    ExportFrom </td> <td> 
     
    DisplayPart </td> </tr> 

    <tr><td> 
     
    ProcessHoldFlag </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    ValidationProperties </td> <td> 
     
    0 </td> </tr> 

    </table>  

     <br>  Created in NX11.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  StepCreator : public NXOpen::DexBuilder
    {
        /** Create the builder */
        public: enum ExportFromOption
        {
            ExportFromOptionDisplayPart/**  export data from displayed part */,
            ExportFromOptionExistingPart/**  export data from existing part which is on disk */
        };

        /** Entity Name Option */
        public: enum EntityNameOption
        {
            EntityNameOptionLongName/** create long names */,
            EntityNameOptionShortName/** create short names */
        };

        /** External Reference Structure As Option */
        public: enum ExternalReferenceStructureOption
        {
            ExternalReferenceStructureOptionBasic/** output external reference Structure as BASIC file */,
            ExternalReferenceStructureOptionNested/** output external reference Structure as NESTED file */
        };

        /** Export As option */
        public: enum ExportAsOption
        {
            ExportAsOptionAp203/**  export using AP203  */,
            ExportAsOptionAp214/**  export using AP214 */,
            ExportAsOptionAp242/** export using AP242 */
        };

        private: StepCreatorImpl * m_stepcreator_impl;
        private: friend class  _StepCreatorBuilder;
        protected: StepCreator();
        public: ~StepCreator();
        /** The save settings - this will save the settings to a file sepcified 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SaveSettings
        (
            const NXString & filename /** filename */ 
        );
        /** The save settings - this will save the settings to a file sepcified 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        void SaveSettings
        (
            const char * filename /** filename */ 
        );
        /**Returns  the export from - this option will determine if data from display part or existing part is exported 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::StepCreator::ExportFromOption ExportFrom
        (
        );
        /**Sets  the export from - this option will determine if data from display part or existing part is exported 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetExportFrom
        (
            NXOpen::StepCreator::ExportFromOption exportFrom /** exportfrom */ 
        );
        /**Returns  the input file  - name of file which is being exported.
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXString InputFile
        (
        );
        /**Sets  the input file  - name of file which is being exported.
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetInputFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the input file  - name of file which is being exported.
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        void SetInputFile
        (
            const char * filename /** filename */ 
        );
        /**Returns  the output file - the name of step file where output is being written 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXString OutputFile
        (
        );
        /**Sets  the output file - the name of step file where output is being written 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetOutputFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the output file - the name of step file where output is being written 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        void SetOutputFile
        (
            const char * filename /** filename */ 
        );
        /**Returns  the Settings File to read the default settings  
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXString SettingsFile
        (
        );
        /**Sets  the Settings File to read the default settings  
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSettingsFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the Settings File to read the default settings  
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        void SetSettingsFile
        (
            const char * filename /** filename */ 
        );
        /**Returns  the export selection block - the object selection will be done by this block. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::ObjectSelector * ExportSelectionBlock
        (
        );
        /**Returns  the objectTypes - this is subcomponent being used to set object types filters. This
                    will be used to filter objects based on the types 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::ObjectTypeSelector * ObjectTypes
        (
        );
        /**Returns  the layerMask - You can limit the data you export by only specifying the layers that 
                  contain the appropriate information. You can enter layer numbers or layers ranges 
                  separated by commas. For example, 1, 5, 88-109,190-199, 201, 206-210 is a legal specification.
                  The default setting for Layers to Export is 1-256. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXString LayerMask
        (
        );
        /**Sets  the layerMask - You can limit the data you export by only specifying the layers that 
                  contain the appropriate information. You can enter layer numbers or layers ranges 
                  separated by commas. For example, 1, 5, 88-109,190-199, 201, 206-210 is a legal specification.
                  The default setting for Layers to Export is 1-256. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetLayerMask
        (
            const NXString & layerMask /** layermask */ 
        );
        /**Sets  the layerMask - You can limit the data you export by only specifying the layers that 
                  contain the appropriate information. You can enter layer numbers or layers ranges 
                  separated by commas. For example, 1, 5, 88-109,190-199, 201, 206-210 is a legal specification.
                  The default setting for Layers to Export is 1-256. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        void SetLayerMask
        (
            const char * layerMask /** layermask */ 
        );
        /**Returns  the entity names types long or short
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::StepCreator::EntityNameOption EntityNames
        (
        );
        /**Sets  the entity names types long or short
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetEntityNames
        (
            NXOpen::StepCreator::EntityNameOption entityNames /** entitynames */ 
        );
        /**Returns  the color and layers - if set to true then NX color and layers will be preserverd
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: bool ColorAndLayers
        (
        );
        /**Sets  the color and layers - if set to true then NX color and layers will be preserverd
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetColorAndLayers
        (
            bool colorAndLayers /** colorandlayers */ 
        );
        /**Returns  the validation properties - if set to true validation properties will be created
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: bool ValidationProperties
        (
        );
        /**Sets  the validation properties - if set to true validation properties will be created
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetValidationProperties
        (
            bool validationProperties /** validationproperties */ 
        );
        /**Returns  the export ext ref - if set to true NX data can be output as external reference 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: bool ExportExtRef
        (
        );
        /**Sets  the export ext ref - if set to true NX data can be output as external reference 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetExportExtRef
        (
            bool exportExtRef /** exportextref */ 
        );
        /**Returns  the export ext ref as - specifiy the external reference Structure type 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::StepCreator::ExternalReferenceStructureOption ExportExtRefStructureAs
        (
        );
        /**Sets  the export ext ref as - specifiy the external reference Structure type 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetExportExtRefStructureAs
        (
            NXOpen::StepCreator::ExternalReferenceStructureOption exportExtRefStructureAs /** exportextrefstructureas */ 
        );
        /**Returns  the bspline tolerance 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: double BsplineTol
        (
        );
        /**Sets  the bspline tolerance 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetBsplineTol
        (
            double bsplineTol /** bsplinetol */ 
        );
        /**Returns  the author 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXString Author
        (
        );
        /**Sets  the author 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetAuthor
        (
            const NXString & author /** author */ 
        );
        /**Sets  the author 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        void SetAuthor
        (
            const char * author /** author */ 
        );
        /**Returns  the company 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXString Company
        (
        );
        /**Sets  the company 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetCompany
        (
            const NXString & company /** company */ 
        );
        /**Sets  the company 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        void SetCompany
        (
            const char * company /** company */ 
        );
        /**Returns  the authorization 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXString Authorization
        (
        );
        /**Sets  the authorization 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetAuthorization
        (
            const NXString & authorization /** authorization */ 
        );
        /**Sets  the authorization 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        void SetAuthorization
        (
            const char * authorization /** authorization */ 
        );
        /**Returns  the description 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXString Description
        (
        );
        /**Sets  the description 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetDescription
        (
            const NXString & description /** description */ 
        );
        /**Sets  the description 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        void SetDescription
        (
            const char * description /** description */ 
        );
        /**Returns  the file save flag - set to false if doing file export
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: bool FileSaveFlag
        (
        );
        /**Sets  the file save flag - set to false if doing file export
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFileSaveFlag
        (
            bool doingFileSave /** doingfilesave */ 
        );
        /**Returns  the export as - this option will determine if data needs to be exported using AP203 or AP214 or AP242 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::StepCreator::ExportAsOption ExportAs
        (
        );
        /**Sets  the export as - this option will determine if data needs to be exported using AP203 or AP214 or AP242 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetExportAs
        (
            NXOpen::StepCreator::ExportAsOption exportAs /** exportas */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
