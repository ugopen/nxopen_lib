#ifndef NXOpen_MECHANICALROUTING_ASSIGNCORNERBUILDER_HXX_INCLUDED
#define NXOpen_MECHANICALROUTING_ASSIGNCORNERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MechanicalRouting_AssignCornerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/MechanicalRouting_AssignCornerBuilder.hxx>
#include <NXOpen/MechanicalRouting_BendCornerTypeBuilder.hxx>
#include <NXOpen/MechanicalRouting_CornerBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Routing_RouteObjectCollector.hxx>
#include <NXOpen/libnxopencpp_mechanicalrouting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MechanicalRouting
    {
        class AssignCornerBuilder;
    }
    namespace Assemblies
    {
        class Component;
    }
    class Builder;
    namespace MechanicalRouting
    {
        class BendCornerTypeBuilder;
    }
    namespace MechanicalRouting
    {
        class CornerBuilder;
    }
    namespace PDM
    {
        class LogicalObject;
    }
    namespace Routing
    {
        class RouteObjectCollector;
    }
    namespace MechanicalRouting
    {
        class _AssignCornerBuilderBuilder;
        class AssignCornerBuilderImpl;
        /** Builder class for Assign Corner which creates corner <br> To create a new instance of this class, use @link NXOpen::MechanicalRouting::BuilderFactory::CreateAssignCornerBuilder  NXOpen::MechanicalRouting::BuilderFactory::CreateAssignCornerBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        BendCornerSettings.Method (deprecated) </td> <td> 
         
        Radius </td> </tr> 

        <tr><td> 
         
        BendCornerSettings.Radius.Value (deprecated) </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        BendCornerSettings.RatioToDiameter.Value (deprecated) </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        CornerSettings.CornerType </td> <td> 
         
        None </td> </tr> 

        </table>  

         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_MECHANICALROUTINGEXPORT  AssignCornerBuilder : public NXOpen::Builder
        {
            /** Defines the corner types. None, Miter and Bend. 
             <br>  @deprecated Deprecated in NX11.0.1.  Use @link NXOpen::MechanicalRouting::CornerBuilder::Type NXOpen::MechanicalRouting::CornerBuilder::Type@endlink  instead. <br>  
            */
            public: enum NX_DEPRECATED("Deprecated in NX11.0.1.  Use NXOpen::MechanicalRouting::CornerBuilder::Type instead.")  CornerType
            {
                CornerTypeNone/** none */ ,
                CornerTypeBend/** bend */ ,
                CornerTypeMiter/** miter */ 
            };

            private: AssignCornerBuilderImpl * m_assigncornerbuilder_impl;
            private: friend class  _AssignCornerBuilderBuilder;
            protected: AssignCornerBuilder();
            public: ~AssignCornerBuilder();
            /**Returns  the assign corner type
             <br>  @deprecated Deprecated in NX11.0.1.  Use @link NXOpen::MechanicalRouting::CornerBuilder::CornerType NXOpen::MechanicalRouting::CornerBuilder::CornerType@endlink  instead. <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public:  NX_DEPRECATED("Deprecated in NX11.0.1.  Use NXOpen::MechanicalRouting::CornerBuilder::CornerType instead.") NXOpen::MechanicalRouting::AssignCornerBuilder::CornerType Type
            (
            );
            /**Sets  the assign corner type
             <br>  @deprecated Deprecated in NX11.0.1.  Use @link NXOpen::MechanicalRouting::CornerBuilder::SetCornerType NXOpen::MechanicalRouting::CornerBuilder::SetCornerType@endlink  instead. <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public:  NX_DEPRECATED("Deprecated in NX11.0.1.  Use NXOpen::MechanicalRouting::CornerBuilder::SetCornerType instead.") void SetType
            (
                NXOpen::MechanicalRouting::AssignCornerBuilder::CornerType type /** type */ 
            );
            /**Returns  the routing control points collector 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::RouteObjectCollector * ControlPointSelection
            (
            );
            /**Returns  the bend corner block 
             <br>  @deprecated Deprecated in NX11.0.1.  Use @link NXOpen::MechanicalRouting::AssignCornerBuilder::CornerSettings NXOpen::MechanicalRouting::AssignCornerBuilder::CornerSettings@endlink  instead. <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public:  NX_DEPRECATED("Deprecated in NX11.0.1.  Use NXOpen::MechanicalRouting::AssignCornerBuilder::CornerSettings instead.") NXOpen::MechanicalRouting::BendCornerTypeBuilder * BendCornerSettings
            (
            );
            /**Returns  the corner block 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::MechanicalRouting::CornerBuilder * CornerSettings
            (
            );
            /** Components created during Assign Corner operation.  @return  Components created during Assign Corner operation. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: std::vector<NXOpen::Assemblies::Component *> GetCreatedComponents
            (
            );
            /** Performs the operations needed prior to a commit. This method has to be called before invoking commit. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void PreCommit
            (
            );
            /** Returns the @link PDM::LogicalObject PDM::LogicalObject@endlink  that represent the content that will be created by this builder. 
                        logical objects will be created only for miter corner case. 
                    
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void GetLogicalObjects
            (
                std::vector<NXOpen::PDM::LogicalObject *> & logicalObjects /** logicalobjects */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
