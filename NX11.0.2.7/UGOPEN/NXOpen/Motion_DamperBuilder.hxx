#ifndef NXOpen_MOTION_DAMPERBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_DAMPERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_DamperBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Motion.hxx>
#include <NXOpen/Motion_DamperBuilder.hxx>
#include <NXOpen/Motion_ConnectorBuilder.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class DamperBuilder;
    }
    namespace CAE
    {
        class Function;
    }
    class Expression;
    namespace Motion
    {
        class ConnectorBuilder;
    }
    namespace Motion
    {
        class _DamperBuilderBuilder;
        class DamperBuilderImpl;
        /**
            Represents a DamperBuilder
             <br> To create a new instance of this class, use @link NXOpen::Motion::DamperCollection::CreateDamperBuilder  NXOpen::Motion::DamperCollection::CreateDamperBuilder @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  DamperBuilder : public NXOpen::Motion::ConnectorBuilder
        {
            private: DamperBuilderImpl * m_damperbuilder_impl;
            private: friend class  _DamperBuilderBuilder;
            protected: DamperBuilder();
            public: ~DamperBuilder();
            /**Returns  the coefficient type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ConnectorCoefficientTypes CoefficientType
            (
            );
            /**Sets  the coefficient type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCoefficientType
            (
                NXOpen::Motion::ConnectorCoefficientTypes coefficientType /** coefficienttype */ 
            );
            /**Returns  the coefficient. Only valid if @link Motion::ConnectorCoefficientTypesConstant Motion::ConnectorCoefficientTypesConstant@endlink  is set 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::DamperBuilder::CoefficientExpression Motion::DamperBuilder::CoefficientExpression@endlink  or @link Motion::DamperBuilder::TorsionalCoefficientExpression Motion::DamperBuilder::TorsionalCoefficientExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::DamperBuilder::CoefficientExpression or Motion::DamperBuilder::TorsionalCoefficientExpression to query or edit it.") double Coefficient
            (
            );
            /**Sets  the coefficient. Only valid if @link Motion::ConnectorCoefficientTypesConstant Motion::ConnectorCoefficientTypesConstant@endlink  is set 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::DamperBuilder::CoefficientExpression Motion::DamperBuilder::CoefficientExpression@endlink  or @link Motion::DamperBuilder::TorsionalCoefficientExpression Motion::DamperBuilder::TorsionalCoefficientExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::DamperBuilder::CoefficientExpression or Motion::DamperBuilder::TorsionalCoefficientExpression to query or edit it.") void SetCoefficient
            (
                double coefficient /** coefficient */ 
            );
            /**Returns  the function tag. Only valid if @link Motion::ConnectorCoefficientTypesSpline Motion::ConnectorCoefficientTypesSpline@endlink  is set 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::Function * CoefficientFunction
            (
            );
            /**Sets  the function tag. Only valid if @link Motion::ConnectorCoefficientTypesSpline Motion::ConnectorCoefficientTypesSpline@endlink  is set 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCoefficientFunction
            (
                NXOpen::CAE::Function * function /** function */ 
            );
            /**Returns  the name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the translational coefficient expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * CoefficientExpression
            (
            );
            /**Returns  the torsional coefficient expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TorsionalCoefficientExpression
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
