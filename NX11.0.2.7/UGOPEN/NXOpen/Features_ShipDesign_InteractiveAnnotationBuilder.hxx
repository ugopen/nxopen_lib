#ifndef NXOpen_FEATURES_SHIPDESIGN_INTERACTIVEANNOTATIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_INTERACTIVEANNOTATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_InteractiveAnnotationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_DraftingBody.hxx>
#include <NXOpen/Features_ShipDesign_InteractiveAnnotationBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class InteractiveAnnotationBuilder;
        }
    }
    class Builder;
    namespace Drawings
    {
        class DraftingBody;
    }
    namespace Drawings
    {
        class DraftingCurve;
    }
    namespace Drawings
    {
        class DraftingView;
    }
    class Line;
    class NXObject;
    class Point;
    namespace Features
    {
        namespace ShipDesign
        {
            class _InteractiveAnnotationBuilderBuilder;
            class InteractiveAnnotationBuilderImpl;
            /** Represents a @link NXOpen::Features::ShipDesign::InteractiveAnnotationBuilder NXOpen::Features::ShipDesign::InteractiveAnnotationBuilder@endlink  builder . This builder returns NULL.  <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateInteractiveAnnotationBuilder  NXOpen::Features::ShipCollection::CreateInteractiveAnnotationBuilder @endlink  <br> 
             <br>  Created in NX11.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  InteractiveAnnotationBuilder : public NXOpen::Builder
            {
                private: InteractiveAnnotationBuilderImpl * m_interactiveannotationbuilder_impl;
                private: friend class  _InteractiveAnnotationBuilderBuilder;
                protected: InteractiveAnnotationBuilder();
                public: ~InteractiveAnnotationBuilder();
                /** Add annotations of sturcture ID And scantling.  
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void AddAnnotationOfStructureIdAndScantling
                (
                    bool createIDAnnotation /** Create ID annotation or not */,
                    bool createScantlingAnnotation /** Create Scantling annotation or not */,
                    NXOpen::Drawings::DraftingBody * draftingBody /** draftingbody */ 
                );
                /** Add annotation of end cuts. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void AddAnnotationOfEndCuts
                (
                    bool createEndCutsSymbol /** Create End Cuts symbols or not*/,
                    NXOpen::Drawings::DraftingBody * draftingBody /** draftingbody */ 
                );
                /** Add annotation of opening filling line 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void AddAnnotationOfOpeningFillingLine
                (
                    bool createOpeningFillingLine /** createopeningfillingline */ ,
                    NXOpen::Drawings::DraftingBody * draftingbody /** draftingbody */ 
                );
                /** Add annotation of bracket 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void AddAnnotationOfBracket
                (
                    bool createBracketSymbol /** createbracketsymbol */ ,
                    NXOpen::Drawings::DraftingBody * draftingbody /** draftingbody */ 
                );
                /** Add annotation of seam symbol for detail design 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void AddAnnotationOfSeamForDetailDesign
                (
                    bool createSeamSymbol /** createseamsymbol */ ,
                    NXOpen::Drawings::DraftingView * tgView /** tgview */ ,
                    const std::vector<NXOpen::Drawings::DraftingBody *> & objects /** objects */ ,
                    NXOpen::Drawings::DraftingBody * selectedObjecty /** selectedobjecty */ 
                );
                /** Add annotation of seam symbol for non-sectioned plate for basic design 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void HandleSeamForNonSectionedPlateForBasicDesign
                (
                    bool createSeamSymbol /** createseamsymbol */ ,
                    NXOpen::Drawings::DraftingCurve * draftingVDCurve /** Ship drafting curve*/,
                    NXOpen::NXObject * tgCurve /** tgcurve */ 
                );
                /** Add annotation of seam symbol for sectioned plate for basic design 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void HandleSeamForSectionedPlateForBasicDesign
                (
                    bool createSeamSymbol /** createseamsymbol */ ,
                    NXOpen::Drawings::DraftingBody * tgDraftingBody /** tgdraftingbody */ ,
                    const std::vector<NXOpen::Drawings::DraftingCurve *> & objects /** objects */ ,
                    NXOpen::Drawings::DraftingCurve * selectedObject /** selectedobject */ 
                );
                /** Add annotation of structure ID and scantling on Ship Expansion View
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void AddAnnotationOfExpansionStiffenerSturctureIdAndScantling
                (
                    NXOpen::Drawings::DraftingView * tgView /** The Ship Expansion View*/,
                    NXOpen::NXObject * shipStructure /** The Ship Structure on that the annotation will create. */,
                    bool createIDAnnotation /** Create ID annotation or not*/,
                    bool createScantlingAnnotation /** Create Scantling Annotation or not*/
                );
                /** Add annotation of expansion stiffener endcuts
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void AddAnnotationOfExpansionStiffenerEndCuts
                (
                    NXOpen::Drawings::DraftingView * tgView /** The Ship Expansion View*/,
                    NXOpen::NXObject * shipStructure /** The Ship Structure on that the annotation will create. */,
                    bool createEndCutsSymbol /** Create End Cuts Symbol or not*/
                );
                /** Add annotation of expansion plate
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void AddAnnotationOfExpansionPlate
                (
                    NXOpen::Drawings::DraftingView * tgView /** The Ship Expansion View*/,
                    NXOpen::NXObject * shipStructure /** The Ship Structure on that the annotation will create. */,
                    bool createScantlingAnnotation /** Create Scantling Annotation or not*/
                );
                /** Creates ship annotations for basic design structures.  @return  The ship entity annotation, entity type can be @link NXOpen::Body NXOpen::Body@endlink  or @link NXOpen::Face NXOpen::Face@endlink 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: NXOpen::NXObject * HandleAnnotationForBasicDesign
                (
                    bool createIDAnnotation /** Create Structure ID Annotation or not*/,
                    bool createScantlingAnnotation /** Create Scantling Annotation or not*/,
                    bool createEndCutsAnnotation /** Create EndCuts Annotation or not*/,
                    NXOpen::Drawings::DraftingCurve * draftingVDCurve /** Ship drafting curve*/,
                    NXOpen::NXObject * shipEntity /** The ship entity, entity type can be @link NXOpen::Body NXOpen::Body@endlink  or @link NXOpen::Face NXOpen::Face@endlink */,
                    NXOpen::Drawings::DraftingView * view /** Ship drafting section view*/
                );
                /** Adds opening filling lines by curve chain method. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void AddFillingLineByChain
                (
                    const std::vector<NXOpen::Drawings::DraftingCurve *> & curves /** Ship drafting curves*/,
                    bool createChainAnnotation /** Create Chain Annotation or not*/
                );
                /**  Adds opening filling lines by points method.  @return  Create line by points
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: NXOpen::Line * AddFillingLineByPoints
                (
                    NXOpen::Point * spiderPoint /** spider point*/,
                    NXOpen::Point * strikingPoint /** striking point*/
                );
                /** Modifies the position of opening filling line, which is created by points method. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void ModifyFillingLineByPoints
                (
                    NXOpen::Point * spiderPoint /** spider point*/,
                    NXOpen::Point * strikingPoint /** striking point*/,
                    NXOpen::Line * line /** line which created by point */
                );
                /** Deletes the existing annotations excluding the opening filling lines. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void DeleteExistingAnnotations
                (
                );
                /** Deletes the specific opening filling line.  
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_drafting ("Ship Drafting") */
                public: void DeleteOpeningFillingLine
                (
                    NXOpen::Line * line /** line */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
