#ifndef NXOpen_FEATURES_PARTMODULE_HXX_INCLUDED
#define NXOpen_FEATURES_PARTMODULE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_PartModule.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_PartModuleInputBuilder.hxx>
#include <NXOpen/GeometricUtilities_PartModuleOutputBuilder.hxx>
#include <NXOpen/GeometricUtilities_PartModuleOutputBuilder1.hxx>
#include <NXOpen/Features_Feature.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class PartModule;
    }
    namespace Features
    {
        class Feature;
    }
    namespace GeometricUtilities
    {
        class PartModuleInputBuilder;
    }
    namespace GeometricUtilities
    {
        class PartModuleOutputBuilder;
    }
    namespace GeometricUtilities
    {
        class PartModuleOutputBuilder1;
    }
    class Part;
    namespace Features
    {
        class _PartModuleBuilder;
        class PartModuleImpl;
        /** Represents a part module  <br> To create or edit an instance of this class, use @link NXOpen::Features::PartModuleBuilder  NXOpen::Features::PartModuleBuilder @endlink  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  PartModule : public NXOpen::Features::Feature
        {
            /** Defines part load options */
            public: enum PartLoadOption
            {
                PartLoadOptionDontAllowSave/** Sets the loaded part as read only. Allow changes in the part, but part cannot be saved */ = 1,
                PartLoadOptionLoadInterpart/** If this option is set, First it will check part is modified or not, then loads interpart of Part Module otherwise reload the own part of Part Module */
            };

            private: PartModuleImpl * m_partmodule_impl;
            private: friend class  _PartModuleBuilder;
            protected: PartModule();
            public: ~PartModule();
            /** Creates a linked part module   @return the linked part module which is created in given part file 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: NXOpen::Features::Feature * CreateLinkedPartModule
            (
                NXOpen::Part * createdPart /**part file tag*/
            );
            /** Creates part module output builder
                      <br> 
                     This API is now deprecated.
                     Please use @link NXOpen::Features::PartModule::CreatePartModuleOutputBuilder1 NXOpen::Features::PartModule::CreatePartModuleOutputBuilder1@endlink  instead.
                      <br> 
                     @return  Returns a @link NXOpen::GeometricUtilities::PartModuleOutputBuilder NXOpen::GeometricUtilities::PartModuleOutputBuilder@endlink  builder 
             <br>  @deprecated Deprecated in NX9.0.0.  Please use @link NXOpen::Features::PartModule::CreatePartModuleOutputBuilder1 NXOpen::Features::PartModule::CreatePartModuleOutputBuilder1@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public:  NX_DEPRECATED("Deprecated in NX9.0.0.  Please use NXOpen::Features::PartModule::CreatePartModuleOutputBuilder1 instead.") NXOpen::GeometricUtilities::PartModuleOutputBuilder * CreatePartModuleOutputBuilder
            (
            );
            /**Returns  the allow delete members flag. If true, members of the part module will also be deleted when the part module is deleted. If false, only the part module is deleted
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool AllowDeleteMembers
            (
            );
            /**Sets  the allow delete members flag. If true, members of the part module will also be deleted when the part module is deleted. If false, only the part module is deleted
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: void SetAllowDeleteMembers
            (
                bool allowDeleteMembers /** allowdeletemembers */ 
            );
            /** Shows all displayable objects of part module and hides all other objects in the part 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void ShowOnly
            (
            );
            /** Updates inputs in the given linked part module 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: void UpdateInputReferences
            (
            );
            /** Loads interpart data for linked part module 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: void LoadInterpartData
            (
            );
            /** Updates outputs in the given part module 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: void UpdateOutputReferences
            (
            );
            /** Indicates whether the part module is to be activated. If true, the part module will be activated, else, part module will be deactivated
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: void Activate
            (
                bool active /** active */ 
            );
            /** Opens linked part module part 
             <br>  @deprecated Deprecated in NX10.0.0.  Please use @link NXOpen::Features::PartModule::DisplayLinkedPart NXOpen::Features::PartModule::DisplayLinkedPart@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public:  NX_DEPRECATED("Deprecated in NX10.0.0.  Please use NXOpen::Features::PartModule::DisplayLinkedPart instead.") void MakeLinkedWork
            (
            );
            /** Opens owning part module part 
             <br>  @deprecated Deprecated in NX10.0.0.  Please use @link NXOpen::Features::PartModule::DisplayMainPart NXOpen::Features::PartModule::DisplayMainPart@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public:  NX_DEPRECATED("Deprecated in NX10.0.0.  Please use NXOpen::Features::PartModule::DisplayMainPart instead.") void MakeMainWork
            (
            );
            /** Merges part module and its linked part module into a single part module
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: void Merge
            (
            );
            /** Breaks part module relationship 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : wave ("WAVE FUNCTIONALITY") */
            public: void BreakRelationship
            (
            );
            /** Creates part module input builder @return  Returns a @link NXOpen::GeometricUtilities::PartModuleInputBuilder NXOpen::GeometricUtilities::PartModuleInputBuilder@endlink  builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: NXOpen::GeometricUtilities::PartModuleInputBuilder * CreatePartModuleInputBuilder
            (
            );
            /** Creates new part module output builder @return  Returns a @link NXOpen::GeometricUtilities::PartModuleOutputBuilder1 NXOpen::GeometricUtilities::PartModuleOutputBuilder1@endlink  builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: NXOpen::GeometricUtilities::PartModuleOutputBuilder1 * CreatePartModuleOutputBuilder1
            (
            );
            /** Process the deletion of a Part Module
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: void ProcessDeletePartModule
            (
            );
            /** Opens owning part module part 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: void DisplayMainPart
            (
            );
            /** Opens linked part module part 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: void DisplayLinkedPart
            (
            );
            /** Loads own part or inter part of part module based on the input  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: NXOpen::Part * LoadPartWithOption
            (
                int partLoadOption /** the part load options defined in @link  NXOpen::Features::PartModule::PartLoadOption   NXOpen::Features::PartModule::PartLoadOption @endlink . This argument will accept combination of load options */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
