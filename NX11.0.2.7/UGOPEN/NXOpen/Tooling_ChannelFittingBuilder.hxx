#ifndef NXOpen_TOOLING_CHANNELFITTINGBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_CHANNELFITTINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ChannelFittingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_ChannelFittingBuilder.hxx>
#include <NXOpen/Tooling_CoolingFittingData.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ChannelFittingBuilder;
    }
    class Builder;
    class Expression;
    class Point;
    class SelectBodyList;
    namespace Tooling
    {
        class CoolingFittingData;
    }
    namespace Tooling
    {
        class _ChannelFittingBuilderBuilder;
        class ChannelFittingBuilderImpl;
        /**The builder class for Channel Fitting which assists you
               to add cooling fitting. <br> To create a new instance of this class, use @link NXOpen::Tooling::ChannelFittingCollection::CreateChannelFittingBuilder  NXOpen::Tooling::ChannelFittingCollection::CreateChannelFittingBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        BottomClearance.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        TopClearance.Value </td> <td> 
         
        5 (millimeters part), 1.25 (inches part) </td> </tr> 

        <tr><td> 
         
        UseSymbol </td> <td> 
         
        1 </td> </tr> 

        </table>  

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ChannelFittingBuilder : public NXOpen::Builder
        {
            private: ChannelFittingBuilderImpl * m_channelfittingbuilder_impl;
            private: friend class  _ChannelFittingBuilderBuilder;
            protected: ChannelFittingBuilder();
            public: ~ChannelFittingBuilder();
            /**Returns  the parent channel of the cooling fitting points. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * ParentChannel
            (
            );
            /**Returns  the value which specifies whether to auto search boundary bodies or not. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool SearchBoundaryBodies
            (
            );
            /**Sets  the value which specifies whether to auto search boundary bodies or not. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSearchBoundaryBodies
            (
                bool searchBoundaryBodies /** searchboundarybodies */ 
            );
            /**Returns  the boundary body to create the cooling fitting points. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * BoundaryBody
            (
            );
            /**Returns  the new point specified for the cooling fitting point. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * FittingPoint
            (
            );
            /**Sets  the new point specified for the cooling fitting point. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetFittingPoint
            (
                NXOpen::Point * fittingPoint /** fittingpoint */ 
            );
            /**Returns  the value which specifies whether to add real component or not. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool UseSymbol
            (
            );
            /**Sets  the value which specifies whether to add real component or not. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetUseSymbol
            (
                bool useSymbol /** usesymbol */ 
            );
            /**Returns  the top clearance 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TopClearance
            (
            );
            /**Returns  the bottom clearance 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BottomClearance
            (
            );
            /** Creates the Cooling Fitting Data object.  @return  the new @link Tooling::CoolingFittingData Tooling::CoolingFittingData@endlink  instance 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::CoolingFittingData * CreateCoolingFittingData
            (
            );
            /** Get the Cooling Fitting Data object.  @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::CoolingFittingData * GetCoolingFittingData
            (
            );
            /** Create Fitting Points. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void CreateFittingPoints
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
