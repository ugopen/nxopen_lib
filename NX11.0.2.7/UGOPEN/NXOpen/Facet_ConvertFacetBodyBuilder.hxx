#ifndef NXOpen_FACET_CONVERTFACETBODYBUILDER_HXX_INCLUDED
#define NXOpen_FACET_CONVERTFACETBODYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Facet_ConvertFacetBodyBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Facet_ConvertFacetBodyBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_facet_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Facet
    {
        class ConvertFacetBodyBuilder;
    }
    class Builder;
    class SelectDisplayableObjectList;
    namespace Facet
    {
        class _ConvertFacetBodyBuilderBuilder;
        class ConvertFacetBodyBuilderImpl;
        /**
            Represents a @link NXOpen::Facet::ConvertFacetBodyBuilder NXOpen::Facet::ConvertFacetBodyBuilder@endlink  builder. 
            It converts the selected NX facet bodies to Convergent bodies or JT bodies, and converts JT facet bodies 
            to Convergent bodies or NX facets bodies. The original inputs can be deleted, kept, or hidden.
             <br> To create a new instance of this class, use @link NXOpen::Facet::FacetModelingCollection::CreateConvertFacetBodyBuilder  NXOpen::Facet::FacetModelingCollection::CreateConvertFacetBodyBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        MinimumAngleFoldedFacets </td> <td> 
         
        15.0 </td> </tr> 

        <tr><td> 
         
        OriginalBodyOption </td> <td> 
         
        Delete </td> </tr> 

        <tr><td> 
         
        OutputType </td> <td> 
         
        ConvergentBody </td> </tr> 

        </table>  

         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_FACETEXPORT  ConvertFacetBodyBuilder : public NXOpen::Builder
        {
            /** These options represent the type of output facet body */
            public: enum OutputTypes
            {
                OutputTypesConvergentBody/** Convert To Convergent bodies */,
                OutputTypesNXFacetBody/** Convert to NX Facet bodies */,
                OutputTypesJTFacetBody/** Convert To JT Facet bodies */
            };

            /** These represent the options for handling the input facet bodies  */
            public: enum OriginalBodyOptions
            {
                OriginalBodyOptionsKeep/** Keep original body */,
                OriginalBodyOptionsHide/** Hide original body */,
                OriginalBodyOptionsDelete/** Delete original body */
            };

            private: ConvertFacetBodyBuilderImpl * m_convertfacetbodybuilder_impl;
            private: friend class  _ConvertFacetBodyBuilderBuilder;
            protected: ConvertFacetBodyBuilder();
            public: ~ConvertFacetBodyBuilder();
            /**Returns  the output type of converted facet body 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::ConvertFacetBodyBuilder::OutputTypes OutputType
            (
            );
            /**Sets  the output type of converted facet body 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetOutputType
            (
                NXOpen::Facet::ConvertFacetBodyBuilder::OutputTypes enumOutputType /** enumoutputtype */ 
            );
            /**Returns  the input facet bodies to convert 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * FacetedBodiesToConvert
            (
            );
            /**Returns  the option for handling the input facet bodies 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::ConvertFacetBodyBuilder::OriginalBodyOptions OriginalBodyOption
            (
            );
            /**Sets  the option for handling the input facet bodies 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetOriginalBodyOption
            (
                NXOpen::Facet::ConvertFacetBodyBuilder::OriginalBodyOptions enumOriginalBodyOption /** enumoriginalbodyoption */ 
            );
            /**Returns  an option for automatically repairing the converted PSM mesh 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool CleanUp
            (
            );
            /**Sets  an option for automatically repairing the converted PSM mesh 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetCleanUp
            (
                bool cleanUp /** cleanup */ 
            );
            /**Returns  the minimum angle between adjacent facets to define folded facets. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double MinimumAngleFoldedFacets
            (
            );
            /**Sets  the minimum angle between adjacent facets to define folded facets. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetMinimumAngleFoldedFacets
            (
                double minimumAngleFoldedFacets /** minimumanglefoldedfacets */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
