#ifndef NXOpen_CAE_XYPLOT_GRAPH_HXX_INCLUDED
#define NXOpen_CAE_XYPLOT_GRAPH_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Xyplot_Graph.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_XyplotDataTypes.hxx>
#include <NXOpen/CAE_Xyplot_BasicModel.hxx>
#include <NXOpen/CAE_Xyplot_Graph.hxx>
#include <NXOpen/CAE_Xyplot_MarkerModel.hxx>
#include <NXOpen/CAE_Xyplot_IDisplayableModel.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Xyplot
        {
            class Graph;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class BasicModel;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class IDisplayableModel;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class MarkerModel;
        }
    }
    class TaggedObject;
    namespace CAE
    {
        namespace Xyplot
        {
            class _GraphBuilder;
            class GraphImpl;
            /** Manages the display graph. Each graph has its owner axis and graph name.  <br> Not support KF.  <br> 
             <br>  Created in NX10.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  Graph : public NXOpen::TaggedObject, public virtual NXOpen::CAE::Xyplot::IDisplayableModel
            {
                private: GraphImpl * m_graph_impl;
                private: friend class  _GraphBuilder;
                protected: Graph();
                public: ~Graph();
                /**Returns  the record count of the graph. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: int RecordCount
                (
                );
                /** Gets the point count of specified record on the graph.  @return  Point count 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: int GetPointCount
                (
                    int recordIndex /** Record index */
                );
                /** Creates the display marker on the graph. The record index is between 0 and
                                @link CAE::Xyplot::Graph::RecordCount CAE::Xyplot::Graph::RecordCount@endlink , 0 is inclusive. The point index
                                is between 0 and @link CAE::Xyplot::Graph::GetPointCount CAE::Xyplot::Graph::GetPointCount@endlink , 0 is inclusive.  @return  Marker model 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::MarkerModel * CreateMarker
                (
                    int recordIndex /** Record index */,
                    int pointIndex /** Point index */
                );
                /** Gets all markers on the graph. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void GetMarkers
                (
                    std::vector<NXOpen::CAE::Xyplot::MarkerModel *> & markers /** Marker models */
                );
                /** Gets anchor point of a record.  @return  
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: bool GetAnchorPointOfRecord
                (
                    int recordIndex /** recordindex */ ,
                    NXOpen::CAE::Xyplot::AnchorType anchorType /** anchortype */ ,
                    NXOpen::Point3d* anchorPoint /** anchorpoint */ 
                );
                /** Gets record name.  @return  
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXString GetRecordName
                (
                    int recordIndex /** recordindex */ 
                );
                /** Gets the bounding box of the grid. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void GetGridBoundingBox
                (
                    NXOpen::Point3d* leftBottom /** leftbottom */ ,
                    NXOpen::Point3d* rightTop /** righttop */ 
                );
                /** Gets the abscissa axis.  @return  
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::BasicModel * GetAbscissaAxis
                (
                );
                /** Gets the ordinate axes.  @return  
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: std::vector<NXOpen::CAE::Xyplot::BasicModel *> GetOrdinateAxes
                (
                );
                /** Gets the Z axis.  @return  
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::BasicModel * GetZAxis
                (
                );
                /** Sets the display style index for a plotted record.
                                The display style index is limitted from 0 to 19.
                             
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void SetDisplayStyleOfRecord
                (
                    int recordIndex /** recordindex */ ,
                    int displayStyleIndex /** displaystyleindex */ 
                );
                /** Finds the @link  NXObject   NXObject @endlink  with the given identifier as recorded in a journal.
                            An object may not return the same value as its JournalIdentifier in different versions of
                            the software. However newer versions of the software should find the same object when
                            FindObject is passed older versions of its journal identifier. In general, this method
                            should not be used in handwritten code and exists to support record and playback of journals.

                            An exception will be thrown if no object can be found with the given journal identifier.  @return  
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::TaggedObject * Find
                (
                    const NXString & journalIdentifier /** Journal identifier of the object */
                );
                /** Finds the @link  NXObject   NXObject @endlink  with the given identifier as recorded in a journal.
                            An object may not return the same value as its JournalIdentifier in different versions of
                            the software. However newer versions of the software should find the same object when
                            FindObject is passed older versions of its journal identifier. In general, this method
                            should not be used in handwritten code and exists to support record and playback of journals.

                            An exception will be thrown if no object can be found with the given journal identifier.  @return  
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::TaggedObject * Find
                (
                    const char * journalIdentifier /** Journal identifier of the object */
                );
                /** Updates model display 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: virtual void UpdateDisplay
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
