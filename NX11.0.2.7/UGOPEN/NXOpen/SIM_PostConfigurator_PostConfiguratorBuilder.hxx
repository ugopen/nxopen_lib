#ifndef NXOpen_SIM_POSTCONFIGURATOR_POSTCONFIGURATORBUILDER_HXX_INCLUDED
#define NXOpen_SIM_POSTCONFIGURATOR_POSTCONFIGURATORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_PostConfigurator_PostConfiguratorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SIM_PostConfigurator_PostConfiguratorBuilder.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        namespace PostConfigurator
        {
            class PostConfiguratorBuilder;
        }
    }
    class Builder;
    class DateBuilder;
    namespace SIM
    {
        namespace PostConfigurator
        {
            class _PostConfiguratorBuilderBuilder;
            class PostConfiguratorBuilderImpl;
            /** This class is used to create a post configurator builder.
                        Calling @link Builder::Commit Builder::Commit@endlink  on this builder will only return NULL.
                     <br> To create a new instance of this class, use @link NXOpen::SIM::PostConfigurator::PostConfiguratorManager::CreatePostConfiguratorBuilder  NXOpen::SIM::PostConfigurator::PostConfiguratorManager::CreatePostConfiguratorBuilder @endlink  <br> 
             <br>  Created in NX10.0.3.  <br>  
            */
            class NXOPENCPP_SIMEXPORT  PostConfiguratorBuilder : public NXOpen::Builder
            {
                private: PostConfiguratorBuilderImpl * m_postconfiguratorbuilder_impl;
                private: friend class  _PostConfiguratorBuilderBuilder;
                protected: PostConfiguratorBuilder();
                public: ~PostConfiguratorBuilder();
                /** Resets the post configurator data. 
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void Reset
                (
                );
                /** Shows the post configurator data changes in the listing window. 
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void ShowChanges
                (
                );
                /** Encrypts a post processor with Sold-To ID and expiration date. 
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void EncryptPostConfiguratorFiles
                (
                    const NXString & soldToID /** the sold to id */,
                    const NXString & expirationDate /** the expiration date */
                );
                /** Encrypts a post processor with Sold-To ID and expiration date. 
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void EncryptPostConfiguratorFiles
                (
                    const char * soldToID /** the sold to id */,
                    const char * expirationDate /** the expiration date */
                );
                /**Returns  the date value. The Date object will contain the value for expiration date. 
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : None */
                public: NXOpen::DateBuilder * DateValue
                (
                );
                /** Saves the post configurator data in different name. 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void SaveAs
                (
                    const NXString & postprocessorName /** the postprocessor name */,
                    const NXString & outputDirectory /** the output directory */
                );
                /** Saves the post configurator data in different name. 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void SaveAs
                (
                    const char * postprocessorName /** the postprocessor name */,
                    const char * outputDirectory /** the output directory */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
