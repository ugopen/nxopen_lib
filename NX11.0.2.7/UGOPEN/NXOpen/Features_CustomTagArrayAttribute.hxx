#ifndef NXOpen_FEATURES_CUSTOMTAGARRAYATTRIBUTE_HXX_INCLUDED
#define NXOpen_FEATURES_CUSTOMTAGARRAYATTRIBUTE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_CustomTagArrayAttribute.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_CustomAttribute.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class CustomTagArrayAttribute;
    }
    namespace Features
    {
        class CustomAttribute;
    }
    class TaggedObject;
    namespace Features
    {
    }
    namespace Features
    {
        class CustomTagArrayAttributeImpl;
        /**
               Represents a @link Features::CustomTagArrayAttribute Features::CustomTagArrayAttribute@endlink  class
             <br> An instance of this class can be obtained from @link NXOpen::Features::CustomAttributeCollection::CreateCustomTagArrayAttribute NXOpen::Features::CustomAttributeCollection::CreateCustomTagArrayAttribute@endlink   <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  CustomTagArrayAttribute : public NXOpen::Features::CustomAttribute
        {
            private: CustomTagArrayAttributeImpl * m_customtagarrayattribute_impl;
            /// \cond NX_NO_DOC 
            public: explicit CustomTagArrayAttribute(void *ptr);
            /// \endcond 
            /** Set the references in the attribute and returns old references @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: std::vector<NXOpen::TaggedObject *> SetValues
            (
                const std::vector<NXOpen::TaggedObject *> & tagValues /** tag array */
            );
            /** Get the references in the attribute @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: std::vector<NXOpen::TaggedObject *> GetValues
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
