#ifndef NXOpen_DRAWINGS_SHIPDRAFTINGVIEWLINESVIEWSTYLE_HXX_INCLUDED
#define NXOpen_DRAWINGS_SHIPDRAFTINGVIEWLINESVIEWSTYLE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_ShipDraftingViewLinesViewStyle.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Preferences_ViewStylePreferencesData.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_drawings_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drawings
    {
        class ShipDraftingViewLinesViewStyle;
    }
    namespace Drawings
    {
        class ViewStyle;
    }
    class NXColor;
    namespace Drawings
    {
        class ShipDraftingViewLinesViewStyleImpl;
        /** Represents set of Ship Drafting Lines View Style applicable to drafting views. 
                Ship Drafting View lines are used for the features in Ship Design  <br> To obtain an instance of this class use @link Drawings::ViewStyle::ShipDraftingViewLines Drawings::ViewStyle::ShipDraftingViewLines@endlink   <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_DRAWINGSEXPORT  ShipDraftingViewLinesViewStyle
        {
            /** Line type */
            public: enum Lines
            {
                LinesHiddenNonsection/** Hidden, NonSection */,
                LinesVisibleNonsection/** Visible, NonSection*/,
                LinesHiddenSection/** Hidden, Section */,
                LinesVisibleSection/** Visible, Section*/,
                LinesSecondaryHiddenNonsection/** Secondary, Hidden, NonSection */,
                LinesSecondaryVisibleNonsection/** Secondary, Visible, NonSection*/,
                LinesSecondaryHiddenSection/** Secondary, Hidden, Section */,
                LinesSecondaryVisibleSection/** Secondary, Visible, Section*/
            };

            private: ShipDraftingViewLinesViewStyleImpl * m_shipdraftingviewlinesviewstyle_impl;
            private: NXOpen::Drawings::ViewStyle* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit ShipDraftingViewLinesViewStyle(NXOpen::Drawings::ViewStyle *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~ShipDraftingViewLinesViewStyle();
            /** Note: The initial values are set based on the file NX_ShipAttribute.xml
                    The status determines the line settings for the ship feature in a view.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_ship_drafting ("Ship Drafting") */
            public: void SetShipDrawingObject
            (
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/,
                bool singleLine /** status that determines SLR for the feature */
            );
            /** Note: The initial values are set based on the file NX_ShipAttribute.xml
                    The status determines the line settings for the ship feature in a view.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_ship_drafting ("Ship Drafting") */
            void SetShipDrawingObject
            (
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/,
                bool singleLine /** status that determines SLR for the feature */
            );
            /** Get ship drawing object status.  @return  status that determines SLR for the feature 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool GetShipDrawingObject
            (
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/
            );
            /** Get ship drawing object status.  @return  status that determines SLR for the feature 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            bool GetShipDrawingObject
            (
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/
            );
            /** The color of ship line. The value should be between UF_OBJ_MIN_COLOR and UF_OBJ_MAX_COLOR. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_ship_drafting ("Ship Drafting") */
            public: void SetColor
            (
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Drawings::ShipDraftingViewLinesViewStyle::Lines linesType /** visible or hidden line type */,
                NXOpen::NXColor * color /** Color */
            );
            /** The color of ship line. The value should be between UF_OBJ_MIN_COLOR and UF_OBJ_MAX_COLOR. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_ship_drafting ("Ship Drafting") */
            void SetColor
            (
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Drawings::ShipDraftingViewLinesViewStyle::Lines linesType /** visible or hidden line type */,
                NXOpen::NXColor * color /** Color */
            );
            /** Gets line color.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * GetColor
            (
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Drawings::ShipDraftingViewLinesViewStyle::Lines linesType /** visible or hidden line type */
            );
            /** Gets line color.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::NXColor * GetColor
            (
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Drawings::ShipDraftingViewLinesViewStyle::Lines linesType /** visible or hidden line type */
            );
            /** The font type of ship line.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_ship_drafting ("Ship Drafting") */
            public: void SetFont
            (
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Drawings::ShipDraftingViewLinesViewStyle::Lines linesType /** visible or hidden line type */,
                NXOpen::Preferences::Font font /** Font */
            );
            /** The font type of ship line.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_ship_drafting ("Ship Drafting") */
            void SetFont
            (
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Drawings::ShipDraftingViewLinesViewStyle::Lines linesType /** visible or hidden line type */,
                NXOpen::Preferences::Font font /** Font */
            );
            /** Gets line font.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::Font GetFont
            (
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Drawings::ShipDraftingViewLinesViewStyle::Lines linesType /** visible or hidden line type */
            );
            /** Gets line font.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::Preferences::Font GetFont
            (
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Drawings::ShipDraftingViewLinesViewStyle::Lines linesType /** visible or hidden line type */
            );
            /** The width of ship line. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_ship_drafting ("Ship Drafting") */
            public: void SetWidth
            (
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Drawings::ShipDraftingViewLinesViewStyle::Lines linesType /** visible or hidden line type */,
                NXOpen::Preferences::Width width /** Width */
            );
            /** The width of ship line. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_ship_drafting ("Ship Drafting") */
            void SetWidth
            (
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Drawings::ShipDraftingViewLinesViewStyle::Lines linesType /** visible or hidden line type */,
                NXOpen::Preferences::Width width /** Width */
            );
            /** Gets line width  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::Width GetWidth
            (
                const NXString & featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Drawings::ShipDraftingViewLinesViewStyle::Lines linesType /** visible or hidden line type */
            );
            /** Gets line width  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::Preferences::Width GetWidth
            (
                const char * featureName /** feature name e.g. decks, bulkheads etc.*/,
                NXOpen::Drawings::ShipDraftingViewLinesViewStyle::Lines linesType /** visible or hidden line type */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
