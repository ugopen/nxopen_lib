#ifndef NXOpen_CAM_ROBOTMOUNTMOVE_HXX_INCLUDED
#define NXOpen_CAM_ROBOTMOUNTMOVE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_RobotMountMove.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_RobotMountMove.hxx>
#include <NXOpen/CAM_MoveBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class RobotMountMove;
    }
    namespace CAM
    {
        class MoveBuilder;
    }
    namespace CAM
    {
        class _RobotMountMoveBuilder;
        class RobotMountMoveImpl;

        /// \cond NX_NO_DOC 
        /** represents the Rotary Move To Point Builder  <br> To create a new instance of this class, use @link NXOpen::CAM::MoveCollection::CreateRobotMountMove  NXOpen::CAM::MoveCollection::CreateRobotMountMove @endlink  <br> 
         <br>  Created in NX11.0.1.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  RobotMountMove : public NXOpen::CAM::MoveBuilder
        {
            /** the mount Type enum 
             <br>  Created in NX11.0.1.  <br>  
            */

            /// \cond NX_NO_DOC 
            public: enum Types
            {
                TypesNoChange/** No Change */,
                TypesMount/** Mount */,
                TypesUnmount/** Unmount  */
            };


            /// \endcond 
            private: RobotMountMoveImpl * m_robotmountmove_impl;
            private: friend class  _RobotMountMoveBuilder;
            protected: RobotMountMove();
            public: ~RobotMountMove();

            /// \cond NX_NO_DOC 
            /**Returns  the mount tool type 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::RobotMountMove::Types MountType
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the mount tool type 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetMountType
            (
                NXOpen::CAM::RobotMountMove::Types type /** the mount type*/
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the component name 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXString ComponentName
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the component name 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetComponentName
            (
                const NXString & componentName /** the component name */
            );
            /**Sets  the component name 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetComponentName
            (
                const char * componentName /** the component name */
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
