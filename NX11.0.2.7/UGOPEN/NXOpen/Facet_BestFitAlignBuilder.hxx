#ifndef NXOpen_FACET_BESTFITALIGNBUILDER_HXX_INCLUDED
#define NXOpen_FACET_BESTFITALIGNBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Facet_BestFitAlignBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Facet_BestFitAlignBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_facet_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Facet
    {
        class BestFitAlignBuilder;
    }
    class Builder;
    class Direction;
    class Point;
    class SelectNXObjectList;
    namespace Facet
    {
        class _BestFitAlignBuilderBuilder;
        class BestFitAlignBuilderImpl;
        /** This class performs the best fit alignment between objects  <br> To create a new instance of this class, use @link NXOpen::Facet::FacetedBodyCollection::CreateBestFitAlignBuilder  NXOpen::Facet::FacetedBodyCollection::CreateBestFitAlignBuilder @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_FACETEXPORT  BestFitAlignBuilder : public NXOpen::Builder
        {
            /** Represents the constraint options */
            public: enum ConstraintOptions
            {
                ConstraintOptionsFree/** No constraint */,
                ConstraintOptionsOnlyTranslation/** Only translation */,
                ConstraintOptionsTranslationInPlane/** Translation in the plane */,
                ConstraintOptionsTranslationAlongDirection/** Translation along direction */,
                ConstraintOptionsOnlyRotation/** Only rotation */,
                ConstraintOptionsRotationAroundPoint/** Rotation around specific point */,
                ConstraintOptionsRotationAroundLine/** Rotation around specific line */,
                ConstraintOptionsHoldToPlane/** Moving in the plane */,
                ConstraintOptionsHoldToLine/** Moving along the line */
            };

            private: BestFitAlignBuilderImpl * m_bestfitalignbuilder_impl;
            private: friend class  _BestFitAlignBuilderBuilder;
            protected: BestFitAlignBuilder();
            public: ~BestFitAlignBuilder();
            /**Returns  the mobile objects 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * MobileObjects
            (
            );
            /**Returns  the source objects 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * SourceObjects
            (
            );
            /**Returns  the destination objects 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * DestinationObjects
            (
            );
            /**Returns  the fit constraint 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::BestFitAlignBuilder::ConstraintOptions FitConstraints
            (
            );
            /**Sets  the fit constraint 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetFitConstraints
            (
                NXOpen::Facet::BestFitAlignBuilder::ConstraintOptions fitConstraints /** fitconstraints */ 
            );
            /**Returns  the plane or line direction 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * Direction
            (
            );
            /**Sets  the plane or line direction 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetDirection
            (
                NXOpen::Direction * direction /** direction */ 
            );
            /**Returns  the rotation center 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * RotateCenter
            (
            );
            /**Sets  the rotation center 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetRotateCenter
            (
                NXOpen::Point * rotateCenter /** rotatecenter */ 
            );
            /**Returns  a value indicating whether to do a global search 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool GlobalSearch
            (
            );
            /**Sets  a value indicating whether to do a global search 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetGlobalSearch
            (
                bool globalSearch /** globalsearch */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
