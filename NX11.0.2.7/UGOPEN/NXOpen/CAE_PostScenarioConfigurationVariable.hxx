#ifndef NXOpen_CAE_POSTSCENARIOCONFIGURATIONVARIABLE_HXX_INCLUDED
#define NXOpen_CAE_POSTSCENARIOCONFIGURATIONVARIABLE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostScenarioConfigurationVariable.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_PostScenarioConfigurationVariable.hxx>
#include <NXOpen/CAE_PostScenarioTypes.hxx>
#include <NXOpen/CAE_PostScenarioVariant.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostScenarioConfigurationVariable;
    }
    namespace CAE
    {
        class PostScenarioVariant;
    }
    namespace CAE
    {
        class _PostScenarioConfigurationVariableBuilder;
        class PostScenarioConfigurationVariableImpl;
        /** A configuration variable to which values can be bound in order to define a user selection (@link NXOpen::CAE::PostScenarioSelectionParameters NXOpen::CAE::PostScenarioSelectionParameters@endlink ) for a post scenario (@link NXOpen::CAE::PostScenarioBuilder NXOpen::CAE::PostScenarioBuilder@endlink ).  <br> Not support KF.  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostScenarioConfigurationVariable : public NXOpen::TaggedObject
        {
            private: PostScenarioConfigurationVariableImpl * m_postscenarioconfigurationvariable_impl;
            private: friend class  _PostScenarioConfigurationVariableBuilder;
            protected: PostScenarioConfigurationVariable();
            public: ~PostScenarioConfigurationVariable();
            /**Returns  the name of this Variable. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXString Name
            (
            );
            /** Bind values to this Selection Variable. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AssignBooleanValues
            (
                const std::vector<bool> & values /** values */ 
            );
            /** Bind values to this Selection Variable. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AssignIntegerValues
            (
                const std::vector<int> & values /** values */ 
            );
            /** Bind values to this Selection Variable. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AssignDoubleValues
            (
                const std::vector<double> & values /** values */ 
            );
            /** Bind values to this Selection Variable. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AssignComplexValues
            (
                const std::vector<NXOpen::CAE::Complex> & values /** values */ 
            );
            /** Bind values to this Selection Variable. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AssignStringValues
            (
                std::vector<NXString> & values /** values */ 
            );
            /** Bind values to this Selection Variable. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AssignUnicodeStringValues
            (
                std::vector<NXString> & values /** values */ 
            );
            /** Bind values to this Selection Variable. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AssignValues
            (
                const std::vector<NXOpen::CAE::PostScenarioVariant *> & values /** values */ 
            );
            /** Retrieve the list of available values.
                        This method returns an empty list if this variable
                        accepts free input; i.e. it only applies to
                        configuration variables which are "choice"-type.
                      
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetValues
            (
                std::vector<NXOpen::CAE::PostScenarioVariant *> & values /** values */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
