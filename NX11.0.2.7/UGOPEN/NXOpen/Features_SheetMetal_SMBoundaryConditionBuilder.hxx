#ifndef NXOpen_FEATURES_SHEETMETAL_SMBOUNDARYCONDITIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_SMBOUNDARYCONDITIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_SMBoundaryConditionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_SheetMetal_SMBoundaryConditionBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class SMBoundaryConditionBuilder;
        }
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Point;
    class ScCollector;
    namespace Features
    {
        namespace SheetMetal
        {
            class _SMBoundaryConditionBuilderBuilder;
            class SMBoundaryConditionBuilderImpl;
            /** Represents a Boundary condition object for Metaform. A Metaform feature can have one or more boundary
                    conditions and each condition determines how the mapped geometry will be locked.  <br> To create a new instance of this class, use @link NXOpen::Features::SheetMetal::MetaformBuilder::CreateSMBoundaryCondition  NXOpen::Features::SheetMetal::MetaformBuilder::CreateSMBoundaryCondition @endlink  <br> 
             <br>  Created in NX7.5.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  SMBoundaryConditionBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
            {
                /** Types of Boundary condition constraints */
                public: enum ConstraintTypes
                {
                    ConstraintTypesPointToPoint/** point to point */ ,
                    ConstraintTypesPointAlongCurve/** point along curve */ ,
                    ConstraintTypesCurveToCurve/** curve to curve */ ,
                    ConstraintTypesCurveAlongCurve/** curve along curve */ 
                };

                private: SMBoundaryConditionBuilderImpl * m_smboundaryconditionbuilder_impl;
                private: friend class  _SMBoundaryConditionBuilderBuilder;
                protected: SMBoundaryConditionBuilder();
                public: ~SMBoundaryConditionBuilder();
                /**Returns  the constraint type 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypes ConstraintType
                (
                );
                /**Sets  the constraint type 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : adv_sheet_metal_dsgn ("ADVANCED SHEET METAL DESIGN") */
                public: void SetConstraintType
                (
                    NXOpen::Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypes constraintType /** constrainttype */ 
                );
                /**Returns  the start region point. This input is required only if the Constraint Type is @link Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesPointToPoint Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesPointToPoint@endlink  or 
                            @link Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesPointAlongCurve Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesPointAlongCurve@endlink .  
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * StartRegionPoint
                (
                );
                /**Sets  the start region point. This input is required only if the Constraint Type is @link Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesPointToPoint Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesPointToPoint@endlink  or 
                            @link Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesPointAlongCurve Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesPointAlongCurve@endlink .  
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : adv_sheet_metal_dsgn ("ADVANCED SHEET METAL DESIGN") */
                public: void SetStartRegionPoint
                (
                    NXOpen::Point * startRegionPoint /** startregionpoint */ 
                );
                /**Returns  the start region curve This input is required only if the Constraint Type is @link Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesCurveToCurve Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesCurveToCurve@endlink  or 
                            @link Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesCurveAlongCurve Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesCurveAlongCurve@endlink .  
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * StartRegionCurve
                (
                );
                /**Returns  the end region point This input is required only if the Constraint Type is @link Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesPointToPoint Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesPointToPoint@endlink .  
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * EndRegionPoint
                (
                );
                /**Sets  the end region point This input is required only if the Constraint Type is @link Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesPointToPoint Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesPointToPoint@endlink .  
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : adv_sheet_metal_dsgn ("ADVANCED SHEET METAL DESIGN") */
                public: void SetEndRegionPoint
                (
                    NXOpen::Point * endRegionPoint /** endregionpoint */ 
                );
                /**Returns  the end region curve This input is required if the Constraint Type is NOT @link Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesPointToPoint Features::SheetMetal::SMBoundaryConditionBuilder::ConstraintTypesPointToPoint@endlink .  
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * EndRegionCurve
                (
                );
                /**Returns  the constraint name. If a constraint is added interactively, an automatic name will be generated for the
                            users which can be edited. Each of the constraint name must be unique. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString ConstraintName
                (
                );
                /**Sets  the constraint name. If a constraint is added interactively, an automatic name will be generated for the
                            users which can be edited. Each of the constraint name must be unique. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : adv_sheet_metal_dsgn ("ADVANCED SHEET METAL DESIGN") */
                public: void SetConstraintName
                (
                    const NXString & constraintName /** constraintname */ 
                );
                /**Sets  the constraint name. If a constraint is added interactively, an automatic name will be generated for the
                            users which can be edited. Each of the constraint name must be unique. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : adv_sheet_metal_dsgn ("ADVANCED SHEET METAL DESIGN") */
                void SetConstraintName
                (
                    const char * constraintName /** constraintname */ 
                );
                /** Validate whether the inputs to the component are sufficient for 
                            commit to be called.  If the component is not in a state to commit
                            then an exception is thrown.  For example, if the component requires
                            you to set some property, this method will throw an exception if
                            you haven't set it.  This method throws a not-yet-implemented
                            NXException for some components.
                         @return  Was self validation successful 
                 <br>  Created in NX3.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
