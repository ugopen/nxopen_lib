#ifndef NXOpen_FEATURES_SHOWRELATEDFACESBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHOWRELATEDFACESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShowRelatedFacesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ShowRelatedFacesBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class ShowRelatedFacesBuilder;
    }
    class Builder;
    namespace Features
    {
        class Feature;
    }
    class NXObject;
    class SelectFace;
    namespace Features
    {
        class _ShowRelatedFacesBuilderBuilder;
        class ShowRelatedFacesBuilderImpl;
        /**
            Represents a builder for a Show Related Faces.
             <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateShowRelatedFacesBuilder  NXOpen::Features::FeatureCollection::CreateShowRelatedFacesBuilder @endlink  <br> 
         <br>  Created in NX7.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  ShowRelatedFacesBuilder : public NXOpen::Builder
        {
            private: ShowRelatedFacesBuilderImpl * m_showrelatedfacesbuilder_impl;
            private: friend class  _ShowRelatedFacesBuilderBuilder;
            protected: ShowRelatedFacesBuilder();
            public: ~ShowRelatedFacesBuilder();
            /**Returns  the related face 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectFace * RelatedFace
            (
            );
            /**Returns   the value indicating whether to keep offset relations or not 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: bool OffsetRelations
            (
            );
            /**Sets   the value indicating whether to keep offset relations or not 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetOffsetRelations
            (
                bool keepOffsetRelations /** Flag indicating whether to include the offset relation */
            );
            /**  Locks the persistent constraint 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void LockConstraint
            (
                NXOpen::Features::Feature * feature /** the persistent constraint feature */
            );
            /**  Unlocks the persistent constraint 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void UnlockConstraint
            (
                NXOpen::Features::Feature * feature /** the persistent constraint feature */
            );
            /**  Deletes the persistent constraint 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void DeleteConstraint
            (
                NXOpen::Features::Feature * feature /** the persistent constraint feature  */
            );
            /**  Deletes the offset relation 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void DeleteOffsetRelation
            (
                const std::vector<NXOpen::NXObject *> & offsetFaces /** offsetfaces */ 
            );
            /**  Unlocks all the persistent constraints on the related face  
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void UnlockAllConstraints
            (
            );
            /**  Deletes all the persistent constraints on the related face  
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void DeleteAllConstraints
            (
            );
            /**  Deletes all the offset relations on the body which the face belongs to 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") */
            public: void DeleteAllOffsetRelationOnBody
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
