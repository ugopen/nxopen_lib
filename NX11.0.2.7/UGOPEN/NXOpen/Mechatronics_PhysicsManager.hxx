#ifndef NXOpen_MECHATRONICS_PHYSICSMANAGER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_PHYSICSMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_PhysicsManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mechatronics_SignalBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class PhysicsManager;
    }
    class Part;
    namespace Assemblies
    {
        class Component;
    }
    class DisplayableObject;
    namespace Mechatronics
    {
        class AccelerometerCollection;
    }
    namespace Mechatronics
    {
        class AdapterFormulaCollection;
    }
    namespace Mechatronics
    {
        class AdapterSignalCollection;
    }
    namespace Mechatronics
    {
        class AngularLimitJointCollection;
    }
    namespace Mechatronics
    {
        class AngularSpringJointCollection;
    }
    namespace Mechatronics
    {
        class BallJointCollection;
    }
    namespace Mechatronics
    {
        class BreakingConstraintCollection;
    }
    namespace Mechatronics
    {
        class CamCollection;
    }
    namespace Mechatronics
    {
        class CamProfileCollection;
    }
    namespace Mechatronics
    {
        class ChangeMaterialCollection;
    }
    namespace Mechatronics
    {
        class ChangeOwnerBuilder;
    }
    namespace Mechatronics
    {
        class CollisionBodyCollection;
    }
    namespace Mechatronics
    {
        class CollisionMaterialCollection;
    }
    namespace Mechatronics
    {
        class CollisionSensorCollection;
    }
    namespace Mechatronics
    {
        class ConvertFromMTBBuilder;
    }
    namespace Mechatronics
    {
        class CurveOnCurveJointCollection;
    }
    namespace Mechatronics
    {
        class CylindricalJointCollection;
    }
    namespace Mechatronics
    {
        class DisplayChangerCollection;
    }
    namespace Mechatronics
    {
        class DistanceSensorCollection;
    }
    namespace Mechatronics
    {
        class ECADExportBuilder;
    }
    namespace Mechatronics
    {
        class ECADImportBuilder;
    }
    namespace Mechatronics
    {
        class ExportSensorsActuatorsBuilder;
    }
    namespace Mechatronics
    {
        class ExpressionBlockCollection;
    }
    namespace Mechatronics
    {
        class ExpressionBlockFormulaCollection;
    }
    namespace Mechatronics
    {
        class ExternalConnectionCollection;
    }
    namespace Mechatronics
    {
        class FixedJointCollection;
    }
    namespace Mechatronics
    {
        class ForceTorqueControlCollection;
    }
    namespace Mechatronics
    {
        class GearCollection;
    }
    namespace Mechatronics
    {
        class GenericSensorCollection;
    }
    namespace Mechatronics
    {
        class GraphControlCollection;
    }
    namespace Mechatronics
    {
        class HingeJointCollection;
    }
    namespace Mechatronics
    {
        class HydraulicCylinderCollection;
    }
    namespace Mechatronics
    {
        class HydraulicValveCollection;
    }
    namespace Mechatronics
    {
        class InclinometerCollection;
    }
    namespace Mechatronics
    {
        class LimitSwitchCollection;
    }
    namespace Mechatronics
    {
        class LinearLimitJointCollection;
    }
    namespace Mechatronics
    {
        class LinearSpringJointCollection;
    }
    namespace Mechatronics
    {
        class MATLABClientBuilder;
    }
    namespace Mechatronics
    {
        class MATLABSignalConnectionCollection;
    }
    namespace Mechatronics
    {
        class MotionProfileCollection;
    }
    namespace Mechatronics
    {
        class OPCClientBuilder;
    }
    namespace Mechatronics
    {
        class ObjectSinkCollection;
    }
    namespace Mechatronics
    {
        class ObjectSourceCollection;
    }
    namespace Mechatronics
    {
        class ObjectTransformerCollection;
    }
    namespace Mechatronics
    {
        class PMNavFolderLocatorCollection;
    }
    namespace Mechatronics
    {
        class PMNavFolderObjectCollection;
    }
    namespace Mechatronics
    {
        class PathConstraintJointCollection;
    }
    namespace Mechatronics
    {
        class PhysicsPreferenceCollection;
    }
    namespace Mechatronics
    {
        class PlanarJointCollection;
    }
    namespace Mechatronics
    {
        class PneumaticCylinderCollection;
    }
    namespace Mechatronics
    {
        class PneumaticValveCollection;
    }
    namespace Mechatronics
    {
        class PointOnCurveJointCollection;
    }
    namespace Mechatronics
    {
        class PositionControlCollection;
    }
    namespace Mechatronics
    {
        class PositionSensorCollection;
    }
    namespace Mechatronics
    {
        class PreferencesBuilder;
    }
    namespace Mechatronics
    {
        class PreventCollisionCollection;
    }
    namespace Mechatronics
    {
        class RackPinionCollection;
    }
    namespace Mechatronics
    {
        class ReadWriteDeviceCollection;
    }
    namespace Mechatronics
    {
        class RelayCollection;
    }
    namespace Mechatronics
    {
        class ReplacePhysicsBuilder;
    }
    namespace Mechatronics
    {
        class RigidBodyCollection;
    }
    namespace Mechatronics
    {
        class RuntimeBehaviorCollection;
    }
    namespace Mechatronics
    {
        class RuntimeFormulaCollection;
    }
    namespace Mechatronics
    {
        class RuntimeNCCollection;
    }
    namespace Mechatronics
    {
        class SCOUTExportBuilder;
    }
    namespace Mechatronics
    {
        class SCOUTImportBuilder;
    }
    namespace Mechatronics
    {
        class SHMConfigurationBuilder;
    }
    namespace Mechatronics
    {
        class SHMSignalConnectionCollection;
    }
    namespace Mechatronics
    {
        class ScrewJointCollection;
    }
    namespace Mechatronics
    {
        class SensorsActuatorsListBuilder;
    }
    namespace Mechatronics
    {
        class SignalAdapterCollection;
    }
    namespace Mechatronics
    {
        class SignalCollection;
    }
    namespace Mechatronics
    {
        class SignalConnectionCollection;
    }
    namespace Mechatronics
    {
        class SignalMappingBuilder;
    }
    namespace Mechatronics
    {
        class SlidingJointCollection;
    }
    namespace Mechatronics
    {
        class SpeedControlCollection;
    }
    namespace Mechatronics
    {
        class SpringDamperCollection;
    }
    namespace Mechatronics
    {
        class SymbolTableCollection;
    }
    namespace Mechatronics
    {
        class TagFormCollection;
    }
    namespace Mechatronics
    {
        class TagTableCollection;
    }
    namespace Mechatronics
    {
        class TransportSurfaceCollection;
    }
    namespace Mechatronics
    {
        class VelocitySensorCollection;
    }
    namespace Mechatronics
    {
        class VirtualAxisCollection;
    }
    class NXObject;
    namespace Positioning
    {
        class Constraint;
    }
    namespace Mechatronics
    {
        class PhysicsManagerImpl;
        /** A manager to deal with all physics objects.  <br> To obtain an instance of this class, refer to @link NXOpen::Part  NXOpen::Part @endlink  <br> 
         <br>  Created in NX7.5.1.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  PhysicsManager
        {
            private: PhysicsManagerImpl * m_physicsmanager_impl;
            private: NXOpen::Part* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit PhysicsManager(NXOpen::Part *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~PhysicsManager();
            /** Creates a @link NXOpen::Mechatronics::PreferencesBuilder NXOpen::Mechatronics::PreferencesBuilder@endlink  object.  @return  Mechatronics Preferences builder
             <br>  @deprecated Deprecated in NX9.0.0.  Use @link NXOpen::Mechatronics::PhysicsPreferenceCollection::CreatePreferenceBuilder NXOpen::Mechatronics::PhysicsPreferenceCollection::CreatePreferenceBuilder@endlink  instead <br>  

             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public:  NX_DEPRECATED("Deprecated in NX9.0.0.  Use NXOpen::Mechatronics::PhysicsPreferenceCollection::CreatePreferenceBuilder instead") NXOpen::Mechatronics::PreferencesBuilder * CreatePreferenceBuilder
            (
            );
            /** Creates a @link NXOpen::Mechatronics::ReplacePhysicsBuilder NXOpen::Mechatronics::ReplacePhysicsBuilder@endlink  object.  @return  Mechatronics Replace Physics builder
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::ReplacePhysicsBuilder * CreateReplacePhysicsBuilder
            (
            );
            /** Creates a @link NXOpen::Mechatronics::OPCClientBuilder NXOpen::Mechatronics::OPCClientBuilder@endlink  object.  @return  OPCClient Builder 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::OPCClientBuilder * CreateOpcclientBuilder
            (
            );
            /** Creates a @link NXOpen::Mechatronics::MATLABClientBuilder NXOpen::Mechatronics::MATLABClientBuilder@endlink  object.  @return  MATLABClient Builder 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::MATLABClientBuilder * CreateMatlabclientBuilder
            (
            );
            /** Remap the physics references in context
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void RemapPhysicsReferences
            (
                NXOpen::Assemblies::Component * replacedPartOcc /** @link NXOpen::Assemblies::Component NXOpen::Assemblies::Component@endlink  object. */
            );
            /** Log to delete
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void LogPhysicsToDelete
            (
                NXOpen::NXObject * physicsObject /** physics object */ 
            );
            /** Physics to rename
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetName
            (
                NXOpen::NXObject * physicsObject /** physics object */ ,
                const NXString & name /** the new name*/
            );
            /** Physics to rename
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetName
            (
                NXOpen::NXObject * physicsObject /** physics object */ ,
                const char * name /** the new name*/
            );
            /** Export MCD Signals, OPC Signal Connections and(or) SHM Signal Connections to csv file
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void ExportToCsv
            (
                const NXString & path /** path */ ,
                bool signal /** If true MCD Signals will be export to csv file.*/,
                bool connection /** If true Signal Connections will be export to csv file.*/
            );
            /** Export MCD Signals, OPC Signal Connections and(or) SHM Signal Connections to csv file
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void ExportToCsv
            (
                const char * path /** path */ ,
                bool signal /** If true MCD Signals will be export to csv file.*/,
                bool connection /** If true Signal Connections will be export to csv file.*/
            );
            /**  @brief  Export specified MCD Signals, OPC Signal Connections and(or) SHM Signal Connections to csv file.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void ExportSignalsToCsv
            (
                const NXString & path /** path */ ,
                std::vector<NXString> & names /** names */ ,
                std::vector<NXString> & owners /** owners */ ,
                const std::vector<NXOpen::Mechatronics::SignalBuilder::IOType> & ioTypes /** iotypes */ ,
                const std::vector<NXOpen::Mechatronics::SignalBuilder::DataType> & dataTypes /** datatypes */ ,
                const std::vector<bool> & bValues /** bvalues */ ,
                const std::vector<int> & nValues /** nvalues */ ,
                const std::vector<double> & dValues /** dvalues */ ,
                std::vector<NXString> & connectionNames /** connectionnames */ ,
                bool signal /** signal */ ,
                bool connection /** connection */ 
            );
            /**  @brief  Export specified MCD Signals, OPC Signal Connections and(or) SHM Signal Connections to csv file.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void ExportSignalsToCsv
            (
                const char * path /** path */ ,
                std::vector<NXString> & names /** names */ ,
                std::vector<NXString> & owners /** owners */ ,
                const std::vector<NXOpen::Mechatronics::SignalBuilder::IOType> & ioTypes /** iotypes */ ,
                const std::vector<NXOpen::Mechatronics::SignalBuilder::DataType> & dataTypes /** datatypes */ ,
                const std::vector<bool> & bValues /** bvalues */ ,
                const std::vector<int> & nValues /** nvalues */ ,
                const std::vector<double> & dValues /** dvalues */ ,
                std::vector<NXString> & connectionNames /** connectionnames */ ,
                bool signal /** signal */ ,
                bool connection /** connection */ 
            );
            /** Export MCD Signals to txt file
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void ExportToTxt
            (
                const NXString & path /** path */ 
            );
            /** Export MCD Signals to txt file
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void ExportToTxt
            (
                const char * path /** path */ 
            );
            /**  @brief  Export specified MCD Signals to txt file.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void ExportSignalsToTxt
            (
                const NXString & path /** path */ ,
                std::vector<NXString> & names /** names */ ,
                const std::vector<NXOpen::Mechatronics::SignalBuilder::IOType> & ioTypes /** iotypes */ ,
                const std::vector<NXOpen::Mechatronics::SignalBuilder::DataType> & dataTypes /** datatypes */ ,
                const std::vector<bool> & bValues /** bvalues */ ,
                const std::vector<int> & nValues /** nvalues */ ,
                const std::vector<double> & dValues /** dvalues */ ,
                std::vector<NXString> & addresses /** addresses */ ,
                std::vector<NXString> & comments /** comments */ 
            );
            /**  @brief  Export specified MCD Signals to txt file.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void ExportSignalsToTxt
            (
                const char * path /** path */ ,
                std::vector<NXString> & names /** names */ ,
                const std::vector<NXOpen::Mechatronics::SignalBuilder::IOType> & ioTypes /** iotypes */ ,
                const std::vector<NXOpen::Mechatronics::SignalBuilder::DataType> & dataTypes /** datatypes */ ,
                const std::vector<bool> & bValues /** bvalues */ ,
                const std::vector<int> & nValues /** nvalues */ ,
                const std::vector<double> & dValues /** dvalues */ ,
                std::vector<NXString> & addresses /** addresses */ ,
                std::vector<NXString> & comments /** comments */ 
            );
            /** Creates a @link NXOpen::Mechatronics::ECADExportBuilder NXOpen::Mechatronics::ECADExportBuilder@endlink  object.  @return  ECADExport Builder 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::ECADExportBuilder * CreateECADExportBuilder
            (
            );
            /** Creates a @link NXOpen::Mechatronics::ECADImportBuilder NXOpen::Mechatronics::ECADImportBuilder@endlink  object.  @return  ECADImport Builder 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::ECADImportBuilder * CreateECADImportBuilder
            (
            );
            /** Creates a @link NXOpen::Mechatronics::SignalMappingBuilder NXOpen::Mechatronics::SignalMappingBuilder@endlink .  @return  SignalMapping Builder 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SignalMappingBuilder * CreateSignalMappingBuilder
            (
            );
            /** Creates a @link NXOpen::Mechatronics::SHMConfigurationBuilder NXOpen::Mechatronics::SHMConfigurationBuilder@endlink  object.  @return  SHMConfiguration Builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SHMConfigurationBuilder * CreateSHMConfigurationBuilder
            (
            );
            /** Creates a @link NXOpen::Mechatronics::ConvertFromMTBBuilder NXOpen::Mechatronics::ConvertFromMTBBuilder@endlink  object.  @return  ConvertFromMTB Builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::ConvertFromMTBBuilder * CreateConvertFromMtbbuilder
            (
            );
            /** Creates a @link NXOpen::Mechatronics::SCOUTExportBuilder NXOpen::Mechatronics::SCOUTExportBuilder@endlink  object.  @return  SCOUTExport Builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SCOUTExportBuilder * CreateSCOUTExportBuilder
            (
            );
            /** Creates a @link NXOpen::Mechatronics::SCOUTImportBuilder NXOpen::Mechatronics::SCOUTImportBuilder@endlink  object.  @return  SCOUTImport Builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SCOUTImportBuilder * CreateSCOUTImportBuilder
            (
            );
            /** Creates a @link NXOpen::Mechatronics::ChangeOwnerBuilder NXOpen::Mechatronics::ChangeOwnerBuilder@endlink  object.  @return  ChangeOwner Builder 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::ChangeOwnerBuilder * CreateChangeOwnerBuilder
            (
            );
            /**  @brief  Creates a @link NXOpen::Mechatronics::ExportSensorsActuatorsBuilder NXOpen::Mechatronics::ExportSensorsActuatorsBuilder@endlink  object.  

               @return  ExportSensorsActuators Builder 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::ExportSensorsActuatorsBuilder * CreateExportSensorsActuatorsBuilder
            (
            );
            /**  @brief  Creates a @link NXOpen::Mechatronics::SensorsActuatorsListBuilder NXOpen::Mechatronics::SensorsActuatorsListBuilder@endlink  object.  

               @return  SensorsActuatorsList Builder 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SensorsActuatorsListBuilder * CreateSensorsActuatorsListBuilder
            (
            );

            /// \cond NX_NO_DOC 
            /**  @brief  Adopts all the @link NXOpen::Positioning::Constraint  NXOpen::Positioning::Constraint @endlink  in part to @link NXOpen::Mechatronics::PhysicsJoint  NXOpen::Mechatronics::PhysicsJoint @endlink 
                        and @link NXOpen::Mechatronics::PhysicsConstraint  NXOpen::Mechatronics::PhysicsConstraint @endlink .  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void AdoptAssemblyJoint
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**  @brief  Adopts one @link NXOpen::Positioning::Constraint  NXOpen::Positioning::Constraint @endlink  to @link NXOpen::Mechatronics::PhysicsJoint  NXOpen::Mechatronics::PhysicsJoint @endlink 
                        and(or) @link NXOpen::Mechatronics::PhysicsConstraint  NXOpen::Mechatronics::PhysicsConstraint @endlink .  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void AdoptAssemblyJoint
            (
                NXOpen::Positioning::Constraint * joint /** The @link NXOpen::Positioning::Constraint NXOpen::Positioning::Constraint@endlink  to be adopted.*/
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**  @brief  Returns the adoption of the @link NXOpen::Positioning::Constraint  NXOpen::Positioning::Constraint @endlink .  

               @return  The adoption can be @link NXOpen::Mechatronics::PhysicsJoint  NXOpen::Mechatronics::PhysicsJoint @endlink 
                                                                                    or @link NXOpen::Mechatronics::PhysicsConstraint  NXOpen::Mechatronics::PhysicsConstraint @endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::DisplayableObject * QueryAdoption
            (
                NXOpen::Positioning::Constraint * joint /** joint */ 
            );

            /// \endcond 


            /** Returns the @link NXOpen::Mechatronics::RigidBodyCollection  NXOpen::Mechatronics::RigidBodyCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::RigidBodyCollection *RigidBodies();
            /** Returns the @link NXOpen::Mechatronics::CollisionBodyCollection  NXOpen::Mechatronics::CollisionBodyCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::CollisionBodyCollection *CollisionBodies();
            /** Returns the @link NXOpen::Mechatronics::MotionProfileCollection  NXOpen::Mechatronics::MotionProfileCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::MotionProfileCollection *MotionProfiles();
            /** Returns the @link NXOpen::Mechatronics::RuntimeBehaviorCollection  NXOpen::Mechatronics::RuntimeBehaviorCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::RuntimeBehaviorCollection *RuntimeBehaviors();
            /** Returns the @link NXOpen::Mechatronics::RuntimeNCCollection  NXOpen::Mechatronics::RuntimeNCCollection @endlink  belonging to this part 
             <br>  Created in NX9.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::RuntimeNCCollection *RuntimeNCs();
            /** Returns the @link NXOpen::Mechatronics::CollisionMaterialCollection  NXOpen::Mechatronics::CollisionMaterialCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::CollisionMaterialCollection *CollisionMaterials();
            /** Returns the @link NXOpen::Mechatronics::TransportSurfaceCollection  NXOpen::Mechatronics::TransportSurfaceCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::TransportSurfaceCollection *TransportSurfaces();
            /** Returns the @link NXOpen::Mechatronics::HingeJointCollection  NXOpen::Mechatronics::HingeJointCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::HingeJointCollection *HingeJoints();
            /** Returns the @link NXOpen::Mechatronics::SpeedControlCollection  NXOpen::Mechatronics::SpeedControlCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::SpeedControlCollection *SpeedControls();
            /** Returns the @link NXOpen::Mechatronics::PositionControlCollection  NXOpen::Mechatronics::PositionControlCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::PositionControlCollection *PositionControls();
            /** Returns the @link NXOpen::Mechatronics::ForceTorqueControlCollection  NXOpen::Mechatronics::ForceTorqueControlCollection @endlink  belonging to this part 
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::ForceTorqueControlCollection *ForceTorqueControls();
            /** Returns the @link NXOpen::Mechatronics::SlidingJointCollection  NXOpen::Mechatronics::SlidingJointCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::SlidingJointCollection *SlidingJoints();
            /** Returns the @link NXOpen::Mechatronics::CollisionSensorCollection  NXOpen::Mechatronics::CollisionSensorCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::CollisionSensorCollection *CollisionSensors();
            /** Returns the @link NXOpen::Mechatronics::CylindricalJointCollection  NXOpen::Mechatronics::CylindricalJointCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::CylindricalJointCollection *CylindricalJoints();
            /** Returns the @link NXOpen::Mechatronics::ScrewJointCollection  NXOpen::Mechatronics::ScrewJointCollection @endlink  belonging to this part 
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::ScrewJointCollection *ScrewJoints();
            /** Returns the @link NXOpen::Mechatronics::PlanarJointCollection  NXOpen::Mechatronics::PlanarJointCollection @endlink  belonging to this part 
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::PlanarJointCollection *PlanarJoints();
            /** Returns the @link NXOpen::Mechatronics::RackPinionCollection  NXOpen::Mechatronics::RackPinionCollection @endlink  belonging to this part 
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::RackPinionCollection *RackPinions();
            /** Returns the @link NXOpen::Mechatronics::FixedJointCollection  NXOpen::Mechatronics::FixedJointCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::FixedJointCollection *FixedJoints();
            /** Returns the @link NXOpen::Mechatronics::BallJointCollection  NXOpen::Mechatronics::BallJointCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::BallJointCollection *BallJoints();
            /** Returns the @link NXOpen::Mechatronics::AngularSpringJointCollection  NXOpen::Mechatronics::AngularSpringJointCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::AngularSpringJointCollection *AngularSpringJoints();
            /** Returns the @link NXOpen::Mechatronics::LinearSpringJointCollection  NXOpen::Mechatronics::LinearSpringJointCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::LinearSpringJointCollection *LinearSpringJoints();
            /** Returns the @link NXOpen::Mechatronics::GearCollection  NXOpen::Mechatronics::GearCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::GearCollection *Gears();
            /** Returns the @link NXOpen::Mechatronics::CamCollection  NXOpen::Mechatronics::CamCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::CamCollection *Cams();
            /** Returns the @link NXOpen::Mechatronics::AngularLimitJointCollection  NXOpen::Mechatronics::AngularLimitJointCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::AngularLimitJointCollection *AngularLimitJoints();
            /** Returns the @link NXOpen::Mechatronics::LinearLimitJointCollection  NXOpen::Mechatronics::LinearLimitJointCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::LinearLimitJointCollection *LinearLimitJoints();
            /** Returns the @link NXOpen::Mechatronics::BreakingConstraintCollection  NXOpen::Mechatronics::BreakingConstraintCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::BreakingConstraintCollection *BreakingConstraints();
            /** Returns the @link NXOpen::Mechatronics::PreventCollisionCollection  NXOpen::Mechatronics::PreventCollisionCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::PreventCollisionCollection *PreventCollisions();
            /** Returns the @link NXOpen::Mechatronics::ChangeMaterialCollection  NXOpen::Mechatronics::ChangeMaterialCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::ChangeMaterialCollection *ChangeMaterials();
            /** Returns the @link NXOpen::Mechatronics::VirtualAxisCollection  NXOpen::Mechatronics::VirtualAxisCollection @endlink  belonging to this part 
             <br>  Created in NX10.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::VirtualAxisCollection *VirtualAxis();
            /** Returns the @link NXOpen::Mechatronics::ObjectSourceCollection  NXOpen::Mechatronics::ObjectSourceCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::ObjectSourceCollection *ObjectSources();
            /** Returns the @link NXOpen::Mechatronics::ObjectSinkCollection  NXOpen::Mechatronics::ObjectSinkCollection @endlink  belonging to this part 
             <br>  Created in NX7.5.1.  <br>  
            */
            public: NXOpen::Mechatronics::ObjectSinkCollection *ObjectSinks();
            /** Returns the @link NXOpen::Mechatronics::GraphControlCollection  NXOpen::Mechatronics::GraphControlCollection @endlink  belonging to this part 
             <br>  Created in NX8.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::GraphControlCollection *GraphControls();
            /** Returns the @link NXOpen::Mechatronics::ExternalConnectionCollection  NXOpen::Mechatronics::ExternalConnectionCollection @endlink  belonging to this part 
             <br>  Created in NX8.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::ExternalConnectionCollection *ExternalConnections();
            /** Returns the @link NXOpen::Mechatronics::RuntimeFormulaCollection  NXOpen::Mechatronics::RuntimeFormulaCollection @endlink  belonging to this part 
             <br>  Created in NX8.5.0.  <br>  
            */
            public: NXOpen::Mechatronics::RuntimeFormulaCollection *RuntimeFormulas();
            /** Returns the @link NXOpen::Mechatronics::SignalAdapterCollection  NXOpen::Mechatronics::SignalAdapterCollection @endlink  belonging to this part 
             <br>  Created in NX8.5.0.  <br>  
            */
            public: NXOpen::Mechatronics::SignalAdapterCollection *SignalAdapters();
            /** Returns the @link NXOpen::Mechatronics::AdapterSignalCollection  NXOpen::Mechatronics::AdapterSignalCollection @endlink  belonging to this part 
             <br>  Created in NX8.5.0.  <br>  
            */
            public: NXOpen::Mechatronics::AdapterSignalCollection *AdapterSignals();
            /** Returns the @link NXOpen::Mechatronics::AdapterFormulaCollection  NXOpen::Mechatronics::AdapterFormulaCollection @endlink  belonging to this part 
             <br>  Created in NX8.5.0.  <br>  
            */
            public: NXOpen::Mechatronics::AdapterFormulaCollection *AdapterFormulas();
            /** Returns the @link NXOpen::Mechatronics::SignalCollection  NXOpen::Mechatronics::SignalCollection @endlink  belonging to this part 
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::SignalCollection *Signals();
            /** Returns the @link NXOpen::Mechatronics::ExpressionBlockCollection  NXOpen::Mechatronics::ExpressionBlockCollection @endlink  belonging to this part 
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::ExpressionBlockCollection *ExpressionBlocks();
            /** Returns the @link NXOpen::Mechatronics::ExpressionBlockFormulaCollection  NXOpen::Mechatronics::ExpressionBlockFormulaCollection @endlink  belonging to this part 
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::ExpressionBlockFormulaCollection *ExpressionBlockFormulas();
            /** Returns the @link NXOpen::Mechatronics::SignalConnectionCollection  NXOpen::Mechatronics::SignalConnectionCollection @endlink  belonging to this part 
             <br>  Created in NX8.5.0.  <br>  
            */
            public: NXOpen::Mechatronics::SignalConnectionCollection *SignalConnections();
            /** Returns the @link NXOpen::Mechatronics::SHMSignalConnectionCollection  NXOpen::Mechatronics::SHMSignalConnectionCollection @endlink  belonging to this part 
             <br>  Created in NX9.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::SHMSignalConnectionCollection *SHMSignalConnections();
            /** Returns the @link NXOpen::Mechatronics::MATLABSignalConnectionCollection  NXOpen::Mechatronics::MATLABSignalConnectionCollection @endlink  belonging to this part 
             <br>  Created in NX9.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::MATLABSignalConnectionCollection *MATLABSignalConnections();
            /** Returns the @link NXOpen::Mechatronics::PointOnCurveJointCollection  NXOpen::Mechatronics::PointOnCurveJointCollection @endlink  belonging to this part 
             <br>  Created in NX9.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::PointOnCurveJointCollection *PointOnCurveJoints();
            /** Returns the @link NXOpen::Mechatronics::CurveOnCurveJointCollection  NXOpen::Mechatronics::CurveOnCurveJointCollection @endlink  belonging to this part 
             <br>  Created in NX9.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::CurveOnCurveJointCollection *CurveOnCurveJoints();
            /** Returns the @link NXOpen::Mechatronics::PhysicsPreferenceCollection  NXOpen::Mechatronics::PhysicsPreferenceCollection @endlink  belonging to this part 
             <br>  Created in NX9.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::PhysicsPreferenceCollection *PhysicsPreference();
            /** Returns the @link NXOpen::Mechatronics::PMNavFolderObjectCollection  NXOpen::Mechatronics::PMNavFolderObjectCollection @endlink  belonging to this part 
             <br>  Created in NX9.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::PMNavFolderObjectCollection *PMNavFolderObject();
            /** Returns the @link NXOpen::Mechatronics::PMNavFolderLocatorCollection  NXOpen::Mechatronics::PMNavFolderLocatorCollection @endlink  belonging to this part 
             <br>  Created in NX9.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::PMNavFolderLocatorCollection *PMNavFolderLocator();
            /** Returns the @link NXOpen::Mechatronics::CamProfileCollection  NXOpen::Mechatronics::CamProfileCollection @endlink  belonging to this part 
             <br>  Created in NX9.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::CamProfileCollection *CamProfiles();
            /** Returns the @link NXOpen::Mechatronics::ObjectTransformerCollection  NXOpen::Mechatronics::ObjectTransformerCollection @endlink  belonging to this part 
             <br>  Created in NX10.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::ObjectTransformerCollection *ObjectTransformer();
            /** Returns the @link NXOpen::Mechatronics::SpringDamperCollection  NXOpen::Mechatronics::SpringDamperCollection @endlink  belonging to this part 
             <br>  Created in NX10.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::SpringDamperCollection *SpringDampers();
            /** Returns the @link NXOpen::Mechatronics::TagFormCollection  NXOpen::Mechatronics::TagFormCollection @endlink  belonging to this part 
             <br>  Created in NX10.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::TagFormCollection *TagForms();
            /** Returns the @link NXOpen::Mechatronics::TagTableCollection  NXOpen::Mechatronics::TagTableCollection @endlink  belonging to this part 
             <br>  Created in NX10.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::TagTableCollection *TagTables();
            /** Returns the @link NXOpen::Mechatronics::ReadWriteDeviceCollection  NXOpen::Mechatronics::ReadWriteDeviceCollection @endlink  belonging to this part 
             <br>  Created in NX10.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::ReadWriteDeviceCollection *ReadWriteDevices();
            /** Returns the @link NXOpen::Mechatronics::DisplayChangerCollection  NXOpen::Mechatronics::DisplayChangerCollection @endlink  belonging to this part 
             <br>  Created in NX10.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::DisplayChangerCollection *DisplayChanger();
            /** Returns the @link NXOpen::Mechatronics::PathConstraintJointCollection  NXOpen::Mechatronics::PathConstraintJointCollection @endlink  belonging to this part 
             <br>  Created in NX10.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::PathConstraintJointCollection *PathConstraintJoints();
            /** Returns the @link NXOpen::Mechatronics::SymbolTableCollection  NXOpen::Mechatronics::SymbolTableCollection @endlink  belonging to this part 
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::SymbolTableCollection *SymbolTables();
            /**  @brief  Returns the @link NXOpen::Mechatronics::DistanceSensorCollection  NXOpen::Mechatronics::DistanceSensorCollection @endlink  belonging to this part  

              
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::DistanceSensorCollection *DistanceSensors();
            /**  @brief  Returns the @link NXOpen::Mechatronics::PositionSensorCollection  NXOpen::Mechatronics::PositionSensorCollection @endlink  belonging to this part  

              
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::PositionSensorCollection *PositionSensors();
            /**  @brief  Returns the @link NXOpen::Mechatronics::VelocitySensorCollection  NXOpen::Mechatronics::VelocitySensorCollection @endlink  belonging to this part  

              
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::VelocitySensorCollection *VelocitySensors();
            /**  @brief  Returns the @link NXOpen::Mechatronics::GenericSensorCollection  NXOpen::Mechatronics::GenericSensorCollection @endlink  belonging to this part  

              
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::GenericSensorCollection *GenericSensors();
            /**  @brief  Returns the @link NXOpen::Mechatronics::LimitSwitchCollection  NXOpen::Mechatronics::LimitSwitchCollection @endlink  belonging to this part  

              
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::LimitSwitchCollection *LimitSwitchs();
            /**  @brief  Returns the @link NXOpen::Mechatronics::RelayCollection  NXOpen::Mechatronics::RelayCollection @endlink  belonging to this part  

              
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::RelayCollection *Relays();
            /**  @brief  Returns the @link NXOpen::Mechatronics::InclinometerCollection  NXOpen::Mechatronics::InclinometerCollection @endlink  belonging to this part  

              
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::InclinometerCollection *Inclinometers();
            /**  @brief  Returns the @link NXOpen::Mechatronics::AccelerometerCollection  NXOpen::Mechatronics::AccelerometerCollection @endlink  belonging to this part  

              
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::AccelerometerCollection *Accelerometers();
            /**  @brief  Returns the @link NXOpen::Mechatronics::PneumaticCylinderCollection  NXOpen::Mechatronics::PneumaticCylinderCollection @endlink  belonging to this part  

              
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::PneumaticCylinderCollection *PneumaticCylinders();
            /**  @brief  Returns the @link NXOpen::Mechatronics::PneumaticValveCollection  NXOpen::Mechatronics::PneumaticValveCollection @endlink  belonging to this part  

              
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::PneumaticValveCollection *PneumaticValves();
            /**  @brief  Returns the @link NXOpen::Mechatronics::HydraulicCylinderCollection  NXOpen::Mechatronics::HydraulicCylinderCollection @endlink  belonging to this part  

              
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::HydraulicCylinderCollection *HydraulicCylinders();
            /**  @brief  Returns the @link NXOpen::Mechatronics::PneumaticValveCollection  NXOpen::Mechatronics::PneumaticValveCollection @endlink  belonging to this part  

              
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::Mechatronics::HydraulicValveCollection *HydraulicValves();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
