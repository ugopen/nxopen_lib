#ifndef NXOpen_DIAGRAMMING_PIPEBUILDER_HXX_INCLUDED
#define NXOpen_DIAGRAMMING_PIPEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Diagramming_PipeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Diagramming_CannedAnnotationBuilder.hxx>
#include <NXOpen/Diagramming_ConnectionBuilder.hxx>
#include <NXOpen/Diagramming_ConnectionLocationBuilder.hxx>
#include <NXOpen/Diagramming_PipeBuilder.hxx>
#include <NXOpen/Diagramming_RenderingPropertiesBuilder.hxx>
#include <NXOpen/Diagramming_Sheet.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Diagramming
    {
        class PipeBuilder;
    }
    class Builder;
    namespace Diagramming
    {
        class CannedAnnotationBuilder;
    }
    namespace Diagramming
    {
        class ConnectionBuilder;
    }
    namespace Diagramming
    {
        class ConnectionLocationBuilder;
    }
    namespace Diagramming
    {
        class ConnectionLocationBuilderList;
    }
    namespace Diagramming
    {
        class RenderingPropertiesBuilder;
    }
    namespace Diagramming
    {
        class Sheet;
    }
    namespace Diagramming
    {
        class _PipeBuilderBuilder;
        class PipeBuilderImpl;

        /// \cond NX_NO_DOC 
        /**
            Represents a PipeBuilder.
             <br> To create a new instance of this class, use @link NXOpen::Diagramming::DiagrammingTestManager::CreatePipeBuilder  NXOpen::Diagramming::DiagrammingTestManager::CreatePipeBuilder @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENDEBUGSESSIONCPPEXPORT  PipeBuilder : public NXOpen::Builder
        {
            private: PipeBuilderImpl * m_pipebuilder_impl;
            private: friend class  _PipeBuilderBuilder;
            protected: PipeBuilder();
            public: ~PipeBuilder();
            /** Set the connection owning sheet and the connection symbol ID in reuse library. It must be called after the builder is created, and works only in creation mode. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void Initialize
            (
                NXOpen::Diagramming::Sheet * owningSheet /** owning sheet of the pipe. */,
                const NXString & symbolId /** item id as \@DB/002649/A in ugmanager mode. */
            );
            /** Set the connection owning sheet and the connection symbol ID in reuse library. It must be called after the builder is created, and works only in creation mode. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void Initialize
            (
                NXOpen::Diagramming::Sheet * owningSheet /** owning sheet of the pipe. */,
                const char * symbolId /** item id as \@DB/002649/A in ugmanager mode. */
            );
            /**Returns  the Owning Sheet of this sheet element. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::Sheet * OwningSheet
            (
            );
            /**Returns  the connection of this pipe. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::ConnectionBuilder * Connection
            (
            );
            /**Returns  the label of this pipe. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::CannedAnnotationBuilder * Label
            (
            );
            /**Returns  the location of the flow direction symbol. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::ConnectionLocationBuilderList * FlowDirectionLocations
            (
            );
            /**Returns  the start arrow type. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString StartArrowType
            (
            );
            /**Sets  the start arrow type. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStartArrowType
            (
                const NXString & startArrowType /** startarrowtype */ 
            );
            /**Sets  the start arrow type. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void SetStartArrowType
            (
                const char * startArrowType /** startarrowtype */ 
            );
            /**Returns  the end arrow type. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString EndArrowType
            (
            );
            /**Sets  the end arrow type. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEndArrowType
            (
                const NXString & endArrowType /** endarrowtype */ 
            );
            /**Sets  the end arrow type. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void SetEndArrowType
            (
                const char * endArrowType /** endarrowtype */ 
            );
            /** Add a flow direction symbol to the connetion.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::ConnectionLocationBuilder * AddFlowDirection
            (
            );
            /**Returns  the symbol ID of this pipe. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString SymbolId
            (
            );
            /** Get connection rendering properties.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::RenderingPropertiesBuilder * GetConnectionRenderingProperties
            (
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
