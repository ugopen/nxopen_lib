#ifndef NXOpen_TOOLING_POCKETBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_POCKETBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_PocketBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_PocketBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class PocketBuilder;
    }
    class Builder;
    class SelectBodyList;
    class SelectNXObjectList;
    namespace Tooling
    {
        class _PocketBuilderBuilder;
        class PocketBuilderImpl;
        /** Mold Wizard pocket management builder  <br> To create a new instance of this class, use @link NXOpen::Tooling::PocketCollection::CreatePocketBuilder  NXOpen::Tooling::PocketCollection::CreatePocketBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        EntireComponentPattern </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        PreviewFalseBody </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  PocketBuilder : public NXOpen::Builder
        {
            /** Represents the pocket operation method */
            public: enum ModeType
            {
                ModeTypeSubtract/** do subtract */,
                ModeTypeAdd/** do unite */
            };

            /** Represents the select type of tool */
            public: enum ToolType
            {
                ToolTypePart/** part */,
                ToolTypeSolid/** solid */
            };

            /** Represents the pocket refset types*/
            public: enum RsetType
            {
                RsetTypeFalse/** false */,
                RsetTypeTrue/** true */,
                RsetTypeBoth/** both */
            };

            private: PocketBuilderImpl * m_pocketbuilder_impl;
            private: friend class  _PocketBuilderBuilder;
            protected: PocketBuilder();
            public: ~PocketBuilder();
            /**Returns  the mode select types 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::PocketBuilder::ModeType ModeSelection
            (
            );
            /**Sets  the mode select types 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetModeSelection
            (
                NXOpen::Tooling::PocketBuilder::ModeType modeSelection /** modeselection */ 
            );
            /**Returns  the target part selection 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * SelectTarget
            (
            );
            /**Returns  the tool part selection 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * SelectTool
            (
            );
            /**Returns  the types of tool to select 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::PocketBuilder::ToolType SelectTypes
            (
            );
            /**Sets  the types of tool to select 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSelectTypes
            (
                NXOpen::Tooling::PocketBuilder::ToolType selectTypes /** selecttypes */ 
            );
            /**Returns  the option for selecting entire component pattern.  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool EntireComponentPattern
            (
            );
            /**Sets  the option for selecting entire component pattern.  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void SetEntireComponentPattern
            (
                bool entire /** entire */ 
            );
            /**Returns  the types of reference sets 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::PocketBuilder::RsetType ReferenceSets
            (
            );
            /**Sets  the types of reference sets 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetReferenceSets
            (
                NXOpen::Tooling::PocketBuilder::RsetType referenceSets /** referencesets */ 
            );
            /** Finds the intersected components to create pocket 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void FindIntersection
            (
            );
            /** Checks the pocket status of standard parts 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void CheckStatus
            (
            );
            /** The function to remove pocket 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void RemovePocket
            (
            );
            /** Edits false body 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void EditFalseBody
            (
            );
            /**Returns  the association setting access functions 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool AssociationSetting
            (
            );
            /**Sets  the association setting access functions 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAssociationSetting
            (
                bool associationSetting /** associationsetting */ 
            );
            /**Returns  the show or hide value access functions 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowSetting
            (
            );
            /**Sets  the show or hide value access functions 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShowSetting
            (
                bool showSetting /** showsetting */ 
            );
            /**Returns  the option for creating interference solids for HD3D. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool CreateSolidSetting
            (
            );
            /**Sets  the option for creating interference solids for HD3D. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCreateSolidSetting
            (
                bool createSolidSetting /** createsolidsetting */ 
            );
            /**Returns  the option for saving pocket check result in part. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool SaveSetting
            (
            );
            /**Sets  the option for saving pocket check result in part. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSaveSetting
            (
                bool saveSetting /** savesetting */ 
            );
            /**Returns  the option for previewing family part false bodies.  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool PreviewFalseBody
            (
            );
            /**Sets  the option for previewing family part false bodies.  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void SetPreviewFalseBody
            (
                bool previewFalse /** previewfalse */ 
            );
            /** Deletes the family tool false body 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void DeleteFamilyToolFalse
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
