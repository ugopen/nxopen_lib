#ifndef NXOpen_FACET_FACETBODYFROMBODYBUILDER_HXX_INCLUDED
#define NXOpen_FACET_FACETBODYFROMBODYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Facet_FacetBodyFromBodyBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Facet_FacetBodyFromBodyBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_facet_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Facet
    {
        class FacetBodyFromBodyBuilder;
    }
    class Builder;
    class SelectDisplayableObjectList;
    namespace Facet
    {
        class _FacetBodyFromBodyBuilderBuilder;
        class FacetBodyFromBodyBuilderImpl;
        /**
            Represents a @link NXOpen::Facet::FacetBodyFromBodyBuilder NXOpen::Facet::FacetBodyFromBodyBuilder@endlink  builder. 
            It converts the selected analytic bodies to NX convergent bodies bodies. 
            The original inputs are deleted.
             <br> To create a new instance of this class, use @link NXOpen::Facet::FacetModelingCollection::CreateFacetBodyFromBodyBuilder  NXOpen::Facet::FacetModelingCollection::CreateFacetBodyFromBodyBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Associative </td> <td> 
         
        False </td> </tr> 

        <tr><td> 
         
        MaximumDeviation </td> <td> 
         
        0.1 (millimeters part), 0.005 (inches part) </td> </tr> 

        <tr><td> 
         
        OriginalBodyOption </td> <td> 
         
        Hide </td> </tr> 

        <tr><td> 
         
        OutputType </td> <td> 
         
        ConvergentBody </td> </tr> 

        </table>  

         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_FACETEXPORT  FacetBodyFromBodyBuilder : public NXOpen::Builder
        {
            /** These options represent the type of output body */
            public: enum OutputTypes
            {
                OutputTypesConvergentBody/** Convert To Convergent bodies */,
                OutputTypesNXFacetBody/** Convert to NX Facet Bodies */,
                OutputTypesJTFacetBody/** Convert To JT Facet bodies */
            };

            /** These options represent the options for handling original body: Keep, Hide, Delete  */
            public: enum OriginalBodyOptions
            {
                OriginalBodyOptionsKeep/** Keep original body */,
                OriginalBodyOptionsHide/** Hide original body */,
                OriginalBodyOptionsDelete/** Delete original body */
            };

            private: FacetBodyFromBodyBuilderImpl * m_facetbodyfrombodybuilder_impl;
            private: friend class  _FacetBodyFromBodyBuilderBuilder;
            protected: FacetBodyFromBodyBuilder();
            public: ~FacetBodyFromBodyBuilder();
            /**Returns  the output of the type of enum 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::FacetBodyFromBodyBuilder::OutputTypes OutputType
            (
            );
            /**Sets  the output of the type of enum 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetOutputType
            (
                NXOpen::Facet::FacetBodyFromBodyBuilder::OutputTypes enumOutputType /** enumoutputtype */ 
            );
            /**Returns  the input non-faceted bodies to convert 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * NonFacetedBodiesToConvert
            (
            );
            /**Returns  the original body option of enum 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::FacetBodyFromBodyBuilder::OriginalBodyOptions OriginalBodyOption
            (
            );
            /**Sets  the original body option of enum 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetOriginalBodyOption
            (
                NXOpen::Facet::FacetBodyFromBodyBuilder::OriginalBodyOptions enumOriginalBodyOption /** enumoriginalbodyoption */ 
            );
            /**Returns  the maximum deviation 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double MaximumDeviation
            (
            );
            /**Sets  the maximum deviation 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetMaximumDeviation
            (
                double maximumDeviation /** maximumdeviation */ 
            );
            /**Returns  the option that specifies whether the facet body from body operation is associative 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool Associative
            (
            );
            /**Sets  the option that specifies whether the facet body from body operation is associative 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetAssociative
            (
                bool associative /** associative */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
