#ifndef NXOpen_ROUTING_ASSIGNCORNERBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_ASSIGNCORNERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_AssignCornerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Routing_AssignCornerBuilder.hxx>
#include <NXOpen/Routing_CornerTypeBuilder.hxx>
#include <NXOpen/Routing_RouteObjectCollector.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class AssignCornerBuilder;
    }
    class Builder;
    class NXObject;
    namespace Routing
    {
        class CornerTypeBuilder;
    }
    namespace Routing
    {
        class RouteObjectCollector;
    }
    namespace Routing
    {
        class Stock;
    }
    class SelectNXObject;
    class SelectNXObjectList;
    namespace Routing
    {
        class _AssignCornerBuilderBuilder;
        class AssignCornerBuilderImpl;
        /** Builder class for Assign Corner which creates corner <br> To create a new instance of this class, use @link NXOpen::Routing::RouteManager::CreateAssignCornerBuilder  NXOpen::Routing::RouteManager::CreateAssignCornerBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        RouteAssignCornerCornerBlock.RouteCornerBendMethods </td> <td> 
         
        Radius </td> </tr> 

        <tr><td> 
         
        RouteAssignCornerCornerBlock.RouteCornerBendOptions </td> <td> 
         
        Radius </td> </tr> 

        <tr><td> 
         
        RouteAssignCornerCornerBlock.RouteCornerRadius.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        RouteAssignCornerCornerBlock.RouteCornerRatioToDiameter.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        RouteAssignCornerCornerBlock.RouteCornerRequireLinearSolution </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        RouteAssignCornerCornerBlock.RouteCornerTypeOptions </td> <td> 
         
        None </td> </tr> 

        </table>  

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  AssignCornerBuilder : public NXOpen::Builder
        {
            private: AssignCornerBuilderImpl * m_assigncornerbuilder_impl;
            private: friend class  _AssignCornerBuilderBuilder;
            protected: AssignCornerBuilder();
            public: ~AssignCornerBuilder();
            /**Returns  the route assign corner start objects.  Valid start objects are @link NXOpen::Routing::ControlPoint NXOpen::Routing::ControlPoint@endlink 
                        and @link NXOpen::Routing::ISegment NXOpen::Routing::ISegment@endlink 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::SelectNXObject * RouteAssignCornerStartObject
            (
            );
            /**Returns  the route assign corner end objects.  Valid start objects objects are @link NXOpen::Routing::ControlPoint NXOpen::Routing::ControlPoint@endlink 
                        and @link NXOpen::Routing::ISegment NXOpen::Routing::ISegment@endlink 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::SelectNXObject * RouteAssignCornerEndObject
            (
            );
            /**Returns  the route assign corner corner block 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::CornerTypeBuilder * RouteAssignCornerCornerBlock
            (
            );
            /**Returns  the routing object colletor 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::RouteObjectCollector * RouteAssignCornerRouteSelection
            (
            );
            /**Returns  the value to store whether reverse order (for bend creation) or not
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: int ReverseValue
            (
            );
            /**Sets  the value to store whether reverse order (for bend creation) or not
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetReverseValue
            (
                int num /** num */ 
            );
            /**Returns  the routing object collector for ubend
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::RouteObjectCollector * UBendSelection
            (
            );
            /**Returns  the user selected correct object where correct object is
                    @link NXOpen::Routing::Stock NXOpen::Routing::Stock@endlink  and @link NXOpen::Routing::ISegment NXOpen::Routing::ISegment@endlink .
                     
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::SelectNXObjectList * SelectCopeStock
            (
            );
            /** Set the @link NXOpen::Routing::Stock NXOpen::Routing::Stock@endlink  object list when list box
                        is updated. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetStockList
            (
                const std::vector<NXOpen::Routing::Stock *> & stockObjects /** Routing Stocks for cope creation*/
            );
            /** Gets Attribute holder in builder, which is user for template attribute assignment.  @return  Object to hold template attributes 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::NXObject * GetAttributeHolder
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
