#ifndef NXOpen_SIM_NCPROGRAMMANAGERBUILDER_HXX_INCLUDED
#define NXOpen_SIM_NCPROGRAMMANAGERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_NcProgramManagerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SIM_Breakpoint.hxx>
#include <NXOpen/SIM_NcProgram.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        class NcProgramManagerBuilder;
    }
    class Builder;
    namespace SIM
    {
        class Breakpoint;
    }
    namespace SIM
    {
        class NcProgram;
    }
    namespace SIM
    {
        class _NcProgramManagerBuilderBuilder;
        class NcProgramManagerBuilderImpl;

        /// \cond NX_NO_DOC 
        /** Represents a NcProgramManagerBuilder builder object.  <br> To create a new instance of this class, use @link NXOpen::SIM::KinematicConfigurator::CreateNcProgramManagerBuilder  NXOpen::SIM::KinematicConfigurator::CreateNcProgramManagerBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_SIMEXPORT  NcProgramManagerBuilder : public NXOpen::Builder
        {
            private: NcProgramManagerBuilderImpl * m_ncprogrammanagerbuilder_impl;
            private: friend class  _NcProgramManagerBuilderBuilder;
            protected: NcProgramManagerBuilder();
            public: ~NcProgramManagerBuilder();
            /** Add a matching breakpoint to program manager. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void AddMatchingBreakpoint
            (
                const NXString & condition /** The condition for the line and program independent breakpoint to be added. */
            );
            /** Add a matching breakpoint to program manager. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            void AddMatchingBreakpoint
            (
                const char * condition /** The condition for the line and program independent breakpoint to be added. */
            );
            /** Add a breakpoint to a program line. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void AddBreakpoint
            (
                NXOpen::SIM::NcProgram * program /** The program in which the breakpoint is to be added. */,
                int lineNumber /** The line number of the breakpoint (zero based). */
            );
            /** Activate a breakpoint in a program line. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void ActivateBreakpoint
            (
                NXOpen::SIM::NcProgram * program /** The program in which the breakpoint is to be activated. */,
                int lineNumber /** The line number of the breakpoint (zero based). */
            );
            /** Deactivate a breakpoint in a program line. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void DeactivateBreakpoint
            (
                NXOpen::SIM::NcProgram * program /** The program in which the breakpoint is to be deactivated. */,
                int lineNumber /** The line number of the breakpoint (zero based). */
            );
            /** Remove a breakpoint from a program line. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void DeleteBreakpoint
            (
                NXOpen::SIM::NcProgram * program /** The program in which the breakpoint is to be deleted */,
                int lineNumber /** The line number of the breakpoint (zero based). */
            );
            /** Get all breakpoints.  @return  array of all breakpoints 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::SIM::Breakpoint *> GetBreakpoints
            (
            );
            /** Deactivate all active breakpoints. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void DeactivateAllBreakpoints
            (
            );
            /** Activate all deactivated breakpoints. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void ActivateAllBreakpoints
            (
            );
            /** Delete all breakpoints. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void DeleteAllBreakpoints
            (
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
