#ifndef NXOpen_MFG_AM_PROFILE_HXX_INCLUDED
#define NXOpen_MFG_AM_PROFILE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mfg_AM_Profile.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mfg_AM_Profile.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libmfgamopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mfg
    {
        namespace AM
        {
            class Profile;
        }
    }
    class NXObject;
    namespace Mfg
    {
        namespace AM
        {
            class _ProfileBuilder;
            class ProfileImpl;
            /** Interface for Services Profile objects  <br> To obtain an instance of this class use @link NXOpen::Mfg::AM::ProfileLibrary NXOpen::Mfg::AM::ProfileLibrary@endlink .  <br> 
             <br>  Created in NX11.0.2.  <br>  
            */
            class MFGAMOPENCPPEXPORT  Profile : public NXOpen::NXObject
            {
                private: ProfileImpl * m_profile_impl;
                private: friend class  _ProfileBuilder;
                protected: Profile();
                public: ~Profile();
                /** Gets the Profile children @return  
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::Mfg::AM::Profile *> GetProfiles
                (
                );
                /** Set the name of the Profile 
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                public: void SetName
                (
                    const NXString & newName /** newname */ 
                );
                /** Set the name of the Profile 
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                void SetName
                (
                    const char * newName /** newname */ 
                );
                /** Get the Profile Name @return  
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                public: NXString GetName
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
