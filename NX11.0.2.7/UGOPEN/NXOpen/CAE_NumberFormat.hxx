#ifndef NXOpen_CAE_NUMBERFORMAT_HXX_INCLUDED
#define NXOpen_CAE_NUMBERFORMAT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_NumberFormat.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_NumberFormat.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class NumberFormat;
    }
    namespace CAE
    {
        class _NumberFormatBuilder;
        class NumberFormatImpl;
        /** Represents the settings of format number value  <br>   <br> 
         <br>  Created in NX11.0.2.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  NumberFormat : public NXOpen::TaggedObject
        {
            /** Represents the format option */
            public: enum FormatOption
            {
                FormatOptionAutomatic/** The program will determine the format internally */,
                FormatOptionFixed/** Format the number in fixed decimals */,
                FormatOptionScientific/** Format the number in scientific */
            };

            private: NumberFormatImpl * m_numberformat_impl;
            private: friend class  _NumberFormatBuilder;
            protected: NumberFormat();
            public: ~NumberFormat();
            /**Returns  the format option 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::NumberFormat::FormatOption Format
            (
            );
            /**Sets  the format option 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: void SetFormat
            (
                NXOpen::CAE::NumberFormat::FormatOption format /** format */ 
            );
            /**Returns  the decimal places. The value should be between 0 and 9. 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: int DecimalPlaces
            (
            );
            /**Sets  the decimal places. The value should be between 0 and 9. 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: void SetDecimalPlaces
            (
                int decimalPlaces /** decimalplaces */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
