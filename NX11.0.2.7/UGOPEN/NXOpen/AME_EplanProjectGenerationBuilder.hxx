#ifndef NXOpen_AME_EPLANPROJECTGENERATIONBUILDER_HXX_INCLUDED
#define NXOpen_AME_EPLANPROJECTGENERATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_EplanProjectGenerationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_EplanProjectGenerationBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class EplanProjectGenerationBuilder;
    }
    class Builder;
    namespace AME
    {
        class _EplanProjectGenerationBuilderBuilder;
        class EplanProjectGenerationBuilderImpl;
        /** the eplan project generation dialog builder  <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateEplanProjectGenerationBuilder  NXOpen::AME::AMEManager::CreateEplanProjectGenerationBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ToggleOpenInEplan </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ToggleOverwrite </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ToggleSaveNameChanges </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ToggleSavePathChanges </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  EplanProjectGenerationBuilder : public NXOpen::Builder
        {
            private: EplanProjectGenerationBuilderImpl * m_eplanprojectgenerationbuilder_impl;
            private: friend class  _EplanProjectGenerationBuilderBuilder;
            protected: EplanProjectGenerationBuilder();
            public: ~EplanProjectGenerationBuilder();
            /**Returns  the project name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString ProjectName
            (
            );
            /**Sets  the project name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetProjectName
            (
                const NXString & projectName /** projectname */ 
            );
            /**Sets  the project name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetProjectName
            (
                const char * projectName /** projectname */ 
            );
            /**Returns  the generation target folder path 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString TargetPathFolderBrowser
            (
            );
            /**Sets  the generation target folder path 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetTargetPathFolderBrowser
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the generation target folder path 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetTargetPathFolderBrowser
            (
                const char * filename /** filename */ 
            );
            /**Returns  the toggle whether to overwrite existing EPLAN project 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ToggleOverwrite
            (
            );
            /**Sets  the toggle whether to overwrite existing EPLAN project 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetToggleOverwrite
            (
                bool toggleOverwrite /** toggleoverwrite */ 
            );
            /**Returns  the toggle whether to open EPLAN project after generation 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ToggleOpenInEplan
            (
            );
            /**Sets  the toggle whether to open EPLAN project after generation 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetToggleOpenInEplan
            (
                bool toggleOpenInEplan /** toggleopenineplan */ 
            );
            /**Returns  the toggle whether to save the target path changes to EPLAN project settings 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ToggleSavePathChanges
            (
            );
            /**Sets  the toggle whether to save the target path changes to EPLAN project settings 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetToggleSavePathChanges
            (
                bool toggleSavePathChanges /** togglesavepathchanges */ 
            );
            /**Returns  the toggle whether to save the project name changes to EPLAN project settings 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ToggleSaveNameChanges
            (
            );
            /**Sets  the toggle whether to save the project name changes to EPLAN project settings 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetToggleSaveNameChanges
            (
                bool toggleSaveNameChanges /** togglesavenamechanges */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
