#ifndef NXOpen_DISPLAY_ANIMATIONCAMERABUILDER_HXX_INCLUDED
#define NXOpen_DISPLAY_ANIMATIONCAMERABUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_AnimationCameraBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Display_CameraBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class AnimationCameraBuilder;
    }
    class Direction;
    namespace Display
    {
        class CameraBuilder;
    }
    class Point;
    class SelectTaggedObject;
    namespace Display
    {
        class _AnimationCameraBuilderBuilder;
        class AnimationCameraBuilderImpl;
        /**
        Represents a animation camera builder
         <br> To create a new instance of this class, use @link NXOpen::Display::AnimationCameraCollection::CreateAnimationCameraBuilder  NXOpen::Display::AnimationCameraCollection::CreateAnimationCameraBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  AnimationCameraBuilder : public NXOpen::Display::CameraBuilder
        {
            private: AnimationCameraBuilderImpl * m_animationcamerabuilder_impl;
            private: friend class  _AnimationCameraBuilderBuilder;
            protected: AnimationCameraBuilder();
            public: ~AnimationCameraBuilder();
            /**Returns  the target transform source 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObject * TargetTransformSource
            (
            );
            /**Returns  the target positioning constrained 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool TargetPositioningConstrained
            (
            );
            /**Sets  the target positioning constrained 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTargetPositioningConstrained
            (
                bool positioningConstrained /** positioningconstrained */ 
            );
            /**Returns  the target constrained point 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * TargetConstrainedPoint
            (
            );
            /**Sets  the target constrained point 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTargetConstrainedPoint
            (
                NXOpen::Point * position /** position */ 
            );
            /**Returns  the camera transform source 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObject * CameraTransformSource
            (
            );
            /**Returns  the camera positioning constrained 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool CameraPositioningConstrained
            (
            );
            /**Sets  the camera positioning constrained 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCameraPositioningConstrained
            (
                bool positioningConstrained /** positioningconstrained */ 
            );
            /**Returns  the camera constrained point 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * CameraConstrainedPoint
            (
            );
            /**Sets  the camera constrained point 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCameraConstrainedPoint
            (
                NXOpen::Point * cameraConstrainedPoint /** cameraconstrainedpoint */ 
            );
            /**Returns  the camera constrained upper vector 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * CameraConstrainedUpperVector
            (
            );
            /**Sets  the camera constrained upper vector 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCameraConstrainedUpperVector
            (
                NXOpen::Direction * cameraUpperVector /** camerauppervector */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
