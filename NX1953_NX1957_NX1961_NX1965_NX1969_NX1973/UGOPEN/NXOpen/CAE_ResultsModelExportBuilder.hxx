#ifndef NXOpen_CAE_RESULTSMODELEXPORTBUILDER_HXX_INCLUDED
#define NXOpen_CAE_RESULTSMODELEXPORTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResultsModelExportBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ResultsManipulationBuilder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ResultsModelExportBuilder;
    }
    namespace CAE
    {
        class Result;
    }
    namespace CAE
    {
        class ResultsManipulationBuilder;
    }
    namespace CAE
    {
        class _ResultsModelExportBuilderBuilder;
        class ResultsModelExportBuilderImpl;
        /** Represents a @link NXOpen::CAE::ResultsModelExportBuilder NXOpen::CAE::ResultsModelExportBuilder@endlink   <br> To obtain an instance of this class use @link NXOpen::Session::ResultManager NXOpen::Session::ResultManager@endlink .  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ResultsModelExportBuilder : public NXOpen::CAE::ResultsManipulationBuilder
        {
            private: ResultsModelExportBuilderImpl * m_resultsmodelexportbuilder_impl;
            private: friend class  _ResultsModelExportBuilderBuilder;
            protected: ResultsModelExportBuilder();
            public: ~ResultsModelExportBuilder();
            /** The result the model of which is to be exported 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetResult
            (
                NXOpen::CAE::Result * result /** set result */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
