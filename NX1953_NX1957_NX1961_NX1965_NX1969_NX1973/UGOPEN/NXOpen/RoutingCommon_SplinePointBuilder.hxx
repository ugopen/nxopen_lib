#ifndef NXOpen_ROUTINGCOMMON_SPLINEPOINTBUILDER_HXX_INCLUDED
#define NXOpen_ROUTINGCOMMON_SPLINEPOINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     RoutingCommon_SplinePointBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_routingcommon_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace RoutingCommon
    {
        class SplinePointBuilder;
    }
    class Builder;
    class Curve;
    class Direction;
    class Expression;
    class Point;
    namespace Routing
    {
        class ControlPoint;
    }
    namespace RoutingCommon
    {
        class _SplinePointBuilderBuilder;
        class SplinePointBuilderImpl;

        /// \cond NX_NO_DOC 
        /** Represents a @link NXOpen::RoutingCommon::SplinePointBuilder NXOpen::RoutingCommon::SplinePointBuilder@endlink  object.
                The builder allows for creating and editing of splines, adding extensions,
                adding stock offset points, adding stock, locking length, adding slack, and locking to other
                objects.
             <br> To obtain an instance of this class use @link NXOpen::RoutingCommon::BuilderFactory NXOpen::RoutingCommon::BuilderFactory@endlink .  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGCOMMONEXPORT  SplinePointBuilder : public NXOpen::Builder
        {
            /** Describes the method for the spline offsets.*/

            /// \cond NX_NO_DOC 
            public: enum OffsetOption
            {
                OffsetOptionNone/** No offset to use. */,
                OffsetOptionPoint/** Specify offset point and direction. */,
                OffsetOptionSurface/** Specify offset by surface. */,
                OffsetOptionPort/** Specify offset from offset port. */
            };


            /// \endcond 
            private: SplinePointBuilderImpl * m_splinepointbuilder_impl;
            private: friend class  _SplinePointBuilderBuilder;
            protected: SplinePointBuilder();
            public: ~SplinePointBuilder();

            /// \cond NX_NO_DOC 
            /** Gets the defining point.  @return  defining point. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Point * GetPoint
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Sets the defining point.  @return  error code for invalid point. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: int SetPoint
            (
                NXOpen::Point * point /** defining point. */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Moves the defining point. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void MovePoint
            (
                const NXOpen::Point3d & location /** new location.   */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the lock to selected of this defining point. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: bool LockToSelected
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the lock to selected of this defining point. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetLockToSelected
            (
                bool lockToSelected /** Set lock to selected */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the tangency of this defining point. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: bool Tangency
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the tangency of this defining point. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetTangency
            (
                bool tangent /** Set tangency */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Sets the type of point to track. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetOffsetOption
            (
                NXOpen::RoutingCommon::SplinePointBuilder::OffsetOption offsetOption /** offset option.   */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Gets the type of point to track.  @return  offset option.   
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::RoutingCommon::SplinePointBuilder::OffsetOption GetOffsetOption
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Gets the offset direction if this point has one.  @return  offset direction. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Direction * GetOffsetDirection
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Sets the offset direction for this point. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetOffsetDirection
            (
                NXOpen::Direction * dirr /** offset direction. */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Gets the offset expression string used to evaluate the (stock) offset for points with OffsetPosition parms.  @return  offset expression string. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXString GetOffsetExpressionString
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Sets the offset expression string used to evaluate the (stock) offset for points with OffsetPosition parms. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetOffsetExpressionString
            (
                const NXString & offsetExpressionString /** offset expression string. */
            );
            /** Sets the offset expression string used to evaluate the (stock) offset for points with OffsetPosition parms. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            void SetOffsetExpressionString
            (
                const char * offsetExpressionString /** offset expression string. */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Detaches external references for this spline point from existing spline connections. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void DetachPoint
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Determine an extension direction based on the passed in spline. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void InferExtension
            (
                NXOpen::Curve * spline /** Spline to find tangent direction. */,
                NXOpen::Point * point /** Point near spline.*/,
                NXOpen::Direction ** direction /** Direction object. */,
                NXOpen::Vector3d* tangent /** Extension direction. */,
                NXOpen::Vector3d* normal /** Curve normal. */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Gets the forward expression for this extension.
                     @return  The forward expression. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Expression * GetForwardExpression
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Gets the forward expression for this extension.
                     @return  The forward expression. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Expression * GetBackwardExpression
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the direction of the extension. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Direction * Direction
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the direction of the extension. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetDirection
            (
                NXOpen::Direction * direction /** direction */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Reverses the extension.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void ReverseDirection
            (
                NXOpen::Direction * direction /** direction */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Exchange the expressions for forward and backward for this extension. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SwapExtensions
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Changes direction of this extension along with any connected splines.  
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void MoveDirection
            (
                NXOpen::Direction * direction /** direction */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Reassigns a new direction for this extension along with any connected splines that are connected and need reassigned.  
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void AssignNewDirection
            (
                NXOpen::Direction * direction /** direction */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Returns the control point.   @return  control point. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::ControlPoint * GetControlPoint
            (
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
