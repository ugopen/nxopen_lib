#ifndef NXOpen_ELECTRICALROUTING_ACTIVEWIRINGCOMPONENTBUILDER_HXX_INCLUDED
#define NXOpen_ELECTRICALROUTING_ACTIVEWIRINGCOMPONENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ElectricalRouting_ActiveWiringComponentBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_electricalrouting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace ElectricalRouting
    {
        class ActiveWiringComponentBuilder;
    }
    namespace Assemblies
    {
        class Component;
    }
    namespace Assemblies
    {
        class SelectComponent;
    }
    class Builder;
    namespace ElectricalRouting
    {
        class _ActiveWiringComponentBuilderBuilder;
        class ActiveWiringComponentBuilderImpl;

        /// \cond NX_NO_DOC 
        /** 
            
             <br> To create a new instance of this class, use @link NXOpen::ElectricalRouting::BuilderFactory::CreateActiveWiringComponentBuilder  NXOpen::ElectricalRouting::BuilderFactory::CreateActiveWiringComponentBuilder @endlink  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_ELECTRICALROUTINGEXPORT  ActiveWiringComponentBuilder : public NXOpen::Builder
        {
            private: ActiveWiringComponentBuilderImpl * m_activewiringcomponentbuilder_impl;
            private: friend class  _ActiveWiringComponentBuilderBuilder;
            protected: ActiveWiringComponentBuilder();
            public: ~ActiveWiringComponentBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the select part 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::SelectComponent * SelectPart
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the active wiring component tag 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::Component * ActiveWiringComp
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the active wiring component tag 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetActiveWiringComp
            (
                NXOpen::Assemblies::Component * wiringCompTag /** wiringcomptag */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** THIS method creates wiring components 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::Component * CreateWiringComponent
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Creates a new wiring component of the given name. Also makes it the active wiring component. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::Component * CreateWiringComponent
            (
                const NXString & componentName /** componentname */ 
            );
            /** Creates a new wiring component of the given name. Also makes it the active wiring component. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::Assemblies::Component * CreateWiringComponent
            (
                const char * componentName /** componentname */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** THIS method returns the partocc of WC in context of the displayed part 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::Component * GetPartOccOfWCInDisplayedPart
            (
                NXOpen::Assemblies::Component * tagToBeMapped /** tagtobemapped */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** THIS method returns the partocc of WC in context of the work part 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::Component * GetPartOccOfWCInWorkPart
            (
                NXOpen::Assemblies::Component * tagToBeMapped /** tagtobemapped */ 
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
