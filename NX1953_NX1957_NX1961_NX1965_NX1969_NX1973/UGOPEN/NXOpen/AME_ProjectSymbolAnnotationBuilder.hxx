#ifndef NXOpen_AME_PROJECTSYMBOLANNOTATIONBUILDER_HXX_INCLUDED
#define NXOpen_AME_PROJECTSYMBOLANNOTATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_ProjectSymbolAnnotationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_SymbolAnnotations.hxx>
#include <NXOpen/Diagramming_AnnotationBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class ProjectSymbolAnnotationBuilder;
    }
    class Builder;
    namespace Diagramming
    {
        class AnnotationBuilder;
    }
    namespace AME
    {
        class _ProjectSymbolAnnotationBuilderBuilder;
        class ProjectSymbolAnnotationBuilderImpl;
        /** JA class for the Project Symbol Annotation dialog <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateProjectSymbolAnnotationBuilder  NXOpen::AME::AMEManager::CreateProjectSymbolAnnotationBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  ProjectSymbolAnnotationBuilder : public NXOpen::Builder
        {
            private: ProjectSymbolAnnotationBuilderImpl * m_projectsymbolannotationbuilder_impl;
            private: friend class  _ProjectSymbolAnnotationBuilderBuilder;
            protected: ProjectSymbolAnnotationBuilder();
            public: ~ProjectSymbolAnnotationBuilder();
            /**Returns  the AnnotationBuilder. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::Diagramming::AnnotationBuilder * AnnotationBuilder
            (
            );
            /**Returns  the LetteringAngle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::AmeSymbolAnnotationLetteringangle LetteringAngle
            (
            );
            /**Sets  the LetteringAngle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetLetteringAngle
            (
                NXOpen::AME::AmeSymbolAnnotationLetteringangle letteringAngle /** letteringangle */ 
            );
            /**Returns  the TextAnchor 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::AmeSymbolAnnotationAnchor Anchor
            (
            );
            /**Sets  the TextAnchor 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetAnchor
            (
                NXOpen::AME::AmeSymbolAnnotationAnchor anchor /** anchor */ 
            );
            /**Returns  the TextHeight 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::Height Height
            (
            );
            /**Sets  the TextHeight 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetHeight
            (
                NXOpen::AME::Height textHeight /** textheight */ 
            );
            /** Reset to default 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void ResetToDefault
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
