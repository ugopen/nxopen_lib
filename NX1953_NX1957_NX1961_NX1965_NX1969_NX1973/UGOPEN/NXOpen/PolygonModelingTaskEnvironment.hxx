#ifndef NXOpen_POLYGONMODELINGTASKENVIRONMENT_HXX_INCLUDED
#define NXOpen_POLYGONMODELINGTASKENVIRONMENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PolygonModelingTaskEnvironment.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class PolygonModelingTaskEnvironment;
    class Session;
    class PolygonModelingTaskEnvironmentImpl;
    /**
        Represents the Polygon Modeling task environment associated with a session.
     <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
     <br>  Created in NX12.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  PolygonModelingTaskEnvironment
    {
        private: PolygonModelingTaskEnvironmentImpl * m_polygonmodelingtaskenvironment_impl;
        private: NXOpen::Session* m_owner;
        /// \cond NX_NO_DOC 
        public: explicit PolygonModelingTaskEnvironment(NXOpen::Session *owner);


        /// \endcond 
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~PolygonModelingTaskEnvironment();
        /** Starts Polygon Modeling task environment.
            
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        public: void Enter
        (
        );
        /** Ends Polygon Modeling task environment.
            
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        public: void Exit
        (
        );
        /** Marks the task to be cancelled such that during task is undone and all the changes are discarded.
            
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        public: void SetCancelled
        (
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
