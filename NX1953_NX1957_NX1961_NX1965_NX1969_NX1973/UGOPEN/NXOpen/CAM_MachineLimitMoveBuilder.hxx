#ifndef NXOpen_CAM_MACHINELIMITMOVEBUILDER_HXX_INCLUDED
#define NXOpen_CAM_MACHINELIMITMOVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_MachineLimitMoveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_MoveBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class MachineLimitMoveBuilder;
    }
    namespace CAM
    {
        class MoveBuilder;
    }
    namespace CAM
    {
        class _MachineLimitMoveBuilderBuilder;
        class MachineLimitMoveBuilderImpl;

        /// \cond NX_NO_DOC 
        /** Represent machine limit move builder  <br> To create a new instance of this class, use @link NXOpen::CAM::MoveCollection::CreateMachineLimitMoveBuilder  NXOpen::CAM::MoveCollection::CreateMachineLimitMoveBuilder @endlink  <br> 
         <br>  Created in NX12.0.1.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  MachineLimitMoveBuilder : public NXOpen::CAM::MoveBuilder
        {
            /** the location */

            /// \cond NX_NO_DOC 
            public: enum LocationTypes
            {
                LocationTypesBefore/** before */,
                LocationTypesNext/** next */
            };


            /// \endcond 
            /** the safe position types */

            /// \cond NX_NO_DOC 
            public: enum SafePositionType
            {
                SafePositionTypeMachineLimit/** machine limit */ ,
                SafePositionTypeUserDefined/** user defined */ 
            };


            /// \endcond 
            private: MachineLimitMoveBuilderImpl * m_machinelimitmovebuilder_impl;
            private: friend class  _MachineLimitMoveBuilderBuilder;
            protected: MachineLimitMoveBuilder();
            public: ~MachineLimitMoveBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the location 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::MachineLimitMoveBuilder::LocationTypes Location
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the location 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetLocation
            (
                NXOpen::CAM::MachineLimitMoveBuilder::LocationTypes location /** location */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the safe position 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::MachineLimitMoveBuilder::SafePositionType SafePosition
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the safe position 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSafePosition
            (
                NXOpen::CAM::MachineLimitMoveBuilder::SafePositionType safePositionType /** safepositiontype */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the safe distance 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: double SafeDistance
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the safe distance 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSafeDistance
            (
                double safePosition /** safeposition */ 
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
