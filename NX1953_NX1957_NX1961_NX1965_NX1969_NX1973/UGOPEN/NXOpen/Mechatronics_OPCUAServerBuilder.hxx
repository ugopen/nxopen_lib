#ifndef NXOpen_MECHATRONICS_OPCUASERVERBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_OPCUASERVERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_OPCUAServerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class OPCUAServerBuilder;
    }
    class Builder;
    class NXObject;
    namespace Mechatronics
    {
        class _OPCUAServerBuilderBuilder;
        class OPCUAServerBuilderImpl;
        /** Represents a @link NXOpen::Mechatronics::OPCUAServerBuilder NXOpen::Mechatronics::OPCUAServerBuilder@endlink   <br> This class is sub-object of another builder, and cannot be directly instantiated.  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  OPCUAServerBuilder : public NXOpen::Builder
        {
             /**  @brief  Represents OPCUAServer info definition structure.  

              */
            public:
            struct SignalInfo
            {
                public: /** Signal Object         */NXOpen::NXObject * SignalTag;
                public: /** Signal Checked Status */bool BChecked;
                public: SignalInfo() :
                    SignalTag(),
                    BChecked()
                {
                }
                /** Constructor for the SignalInfo struct. */ 
                public: SignalInfo(NXOpen::NXObject * signalTagInitial /** Signal Object         */, 
                        bool bCheckedInitial /** Signal Checked Status */) :
                    SignalTag(signalTagInitial),
                    BChecked(bCheckedInitial)
                {
                }
            };

            private: OPCUAServerBuilderImpl * m_opcuaserverbuilder_impl;
            private: friend class  _OPCUAServerBuilderBuilder;
            protected: OPCUAServerBuilder();
            public: ~OPCUAServerBuilder();
            /**  @brief  Get OPCUAServer Signals Infomation  

               @return  Array of SignalInfos 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: std::vector<NXOpen::Mechatronics::OPCUAServerBuilder::SignalInfo> GetSignals
            (
            );
            /**  @brief  Set OPCUAServer Signals Infomation  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetSignals
            (
                const std::vector<NXOpen::Mechatronics::OPCUAServerBuilder::SignalInfo> & signalInfos /** Array of SignalInfos */
            );
            /**Returns   @brief  Get the UA Server Name.  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXString ServerName
            (
            );
            /**Sets   @brief  Get the UA Server Name.  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetServerName
            (
                const NXString & name /** name */ 
            );
            /**Sets   @brief  Get the UA Server Name.  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetServerName
            (
                const char * name /** name */ 
            );
            /**Returns   @brief  Get the UA Server Sampling Rate  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: double SamplingRate
            (
            );
            /**Sets   @brief  Get the UA Server Sampling Rate  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetSamplingRate
            (
                double samplingRate /** samplingrate */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
