#ifndef NXOpen_CAM_FUSEDDEPOSITIONTOOLBUILDER_HXX_INCLUDED
#define NXOpen_CAM_FUSEDDEPOSITIONTOOLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_FusedDepositionToolBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_LaserTool.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class FusedDepositionToolBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class LaserTool;
    }
    namespace CAM
    {
        class _FusedDepositionToolBuilderBuilder;
        class FusedDepositionToolBuilderImpl;
        /** Represents a fused deposition tool <br> To create a new instance of this class, use @link NXOpen::CAM::NCGroupCollection::CreateFusedDepositionTool  NXOpen::CAM::NCGroupCollection::CreateFusedDepositionTool @endlink  <br> 
         <br>  Created in NX12.0.2.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  FusedDepositionToolBuilder : public NXOpen::CAM::LaserTool
        {
            private: FusedDepositionToolBuilderImpl * m_fuseddepositiontoolbuilder_impl;
            private: friend class  _FusedDepositionToolBuilderBuilder;
            protected: FusedDepositionToolBuilder();
            public: ~FusedDepositionToolBuilder();
            /**Returns  a nozzle orifice diameter 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * OrificeDiameter
            (
            );
            /**Returns  an extrusion diameter 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * ExtrusionDiameter
            (
            );
            /**Returns  a minimum bead width
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * MinBeadWidth
            (
            );
            /**Returns  a maximum bead width
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * MaxBeadWidth
            (
            );
            /**Returns  a minimum bead height
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * MinBeadHeight
            (
            );
            /**Returns  a maximum bead height
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * MaxBeadHeight
            (
            );
            /**Returns  a minimum extrusion rate
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * MinExtrusionRate
            (
            );
            /**Returns  a maximum extrusion rate
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * MaxExtrusionRate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
