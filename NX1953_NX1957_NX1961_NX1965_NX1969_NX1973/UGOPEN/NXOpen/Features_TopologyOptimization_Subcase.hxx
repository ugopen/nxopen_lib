#ifndef NXOpen_FEATURES_TOPOLOGYOPTIMIZATION_SUBCASE_HXX_INCLUDED
#define NXOpen_FEATURES_TOPOLOGYOPTIMIZATION_SUBCASE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_TopologyOptimization_Subcase.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_TopologyOptimization_Container.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace TopologyOptimization
        {
            class Subcase;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class Container;
        }
    }
    class NXObject;
    namespace Features
    {
        namespace TopologyOptimization
        {
            class _SubcaseBuilder;
            class SubcaseImpl;

            /// \cond NX_NO_DOC 
            /** Represents a Topology Optimization Subcase  <br> To create or edit an instance of this class, use @link NXOpen::Features::TopologyOptimization::SubcaseManager  NXOpen::Features::TopologyOptimization::SubcaseManager @endlink  <br> 
             <br>  Created in NX1953.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  Subcase : public NXOpen::Features::TopologyOptimization::Container
            {
                private: SubcaseImpl * m_subcase_impl;
                private: friend class  _SubcaseBuilder;
                protected: Subcase();
                public: ~Subcase();

                /// \cond NX_NO_DOC 
                /**Add reference to a @link Features::TopologyOptimization::AnalysisLoad Features::TopologyOptimization::AnalysisLoad@endlink  or @link Features::TopologyOptimization::AnalysisConstraint Features::TopologyOptimization::AnalysisConstraint@endlink  to the @link Features::TopologyOptimization::Subcase Features::TopologyOptimization::Subcase@endlink .
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: void AddReference
                (
                    NXOpen::NXObject * reference /** reference */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Remove a @link Features::TopologyOptimization::AnalysisLoad Features::TopologyOptimization::AnalysisLoad@endlink  or @link Features::TopologyOptimization::AnalysisConstraint Features::TopologyOptimization::AnalysisConstraint@endlink  from the @link Features::TopologyOptimization::Subcase Features::TopologyOptimization::Subcase@endlink .
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: void RemoveReference
                (
                    NXOpen::NXObject * reference /** reference */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Get all @link Features::TopologyOptimization::AnalysisLoad Features::TopologyOptimization::AnalysisLoad@endlink  or @link Features::TopologyOptimization::AnalysisConstraint Features::TopologyOptimization::AnalysisConstraint@endlink  in this @link Features::TopologyOptimization::Subcase Features::TopologyOptimization::Subcase@endlink .
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : solid_modeling ("SOLIDS MODELING") OR features_modeling ("FEATURES MODELING") */
                public: void GetReferences
                (
                    std::vector<NXOpen::NXObject *> & references /** references */ 
                );

                /// \endcond 
            };

            /// \endcond 
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
