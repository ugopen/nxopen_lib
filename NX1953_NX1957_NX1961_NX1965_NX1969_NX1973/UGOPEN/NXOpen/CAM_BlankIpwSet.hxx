#ifndef NXOpen_CAM_BLANKIPWSET_HXX_INCLUDED
#define NXOpen_CAM_BLANKIPWSET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_BlankIpwSet.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class BlankIpwSet;
    }
    namespace CAM
    {
        class CAMObject;
    }
    class CoordinateSystem;
    class NXObject;
    namespace CAM
    {
        class _BlankIpwSetBuilder;
        class BlankIpwSetImpl;
        /** represents the blank IPW builder for blank definition  <br> To obtain an instance of this class use the @link NXOpen::CAM::GeometryGroup NXOpen::CAM::GeometryGroup@endlink   <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  BlankIpwSet : public NXOpen::TaggedObject
        {
            /** the blank IPW status types */
            public: enum StatusTypes
            {
                StatusTypesUpToDate/** blank ipw status up to date*/,
                StatusTypesOutOfDate/** blank ipw status out of date */,
                StatusTypesUnableToUpdate/** blank ipw status unable to update */,
                StatusTypesNone/** blank ipw status none */,
                StatusTypesUnknown/** blank ipw status unknown */
            };

            /** the blank IPW position types */
            public: enum PositionTypes
            {
                PositionTypesUnknown/** blank ipw position types unknown */,
                PositionTypesPart/** blank ipw position types part */,
                PositionTypesCsys/** blank ipw position types csys */
            };

            private: BlankIpwSetImpl * m_blankipwset_impl;
            private: friend class  _BlankIpwSetBuilder;
            protected: BlankIpwSet();
            public: ~BlankIpwSet();
            /** Sets the blank IPW source 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSource
            (
                const NXString & sourcePartName /** the part name where the blank IPW source exists */,
                const NXString & sourceName /** the name of the blank IPW source */
            );
            /** Sets the blank IPW source 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetSource
            (
                const char * sourcePartName /** the part name where the blank IPW source exists */,
                const char * sourceName /** the name of the blank IPW source */
            );
            /** Gets the blank IPW source  @return  the blank IPW source 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CAMObject * GetSource
            (
                NXOpen::NXObject ** sourcePart /** the part where the blank IPW source exists */
            );
            /** Gets the blank IPW status  @return  the blank ipw status 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::BlankIpwSet::StatusTypes GetStatus
            (
            );
            /** Updates the blank IPW  @return  the blank ipw status 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::BlankIpwSet::StatusTypes Update
            (
            );
            /** Decides if the input object can be a valid source  @return  indicate if the input object is valid or not 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: bool IsValidSource
            (
                NXOpen::CAM::CAMObject * obj /** the object to be checked*/
            );
            /**Returns  the blank IPW position type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::BlankIpwSet::PositionTypes PositionType
            (
            );
            /**Sets  the blank IPW position type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPositionType
            (
                NXOpen::CAM::BlankIpwSet::PositionTypes positionType /** the blank ipw position type */
            );
            /**Returns  the blank IPW position coordinate system 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * IpwPositionCsys
            (
            );
            /**Sets  the blank IPW position coordinate system 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetIpwPositionCsys
            (
                NXOpen::CoordinateSystem * csys /** the csys */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
