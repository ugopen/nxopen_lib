#ifndef NXOpen_PID_NATIVEEQUIPMENT_HXX_INCLUDED
#define NXOpen_PID_NATIVEEQUIPMENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PID_NativeEquipment.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Diagramming_Node.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libpidopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PID
    {
        class NativeEquipment;
    }
    namespace Diagramming
    {
        class Node;
    }
    class NXObject;
    namespace PID
    {
        class _NativeEquipmentBuilder;
        class NativeEquipmentImpl;

        /// \cond NX_NO_DOC 
        /** Represents the native equipment class.  <br> To create or edit an instance of this class, use @link NXOpen::PID::EquipmentBuilder  NXOpen::PID::EquipmentBuilder @endlink  <br> 
         <br>  Created in NX12.0.1.  <br>  
        */
        class PIDOPENCPPEXPORT  NativeEquipment : public NXOpen::NXObject
        {
            private: NativeEquipmentImpl * m_nativeequipment_impl;
            private: friend class  _NativeEquipmentBuilder;
            protected: NativeEquipment();
            public: ~NativeEquipment();

            /// \cond NX_NO_DOC 
            /**Returns  the node of the native equipment. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::Node * Node
            (
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
