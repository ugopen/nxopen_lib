#ifndef NXOpen_DRAFTING_ATTRIBUTEITEMBUILDER_HXX_INCLUDED
#define NXOpen_DRAFTING_ATTRIBUTEITEMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drafting_AttributeItemBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_drafting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drafting
    {
        class AttributeItemBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Drafting
    {
        class _AttributeItemBuilderBuilder;
        class AttributeItemBuilderImpl;
        /**
            Represents a @link NXOpen::Drafting::AttributeItemBuilder NXOpen::Drafting::AttributeItemBuilder@endlink .  This class is
            used to specify information about a single NX attribute.
             <br> To create a new instance of this class, use @link NXOpen::Drafting::AutomationManager::CreateAttributeItemBuilder  NXOpen::Drafting::AutomationManager::CreateAttributeItemBuilder @endlink  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_DRAFTINGEXPORT  AttributeItemBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: AttributeItemBuilderImpl * m_attributeitembuilder_impl;
            private: friend class  _AttributeItemBuilderBuilder;
            protected: AttributeItemBuilder();
            public: ~AttributeItemBuilder();
            /**Returns  the title. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Title
            (
            );
            /**Sets  the title. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_drawing_auto ("NX Drawing Automation") */
            public: void SetTitle
            (
                const NXString & attributeTitle /** attributetitle */ 
            );
            /**Sets  the title. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_drawing_auto ("NX Drawing Automation") */
            void SetTitle
            (
                const char * attributeTitle /** attributetitle */ 
            );
            /**Returns  the value. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Value
            (
            );
            /**Sets  the value. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_drawing_auto ("NX Drawing Automation") */
            public: void SetValue
            (
                const NXString & attributeValue /** attributevalue */ 
            );
            /**Sets  the value. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_drawing_auto ("NX Drawing Automation") */
            void SetValue
            (
                const char * attributeValue /** attributevalue */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
