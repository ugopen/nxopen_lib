#ifndef NXOpen_JOIN_REFPOINTSGUIDEBUILDER_HXX_INCLUDED
#define NXOpen_JOIN_REFPOINTSGUIDEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Join_RefPointsGuideBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_OnPathDimensionBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libjoinopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Join
    {
        class RefPointsGuideBuilder;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class OnPathDimensionBuilder;
    }
    class ICurve;
    class NXObject;
    class Section;
    namespace Join
    {
        class _RefPointsGuideBuilderBuilder;
        class RefPointsGuideBuilderImpl;
        /** Used to create or edit a guide curve for RefPoints.  <br> To create a new instance of this class, use @link NXOpen::Join::RefPointsBuilder::NewGuide  NXOpen::Join::RefPointsBuilder::NewGuide @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class JOINOPENCPPEXPORT  RefPointsGuideBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** The type of guide curve */
            public: enum Location
            {
                LocationCenterLine/** Centerline */,
                LocationOffsetFromEdge/** Offset from Edge */,
                LocationExistingCurve/** Existing Curve */
            };

            /** Options for Spacing Method */
            public: enum SpaceMethod
            {
                SpaceMethodArcLength/** Arc Length */,
                SpaceMethodParallelXPlane/** Parallel X Plane */,
                SpaceMethodParallelYPlane/** Parallel Y Plane */,
                SpaceMethodParallelZPlane/** Parallel Z Plane */
            };

            /** Spacing Option */
            public: enum SpaceOption
            {
                SpaceOptionDistance/** Space points by a fixed distance. Spacing at last point may not be uniform.*/,
                SpaceOptionNumber/** Uniformly space a number of points. */,
                SpaceOptionMinimumDistance/** Uniformly space points using a minimum distance value. */
            };

            private: RefPointsGuideBuilderImpl * m_refpointsguidebuilder_impl;
            private: friend class  _RefPointsGuideBuilderBuilder;
            protected: RefPointsGuideBuilder();
            public: ~RefPointsGuideBuilder();
            /**Returns  the location option. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Join::RefPointsGuideBuilder::Location LocationOption
            (
            );
            /**Sets  the location option. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetLocationOption
            (
                NXOpen::Join::RefPointsGuideBuilder::Location locationOption /** locationoption */ 
            );
            /**Returns  the offset distance. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Expression * OffsetDistance
            (
            );
            /**Returns  the extend offset. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: bool ExtendOffset
            (
            );
            /**Sets  the extend offset. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetExtendOffset
            (
                bool extendOffset /** extendoffset */ 
            );
            /**Returns  the first section used in Centerline. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Section * Section1
            (
            );
            /**Returns  the second section used in Centerline. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Section * Section2
            (
            );
            /**Returns  the third section used in Offset from Edge. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Section * Section3
            (
            );
            /**Returns  the fourth section used in Existing Curve. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Section * Section4
            (
            );
            /**Returns  the spacing method. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Join::RefPointsGuideBuilder::SpaceMethod SpacingMethod
            (
            );
            /**Sets  the spacing method. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetSpacingMethod
            (
                NXOpen::Join::RefPointsGuideBuilder::SpaceMethod spacingMethod /** spacingmethod */ 
            );
            /**Returns  the start distance. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * StartDistance
            (
            );
            /**Returns  the end distance. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * EndDistance
            (
            );
            /**Returns  the spacing option. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Join::RefPointsGuideBuilder::SpaceOption SpacingOption
            (
            );
            /**Sets  the spacing option. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetSpacingOption
            (
                NXOpen::Join::RefPointsGuideBuilder::SpaceOption spacingOption /** spacingoption */ 
            );
            /**Returns  the spacing to determine the points along the guide curve. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Expression * Spacing
            (
            );
            /**Returns  the number to determine the points along the guide curve. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: int NumberOfPoints
            (
            );
            /**Sets  the number to determine the points along the guide curve. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetNumberOfPoints
            (
                int number /** number */ 
            );
            /**Returns  the guide curve. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Section * GuideCurve
            (
            );
            /**Sets  the guide curve. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetGuideCurve
            (
                NXOpen::Section * guide /** guide */ 
            );
            /** Creates the guide curves. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void CreateGuideCurves
            (
            );
            /** Gets the created curves curves. The guide curves need to exist before calling this, or nothing will be returned. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void GetGuideCurves
            (
                std::vector<NXOpen::ICurve *> & guideCurves /**The array of curves.*/,
                std::vector<NXOpen::NXObject *> & instanceGuideCurves /**The array of component curve instances. If there is not an assembly, then this will match the prototype curve. */
            );
            /**Returns  the reversal status of Guide Curve direction. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: bool ReverseDirection
            (
            );
            /**Sets  the reversal status of Guide Curve direction. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetReverseDirection
            (
                bool reverse /** reverse */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
