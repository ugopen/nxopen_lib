#ifndef NXOpen_FACET_SNIPFACETBODYBUILDER_HXX_INCLUDED
#define NXOpen_FACET_SNIPFACETBODYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Facet_SnipFacetBodyBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/FacetCollector.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_facet_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Facet
    {
        class SnipFacetBodyBuilder;
    }
    class Builder;
    class Direction;
    namespace Facet
    {
        class SelectFacetedBodyList;
    }
    class FacetCollector;
    namespace GeometricUtilities
    {
        class BoundaryDefinitionBuilderList;
    }
    class Plane;
    class SectionList;
    class SelectDisplayableObjectList;
    class SelectPointList;
    namespace Facet
    {
        class _SnipFacetBodyBuilderBuilder;
        class SnipFacetBodyBuilderImpl;
        /** Represents a SnipFacetBody builder  <br> To create a new instance of this class, use @link NXOpen::Facet::FacetedBodyCollection::CreateSnipFacetBodyBuilder  NXOpen::Facet::FacetedBodyCollection::CreateSnipFacetBodyBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AlongDirection </term> <description> 
         
        ViewDirection </description> </item> 

        <item><term> 
         
        BoundaryFacetTreatmentType </term> <description> 
         
        SnipFacets </description> </item> 

        <item><term> 
         
        CanDivide </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        IsEditCopy </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        IsSnipNearFacets </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        RegionsOption </term> <description> 
         
        RemoveSelected </description> </item> 

        </list> 

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_FACETEXPORT  SnipFacetBodyBuilder : public NXOpen::Builder
        {
            /** Snip method */
            public: enum Types
            {
                TypesSnipByBoundary/** Snip by boundary */,
                TypesSnipByRegion/** Snip by region */,
                TypesSnipWithCurves/** Snip with curves */,
                TypesSnipAtPlane/** Snip at plane */
            };

            /** Snipping direction when snipping type "by profiles"  */
            public: enum DirectionType
            {
                DirectionTypeViewDirection/** Snip along view direction */,
                DirectionTypeFacetNormal/** Snip along facet normal */,
                DirectionTypeAlongVector/** Snip along specified vector */
            };

            /** Boundary facet treatment type: */
            public: enum BoundaryFacetTreatmentMethod
            {
                BoundaryFacetTreatmentMethodSnipFacets/** Snip scarred facets by the border */,
                BoundaryFacetTreatmentMethodRemoveFacets/** Remove scarred facets */
            };

            /** These options represent if selected portions will be: Remove Selected, Keep Selected, Divide  */
            public: enum RegionsOptionType
            {
                RegionsOptionTypeRemoveSelected/** Remove Selected */,
                RegionsOptionTypeKeepSelected/** Keep Selected */,
                RegionsOptionTypeDivide/** Divide */
            };

            /** Smoothness and boundary continuity options for automatic fill */
            public: enum AutomaticFillTypes
            {
                AutomaticFillTypesNone/** None (do not fill) */,
                AutomaticFillTypesLinear/** Linear (triangulated) fill. */,
                AutomaticFillTypesRefined/** Smooth internal fill. */,
                AutomaticFillTypesTangentBased/** Smooth fill, boundary is based on facet body tangent. */,
                AutomaticFillTypesCurvatureBased/** Smooth fill, boundary is based on facet body curvature. */
            };

            private: SnipFacetBodyBuilderImpl * m_snipfacetbodybuilder_impl;
            private: friend class  _SnipFacetBodyBuilderBuilder;
            protected: SnipFacetBodyBuilder();
            public: ~SnipFacetBodyBuilder();
            /**Returns  the facet bodies to snip 
             <br>  @deprecated Deprecated in NX11.0.0.  Use @link NXOpen::Facet::SnipFacetBodyBuilder::Bodies NXOpen::Facet::SnipFacetBodyBuilder::Bodies@endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX11.0.0.  Use NXOpen::Facet::SnipFacetBodyBuilder::Bodies instead.") NXOpen::Facet::SelectFacetedBodyList * FacetBodies
            (
            );
            /**Returns  the facet bodies to snip. Inputs to this command can be convergent objects. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * Bodies
            (
            );
            /**Returns  the value indicating if only facets near to the viewer to be snipped 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool IsSnipNearFacets
            (
            );
            /**Sets  the value indicating if only facets near to the viewer to be snipped 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetSnipNearFacets
            (
                bool isSnipNearFacets /** issnipnearfacets */ 
            );
            /**Returns  the list of regions to snip 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::BoundaryDefinitionBuilderList * RegionList
            (
            );
            /**Returns  the list of snipping profiles 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SectionList * ProfileList
            (
            );
            /**Returns  the direction in which snipping profiles are projected on the facet bodies  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::SnipFacetBodyBuilder::DirectionType AlongDirection
            (
            );
            /**Sets  the direction in which snipping profiles are projected on the facet bodies  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetAlongDirection
            (
                NXOpen::Facet::SnipFacetBodyBuilder::DirectionType alongDirection /** alongdirection */ 
            );
            /**Returns  the projection vector 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * ProjectionVector
            (
            );
            /**Sets  the projection vector 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetProjectionVector
            (
                NXOpen::Direction * projectionVector /** projectionvector */ 
            );
            /**Returns  the view direction 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vector3d ViewDirection
            (
            );
            /**Sets  the view direction 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetViewDirection
            (
                const NXOpen::Vector3d & viewDirection /** viewdirection */ 
            );
            /**Returns  the snipping plane 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * Plane
            (
            );
            /**Sets  the snipping plane 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetPlane
            (
                NXOpen::Plane * plane /** plane */ 
            );
            /**Returns  the point indicating the portion of the facet body with respect to specified region to be snipped. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectPointList * RegionPoint
            (
            );
            /**Returns  the value indicating if facet body is to be divided 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool CanDivide
            (
            );
            /**Sets  the value indicating if facet body is to be divided 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetCanDivide
            (
                bool canDivide /** candivide */ 
            );
            /**Returns  the regions option of enum 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::SnipFacetBodyBuilder::RegionsOptionType RegionsOption
            (
            );
            /**Sets  the regions option of enum 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetRegionsOption
            (
                NXOpen::Facet::SnipFacetBodyBuilder::RegionsOptionType regionsOption /** regionsoption */ 
            );
            /** Switch the region to be snipped indicated by the region point. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SwitchRegion
            (
            );
            /**Returns  the value indicating if a copy of the facet body to be snipped without altering the original 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool IsEditCopy
            (
            );
            /**Sets  the value indicating if a copy of the facet body to be snipped without altering the original 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetEditCopy
            (
                bool isEditCopy /** iseditcopy */ 
            );
            /**Returns  the boundary facet treatment type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::SnipFacetBodyBuilder::BoundaryFacetTreatmentMethod BoundaryFacetTreatmentType
            (
            );
            /**Sets  the boundary facet treatment type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetBoundaryFacetTreatmentType
            (
                NXOpen::Facet::SnipFacetBodyBuilder::BoundaryFacetTreatmentMethod boundaryFacetTreatmentType /** boundaryfacettreatmenttype */ 
            );
            /**Returns  the snipping method accessor
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::SnipFacetBodyBuilder::Types Type
            (
            );
            /**Sets  the snipping method accessor
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetType
            (
                NXOpen::Facet::SnipFacetBodyBuilder::Types type /** type */ 
            );
            /**Sets  the collector of facets to be snipped.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetFacetCollector
            (
                NXOpen::FacetCollector * collector /** collector */ 
            );
            /**Returns  the collector of facets to be snipped.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::FacetCollector * FacetCollector
            (
            );
            /**Returns  the boundary smoothness 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::SnipFacetBodyBuilder::AutomaticFillTypes AutomaticFillType
            (
            );
            /**Sets  the boundary smoothness 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetAutomaticFillType
            (
                NXOpen::Facet::SnipFacetBodyBuilder::AutomaticFillTypes smoothType /** smooth type */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
