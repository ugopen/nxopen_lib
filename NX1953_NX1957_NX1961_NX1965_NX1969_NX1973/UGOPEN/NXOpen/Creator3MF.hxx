#ifndef NXOpen_CREATOR3MF_HXX_INCLUDED
#define NXOpen_CREATOR3MF_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Creator3MF.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_LatticeItemListBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class Creator3MF;
    class Builder;
    namespace GeometricUtilities
    {
        class LatticeItemListBuilder;
    }
    class SelectNXObjectList;
    class _Creator3MFBuilder;
    class Creator3MFImpl;
    /**
        Represents a @link NXOpen::Creator3MF NXOpen::Creator3MF@endlink  to be used when exporting the 3mf Data
        This class is created using @link NXOpen::DexManager NXOpen::DexManager@endlink .
        NULL object will be returned from Commit().  <br> To create a new instance of this class, use @link NXOpen::DexManager::CreateCreator3mf  NXOpen::DexManager::CreateCreator3mf @endlink  <br> 
    Default values.
    <list type="table"> 
     
    <listheader><term> 
    Property</term>  <description> 
    Value</description> </listheader>
    <item><term> 
     
    AngularTolerance </term> <description> 
     
    18.0 </description> </item> 

    <item><term> 
     
    ChordalTolerance </term> <description> 
     
    0.08 (millimeters part), 0.003 (inches part) </description> </item> 

    </list> 

     <br>  Usable only on Windows <br> 
     <br>  Created in NX12.0.1.  <br>  
    */
    class NXOPENCPPEXPORT  Creator3MF : public NXOpen::Builder
    {
        private: Creator3MFImpl * m_creator3mf_impl;
        private: friend class  _Creator3MFBuilder;
        protected: Creator3MF();
        public: ~Creator3MF();
        /**Returns  the selectBody - the object selection will be done by this block 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : None */
        public: NXOpen::SelectNXObjectList * SelectBody
        (
        );
        /**Returns  the outputFile - the exported data will be written to this file 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : None */
        public: NXString OutputFile
        (
        );
        /**Sets  the outputFile - the exported data will be written to this file 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : nx_additive_design (" NX Additive Design") */
        public: void SetOutputFile
        (
            const NXString & outputFile /** outputfile */ 
        );
        /**Sets  the outputFile - the exported data will be written to this file 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : nx_additive_design (" NX Additive Design") */
        void SetOutputFile
        (
            const char * outputFile /** outputfile */ 
        );
        /**Returns  the chordalTolerance 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : None */
        public: double ChordalTolerance
        (
        );
        /**Sets  the chordalTolerance 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : nx_additive_design (" NX Additive Design") */
        public: void SetChordalTolerance
        (
            double chordalTolerance /** chordaltolerance */ 
        );
        /**Returns  the angularTolerance 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : None */
        public: double AngularTolerance
        (
        );
        /**Sets  the angularTolerance 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : nx_additive_design (" NX Additive Design") */
        public: void SetAngularTolerance
        (
            double angularTolerance /** angulartolerance */ 
        );
        /**Returns  the retainAssemblyStructure - the indicator for whether to retain assembly structure within the 3MF file 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : None */
        public: bool RetainAssemblyStructure
        (
        );
        /**Sets  the retainAssemblyStructure - the indicator for whether to retain assembly structure within the 3MF file 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : nx_additive_design (" NX Additive Design") */
        public: void SetRetainAssemblyStructure
        (
            bool retainAssemblyStructure /** retainassemblystructure */ 
        );
        /**Returns  the showInformationWindow - the indicator for whether to show information window 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : None */
        public: bool ShowInformationWindow
        (
        );
        /**Sets  the showInformationWindow - the indicator for whether to show information window 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : nx_additive_design (" NX Additive Design") */
        public: void SetShowInformationWindow
        (
            bool showInformationWindow /** showinformationwindow */ 
        );
        /**Returns  a lattice item list 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : nx_additive_design (" NX Additive Design") */
        public: NXOpen::GeometricUtilities::LatticeItemListBuilder * LatticeItemList
        (
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
