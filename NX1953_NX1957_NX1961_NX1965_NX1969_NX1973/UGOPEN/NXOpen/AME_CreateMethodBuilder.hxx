#ifndef NXOpen_AME_CREATEMETHODBUILDER_HXX_INCLUDED
#define NXOpen_AME_CREATEMETHODBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_CreateMethodBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_PlcBlock.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class CreateMethodBuilder;
    }
    namespace AME
    {
        class PlcBlock;
    }
    namespace AME
    {
        class SelectAMEBaseNodeList;
    }
    class Builder;
    namespace AME
    {
        class _CreateMethodBuilderBuilder;
        class CreateMethodBuilderImpl;
        /** Represents a method used in the software blocks <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateMethodBuilder  NXOpen::AME::AMEManager::CreateMethodBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        ShowInAutomation </term> <description> 
         
        false </description> </item> 

        <item><term> 
         
        ShowInFunction </term> <description> 
         
        false </description> </item> 

        <item><term> 
         
        ShowInLocation </term> <description> 
         
        false </description> </item> 

        <item><term> 
         
        ShowInProduct </term> <description> 
         
        false </description> </item> 

        </list> 

         <br>  Created in NX12.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  CreateMethodBuilder : public NXOpen::Builder
        {
            private: CreateMethodBuilderImpl * m_createmethodbuilder_impl;
            private: friend class  _CreateMethodBuilderBuilder;
            protected: CreateMethodBuilder();
            public: ~CreateMethodBuilder();
            /**Returns  the string method name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString MethodName
            (
            );
            /**Sets  the string method name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetMethodName
            (
                const NXString & methodName /** methodname */ 
            );
            /**Sets  the string method name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetMethodName
            (
                const char * methodName /** methodname */ 
            );
            /**Returns  the string description 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString Description
            (
            );
            /**Sets  the string description 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetDescription
            (
                const NXString & description /** description */ 
            );
            /**Sets  the string description 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetDescription
            (
                const char * description /** description */ 
            );
            /**Returns  the select object 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::SelectAMEBaseNodeList * SelectedObjects
            (
            );
            /**Returns  the show in function 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ShowInFunction
            (
            );
            /**Sets  the show in function 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetShowInFunction
            (
                bool showInFunction /** showinfunction */ 
            );
            /**Returns  the show in location 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ShowInLocation
            (
            );
            /**Sets  the show in location 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetShowInLocation
            (
                bool showInLocation /** showinlocation */ 
            );
            /**Returns  the show in product 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ShowInProduct
            (
            );
            /**Sets  the show in product 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetShowInProduct
            (
                bool showInProduct /** showinproduct */ 
            );
            /**Returns  the show in automation 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ShowInAutomation
            (
            );
            /**Sets  the show in automation 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetShowInAutomation
            (
                bool showInAutomation /** showinautomation */ 
            );
            /**Returns  the method automatically insertion 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool InsertMethodAuto
            (
            );
            /**Sets  the method automatically insertion 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetInsertMethodAuto
            (
                bool insertMethodAuto /** insertmethodauto */ 
            );
            /** Set selected PlcCodeBlock 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetPlcCodeBlock
            (
                NXOpen::AME::PlcBlock * plcBlock /** plcblock */ 
            );
            /** Add a index of network that will be in a method
                    with this function is possible to add several network  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void AddCompileUnitIndex
            (
                int compileUnitStartIndex /** compileunitstartindex */ ,
                int compileUnitEndIndex /** compileunitendindex */ 
            );
            /** Add a index of start statment in a network and index of end of statment 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void AddStatementIndexes
            (
                int compileUnitIndex /** compileunitindex */ ,
                int startStatementIndex /** startstatementindex */ ,
                int endStatementIndex /** endstatementindex */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
