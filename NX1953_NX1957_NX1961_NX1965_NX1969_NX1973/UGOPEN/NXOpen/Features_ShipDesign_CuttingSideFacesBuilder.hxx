#ifndef NXOpen_FEATURES_SHIPDESIGN_CUTTINGSIDEFACESBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_CUTTINGSIDEFACESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_CuttingSideFacesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class CuttingSideFacesBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    namespace Features
    {
        namespace ShipDesign
        {
            class _CuttingSideFacesBuilderBuilder;
            class CuttingSideFacesBuilderImpl;
            /**
                Used to create a @link NXOpen::Features::ShipDesign::CuttingSideFacesBuilder NXOpen::Features::ShipDesign::CuttingSideFacesBuilder@endlink  which
                is used to attribute the cutting side, and opposing cutting side, faces on the plate bodies.
                 <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateCuttingSideFacesBuilder  NXOpen::Features::ShipCollection::CreateCuttingSideFacesBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            ProcessCoplanar </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            ProcessTangent </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            ReverseSide </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            TangentFaceThreshold.Value </term> <description> 
             
            15 </description> </item> 

            <item><term> 
             
            WeldGapThreshold.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            </list> 

             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  CuttingSideFacesBuilder : public NXOpen::Features::FeatureBuilder
            {
                /**
                        Type of operation to perform on the plate. Automatic works through all
                        the visible bodies and assigns the attributes. Manual allows the user
                        to interactively select faces and assign data accordingly. Reverse
                        only allows faces with existing attributes to be selected and then
                        reverse the applied attributes on the existing selected faces.
                        */
                public: enum Types
                {
                    TypesAutomatic/** Process all the visible solids to assign the cutting side face attributes. */,
                    TypesManual/** Process all the selected solids to assign the cutting side attributes. */,
                    TypesReverse/** Reverse the cutting side attributes of the selected solids. */
                };

                private: CuttingSideFacesBuilderImpl * m_cuttingsidefacesbuilder_impl;
                private: friend class  _CuttingSideFacesBuilderBuilder;
                protected: CuttingSideFacesBuilder();
                public: ~CuttingSideFacesBuilder();
                /**Returns  the faces to identify, or attribute, as cutting side. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * CuttingSideFaces
                (
                );
                /**Returns  the value to decide if the normal face assignment should be done to the opposite side. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseSide
                (
                );
                /**Sets  the value to decide if the normal face assignment should be done to the opposite side. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetReverseSide
                (
                    bool reverseSide /** reverseside */ 
                );
                /**Returns  the option identifying if a coplanar rule should be applied to find cutting side faces. No limitiations are placed on adjacency of the faces (they can be far away from each other). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ProcessCoplanar
                (
                );
                /**Sets  the option identifying if a coplanar rule should be applied to find cutting side faces. No limitiations are placed on adjacency of the faces (they can be far away from each other). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetProcessCoplanar
                (
                    bool processCoplanar /** processcoplanar */ 
                );
                /**Returns  the option identifying if a tangent rule should be applied to find adjacent cutting side faces. Faces must be adjacent and within the modeling distance tolerance. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ProcessTangent
                (
                );
                /**Sets  the option identifying if a tangent rule should be applied to find adjacent cutting side faces. Faces must be adjacent and within the modeling distance tolerance. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetProcessTangent
                (
                    bool processTangent /** processtangent */ 
                );
                /**Returns  the value (in degrees) to determine if adjacent surfaces are tangent. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * TangentFaceThreshold
                (
                );
                /**Returns  the maximum distance the profile, or another plate, can be from the selected plate face. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * WeldGapThreshold
                (
                );
                /**Returns  the modeling distance tolerance. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: double DistanceTolerance
                (
                );
                /**Sets  the modeling distance tolerance. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetDistanceTolerance
                (
                    double distanceTolerance /** distancetolerance */ 
                );
                /**Returns  the value for how to process the bodies and faces. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::CuttingSideFacesBuilder::Types Type
                (
                );
                /**Sets  the value for how to process the bodies and faces. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetType
                (
                    NXOpen::Features::ShipDesign::CuttingSideFacesBuilder::Types type /** type */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
