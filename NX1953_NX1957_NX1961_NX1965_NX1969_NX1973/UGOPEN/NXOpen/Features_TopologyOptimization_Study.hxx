#ifndef NXOpen_FEATURES_TOPOLOGYOPTIMIZATION_STUDY_HXX_INCLUDED
#define NXOpen_FEATURES_TOPOLOGYOPTIMIZATION_STUDY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_TopologyOptimization_Study.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_TopologyOptimization_AnalysisConstraint.hxx>
#include <NXOpen/Features_TopologyOptimization_AnalysisConstraintBuilder.hxx>
#include <NXOpen/Features_TopologyOptimization_AnalysisLoad.hxx>
#include <NXOpen/Features_TopologyOptimization_AnalysisLoadBuilder.hxx>
#include <NXOpen/Features_TopologyOptimization_Connection.hxx>
#include <NXOpen/Features_TopologyOptimization_ConnectionBuilder.hxx>
#include <NXOpen/Features_TopologyOptimization_ConstructionBody.hxx>
#include <NXOpen/Features_TopologyOptimization_ConstructionBodyBuilder.hxx>
#include <NXOpen/Features_TopologyOptimization_ConstructionBodyCollector.hxx>
#include <NXOpen/Features_TopologyOptimization_DesignSpace.hxx>
#include <NXOpen/Features_TopologyOptimization_DesignSpaceBuilder.hxx>
#include <NXOpen/Features_TopologyOptimization_OptimizationConstraint.hxx>
#include <NXOpen/Features_TopologyOptimization_OptimizationConstraintBuilder.hxx>
#include <NXOpen/Features_TopologyOptimization_SceneryBody.hxx>
#include <NXOpen/Features_TopologyOptimization_SceneryBodyBuilder.hxx>
#include <NXOpen/Features_TopologyOptimization_ShapeConstraint.hxx>
#include <NXOpen/Features_TopologyOptimization_ShapeConstraintBuilder.hxx>
#include <NXOpen/Features_TopologyOptimization_StudyBuilder.hxx>
#include <NXOpen/Features_TopologyOptimization_Subcase.hxx>
#include <NXOpen/Features_TopologyOptimization_SubcaseManager.hxx>
#include <NXOpen/Features_TopologyOptimization_Container.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace TopologyOptimization
        {
            class Study;
        }
    }
    class Body;
    namespace Features
    {
        namespace TopologyOptimization
        {
            class AnalysisConstraint;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class AnalysisConstraintBuilder;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class AnalysisLoad;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class AnalysisLoadBuilder;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class Connection;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class ConnectionBuilder;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class ConstructionBody;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class ConstructionBodyBuilder;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class ConstructionBodyCollector;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class Container;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class DesignSpace;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class DesignSpaceBuilder;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class OptimizationConstraint;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class OptimizationConstraintBuilder;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class SceneryBody;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class SceneryBodyBuilder;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class ShapeConstraint;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class ShapeConstraintBuilder;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class Subcase;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class SubcaseManager;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class _StudyBuilder;
            class StudyImpl;

            /// \cond NX_NO_DOC 
            /** Represents a Topology Optimization Study  <br> To create or edit an instance of this class, use @link NXOpen::Features::TopologyOptimization::StudyBuilder  NXOpen::Features::TopologyOptimization::StudyBuilder @endlink  <br> 
             <br>  Created in NX1953.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  Study : public NXOpen::Features::TopologyOptimization::Container
            {
                private: StudyImpl * m_study_impl;
                private: friend class  _StudyBuilder;
                protected: Study();
                public: ~Study();

                /// \cond NX_NO_DOC 
                /**Returns  the analysis type 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::TopologyOptimization::StudyBuilder::AnalysisOption AnalysisType
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Sets  the analysis type 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: void SetAnalysisType
                (
                    NXOpen::Features::TopologyOptimization::StudyBuilder::AnalysisOption type /** type */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Returns  the optimization objective type 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::TopologyOptimization::StudyBuilder::OptimizationObjectiveOption OptimizationObjective
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Sets  the optimization objective type 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: void SetOptimizationObjective
                (
                    NXOpen::Features::TopologyOptimization::StudyBuilder::OptimizationObjectiveOption objective /** objective */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Optimizes (solves) this @link NXOpen::Features::TopologyOptimization::Study NXOpen::Features::TopologyOptimization::Study@endlink  if the optimization is fully setup and ready to optimize.
                                The optimization (solve) can be executed independent of the owning @link NXOpen::Features::TopologyOptimizationFeature NXOpen::Features::TopologyOptimizationFeature@endlink  state.
                                The owning @link NXOpen::Features::TopologyOptimizationFeature NXOpen::Features::TopologyOptimizationFeature@endlink  could be suppressed or delayed for update.
                                Optimization output and process results can be queried from the @link NXOpen::Features::TopologyOptimization::Study NXOpen::Features::TopologyOptimization::Study@endlink  object. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: void RunOptimization
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Discards optimization results and the optimizated bodies for this @link NXOpen::Features::TopologyOptimization::Study NXOpen::Features::TopologyOptimization::Study@endlink  if the topology optimization was previous executed.  @return  the optimized bodies 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::Body *> GetOptimizedBodies
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Discards optimization results and the optimizated bodies for this @link NXOpen::Features::TopologyOptimization::Study NXOpen::Features::TopologyOptimization::Study@endlink  if the topology optimization was previous executed. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: void DiscardOptimizationResults
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Creates a @link NXOpen::Features::TopologyOptimization::SceneryBody NXOpen::Features::TopologyOptimization::SceneryBody@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: NXOpen::Features::TopologyOptimization::SceneryBodyBuilder * CreateSceneryBodyBuilder
                (
                    NXOpen::Features::TopologyOptimization::SceneryBody * topOptSceneryBody /** topoptscenerybody */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Gets all @link NXOpen::Features::TopologyOptimization::SceneryBody NXOpen::Features::TopologyOptimization::SceneryBody@endlink  objects from the given study. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: void GetAllSceneryBodies
                (
                    std::vector<NXOpen::Features::TopologyOptimization::SceneryBody *> & topOptSceneryBodies /** topoptscenerybodies */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Creates a @link NXOpen::Features::TopologyOptimization::Connection NXOpen::Features::TopologyOptimization::Connection@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: NXOpen::Features::TopologyOptimization::ConnectionBuilder * CreateConnectionBuilder
                (
                    NXOpen::Features::TopologyOptimization::Connection * connection /** connection */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Gets all @link NXOpen::Features::TopologyOptimization::Connection NXOpen::Features::TopologyOptimization::Connection@endlink  objects from the given study. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: void GetAllConnections
                (
                    std::vector<NXOpen::Features::TopologyOptimization::Connection *> & topOptConnections /** topoptconnections */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Creates a @link NXOpen::Features::TopologyOptimization::AnalysisConstraintBuilder NXOpen::Features::TopologyOptimization::AnalysisConstraintBuilder@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: NXOpen::Features::TopologyOptimization::AnalysisConstraintBuilder * CreateAnalysisConstraintBuilder
                (
                    NXOpen::Features::TopologyOptimization::AnalysisConstraint * constraint /** constraint */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Gets all @link NXOpen::Features::TopologyOptimization::AnalysisConstraint NXOpen::Features::TopologyOptimization::AnalysisConstraint@endlink  objects from the given study. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: void GetAllAnalysisConstraints
                (
                    std::vector<NXOpen::Features::TopologyOptimization::AnalysisConstraint *> & analysisConstraints /** analysisconstraints */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Creates a @link NXOpen::Features::TopologyOptimization::DesignSpaceBuilder NXOpen::Features::TopologyOptimization::DesignSpaceBuilder@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: NXOpen::Features::TopologyOptimization::DesignSpaceBuilder * CreateDesignSpaceBuilder
                (
                    NXOpen::Features::TopologyOptimization::DesignSpace * designSpace /** designspace */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Gets all @link NXOpen::Features::TopologyOptimization::DesignSpace NXOpen::Features::TopologyOptimization::DesignSpace@endlink  objects from the given study. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: void GetAllDesignSpaces
                (
                    std::vector<NXOpen::Features::TopologyOptimization::DesignSpace *> & designSpaces /** designspaces */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Creates a @link NXOpen::Features::TopologyOptimization::AnalysisLoad NXOpen::Features::TopologyOptimization::AnalysisLoad@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: NXOpen::Features::TopologyOptimization::AnalysisLoadBuilder * CreateAnalysisLoadBuilder
                (
                    NXOpen::Features::TopologyOptimization::AnalysisLoad * load /** load */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Gets all @link NXOpen::Features::TopologyOptimization::AnalysisLoad NXOpen::Features::TopologyOptimization::AnalysisLoad@endlink  objects from the given study. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: void GetAllAnalysisLoads
                (
                    std::vector<NXOpen::Features::TopologyOptimization::AnalysisLoad *> & analysisLoads /** analysisloads */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Creates a @link NXOpen::Features::TopologyOptimization::OptimizationConstraintBuilder NXOpen::Features::TopologyOptimization::OptimizationConstraintBuilder@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: NXOpen::Features::TopologyOptimization::OptimizationConstraintBuilder * CreateOptimizationConstraintBuilder
                (
                    NXOpen::Features::TopologyOptimization::OptimizationConstraint * optConstraint /** optconstraint */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Creates a @link NXOpen::Features::TopologyOptimization::SubcaseManager NXOpen::Features::TopologyOptimization::SubcaseManager@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: NXOpen::Features::TopologyOptimization::SubcaseManager * CreateSubcaseManager
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Gets all @link NXOpen::Features::TopologyOptimization::Subcase NXOpen::Features::TopologyOptimization::Subcase@endlink  objects from the given study. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: void GetAllSubcases
                (
                    std::vector<NXOpen::Features::TopologyOptimization::Subcase *> & subcases /** subcases */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Creates a @link NXOpen::Features::TopologyOptimization::ConstructionBodyBuilder NXOpen::Features::TopologyOptimization::ConstructionBodyBuilder@endlink  that can be used to create one or more @link NXOpen::Features::TopologyOptimization::ConstructionBody NXOpen::Features::TopologyOptimization::ConstructionBody@endlink  objects,
                            a single @link NXOpen::Features::TopologyOptimization::ConstructionBodyCollector NXOpen::Features::TopologyOptimization::ConstructionBodyCollector@endlink  object, or to edit a single @link NXOpen::Features::TopologyOptimization::ConstructionBody NXOpen::Features::TopologyOptimization::ConstructionBody@endlink  object. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: NXOpen::Features::TopologyOptimization::ConstructionBodyBuilder * CreateConstructionBodyBuilder
                (
                    NXOpen::Features::TopologyOptimization::ConstructionBody * topOptConstructionBody /** topoptconstructionbody */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Creates a @link NXOpen::Features::TopologyOptimization::ConstructionBodyBuilder NXOpen::Features::TopologyOptimization::ConstructionBodyBuilder@endlink  that can be used to edit a single @link NXOpen::Features::TopologyOptimization::ConstructionBodyCollector NXOpen::Features::TopologyOptimization::ConstructionBodyCollector@endlink  object. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: NXOpen::Features::TopologyOptimization::ConstructionBodyBuilder * CreateConstructionBodyCollectorBuilder
                (
                    NXOpen::Features::TopologyOptimization::ConstructionBodyCollector * constrBodyCollector /** constrbodycollector */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Creates a @link NXOpen::Features::TopologyOptimization::ShapeConstraint NXOpen::Features::TopologyOptimization::ShapeConstraint@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: NXOpen::Features::TopologyOptimization::ShapeConstraintBuilder * CreateShapeConstraintBuilder
                (
                    NXOpen::Features::TopologyOptimization::ShapeConstraint * topOptShapeConstraint /** topoptshapeconstraint */ 
                );

                /// \endcond 
            };

            /// \endcond 
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
