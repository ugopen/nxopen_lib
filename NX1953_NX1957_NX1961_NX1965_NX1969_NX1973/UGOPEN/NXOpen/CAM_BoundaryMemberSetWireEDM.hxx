#ifndef NXOpen_CAM_BOUNDARYMEMBERSETWIREEDM_HXX_INCLUDED
#define NXOpen_CAM_BOUNDARYMEMBERSETWIREEDM_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_BoundaryMemberSetWireEDM.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_BoundaryMemberEvents.hxx>
#include <NXOpen/CAM_BoundaryMemberSet.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class BoundaryMemberSetWireEDM;
    }
    namespace CAM
    {
        class BoundaryMemberEvents;
    }
    namespace CAM
    {
        class BoundaryMemberEventsList;
    }
    namespace CAM
    {
        class BoundaryMemberSet;
    }
    namespace CAM
    {
        class _BoundaryMemberSetWireEDMBuilder;
        class BoundaryMemberSetWireEDMImpl;
        /** Represents a boundary member set. <br> To create a new instance of this class, use @link NXOpen::CAM::BoundarySetWireEDM::CreateBoundaryMemberSetWireEdm  NXOpen::CAM::BoundarySetWireEDM::CreateBoundaryMemberSetWireEdm @endlink  <br> 
         <br>  Created in NX12.0.1.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  BoundaryMemberSetWireEDM : public NXOpen::CAM::BoundaryMemberSet
        {
            private: BoundaryMemberSetWireEDMImpl * m_boundarymembersetwireedm_impl;
            private: friend class  _BoundaryMemberSetWireEDMBuilder;
            protected: BoundaryMemberSetWireEDM();
            public: ~BoundaryMemberSetWireEDM();
            /**Returns  the flag whether this boundary has custom tolerances 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool CustomTolerances
            (
            );
            /**Sets  the flag whether this boundary has custom tolerances 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCustomTolerances
            (
                bool newValue /** newvalue */ 
            );
            /**Returns  the inner tolerance value 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: double InTolerance
            (
            );
            /**Sets  the inner tolerance value 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetInTolerance
            (
                double newValue /** newvalue */ 
            );
            /**Returns  the outer tolerance value 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: double OutTolerance
            (
            );
            /**Sets  the outer tolerance value 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetOutTolerance
            (
                double newValue /** newvalue */ 
            );
            /**Returns  the flag whether this boundary has custom stock activated 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool CustomStock
            (
            );
            /**Sets  the flag whether this boundary has custom stock activated 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCustomStock
            (
                bool newValue /** newvalue */ 
            );
            /**Returns  the stock value 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: double Stock
            (
            );
            /**Sets  the stock value 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStock
            (
                double newValue /** newvalue */ 
            );
            /**Returns  the post events list 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::BoundaryMemberEventsList * PostEventsList
            (
            );
            /** Create an empty post events set @return  the post events set 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::BoundaryMemberEvents * CreateMemberEvent
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
