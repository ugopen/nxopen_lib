#ifndef NXOpen_MFGMODEL_BOPBASEMODEL_HXX_INCLUDED
#define NXOpen_MFGMODEL_BOPBASEMODEL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MfgModel_BOPBaseModel.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libmfgmodelopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MfgModel
    {
        class BOPBaseModel;
    }
    class INXObject;
    class NXObject;
    namespace MfgModel
    {
        class _BOPBaseModelBuilder;
        class BOPBaseModelImpl;

        /// \cond NX_NO_DOC 
        /** Represents BOPBASEMODEL Instance 
         <br>  Created in NX12.0.1.  <br>  
        */
        class MFGMODELOPENCPPEXPORT  BOPBaseModel : public NXOpen::NXObject
        {
            private: BOPBaseModelImpl * m_bopbasemodel_impl;
            private: friend class  _BOPBaseModelBuilder;
            protected: BOPBaseModel();
            public: ~BOPBaseModel();

            /// \cond NX_NO_DOC 
            /** Finds the @link BOPBaseModel BOPBaseModel@endlink  with the given identifier as recorded in a journal. 
                    An object may not return the same value as its JournalIdentifier in different versions of 
                    the software. However newer versions of the software should find the same object when 
                    FindObject is passed older versions of its journal identifier. In general, this method 
                    should not be used in handwritten code and exists to support record and playback of journals.

                    An exception will be thrown if no object can be found with the given journal identifier.  @return  object found, or null if no such object exists.
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::INXObject * FindObject
            (
                const NXString & journalIdentifier /** HandleID the object to be found */
            );
            /** Finds the @link BOPBaseModel BOPBaseModel@endlink  with the given identifier as recorded in a journal. 
                    An object may not return the same value as its JournalIdentifier in different versions of 
                    the software. However newer versions of the software should find the same object when 
                    FindObject is passed older versions of its journal identifier. In general, this method 
                    should not be used in handwritten code and exists to support record and playback of journals.

                    An exception will be thrown if no object can be found with the given journal identifier.  @return  object found, or null if no such object exists.
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            NXOpen::INXObject * FindObject
            (
                const char * journalIdentifier /** HandleID the object to be found */
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
