#ifndef NXOpen_TOOLING_VENTINGDESIGNBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_VENTINGDESIGNBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_VentingDesignBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_SpreadsheetData.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class VentingDesignBuilder;
    }
    class Builder;
    class Curve;
    class Direction;
    class NXObject;
    class Point;
    class ScCollector;
    class SelectBodyList;
    class SelectCurveList;
    class SelectFaceList;
    namespace Tooling
    {
        class SpreadsheetData;
    }
    namespace Tooling
    {
        class _VentingDesignBuilderBuilder;
        class VentingDesignBuilderImpl;
        /** Mold Wizard VentingDesign management builder, select curves as VentingDesign guide, choose section type and edit
                section parameters, optional choose boolean type to create VentingDesign channel.  <br> To create a new instance of this class, use @link NXOpen::Tooling::MoldwizardManager::CreateVentingDesignBuilder  NXOpen::Tooling::MoldwizardManager::CreateVentingDesignBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        ConnectType </term> <description> 
         
        Default </description> </item> 

        <item><term> 
         
        ResultStyle </term> <description> 
         
        Default </description> </item> 

        </list> 

         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  VentingDesignBuilder : public NXOpen::Builder
        {
            /** Represents the venting design guide end type. */
            public: enum Action
            {
                ActionStandardVent/** Third Level Venting. */,
                ActionSimpleVent/** Third Level Venting. */,
                ActionNone/** None of venting level action. */
            };

            /** Represents the section type of venting section. */
            public: enum Section
            {
                SectionCircular/** Use circular section type. */,
                SectionBlock/** Use block section type. */,
                SectionNone/** None of  section type. */
            };

            /** Represents the venting design guide end type. */
            public: enum GuideConnectType
            {
                GuideConnectTypeDefault/** Do not connect loop. */,
                GuideConnectTypeConnect/** Connect the adjacent guide loop.*/,
                GuideConnectTypeEnclose/** Enclose all the guide loop. */
            };

            /** Represents the venting design guide end type. */
            public: enum ResultType
            {
                ResultTypeDefault/** Create standard vent . */,
                ResultTypeOnlyCurve/** Only create curve and create feautre.*/,
                ResultTypeNoSubtract/** Create vent with no subtract. */
            };

            private: VentingDesignBuilderImpl * m_ventingdesignbuilder_impl;
            private: friend class  _VentingDesignBuilderBuilder;
            protected: VentingDesignBuilder();
            public: ~VentingDesignBuilder();
            /**Returns  the venting action type. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::VentingDesignBuilder::Action Type
            (
            );
            /**Sets  the venting action type. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetType
            (
                NXOpen::Tooling::VentingDesignBuilder::Action actionType /** actiontype */ 
            );
            /**Returns  the guide lines for creating venting body. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * GuideLines
            (
            );
            /**Returns  the selected trim surface. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * TrimSurface
            (
            );
            /**Returns  the selected faces 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectFaceList * SelectedFaces
            (
            );
            /**Returns  the value which specifies the mold draw direction reference for venting feature creating.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * DrawDirection
            (
            );
            /**Sets  the value which specifies the mold draw direction reference for venting feature creating.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetDrawDirection
            (
                NXOpen::Direction * drawDirection /** drawdirection */ 
            );
            /**Returns  the value which specifies whether to reverse the standard venting direction or not.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseDirection
            (
            );
            /**Sets  the value which specifies whether to reverse the standard venting direction or not.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetReverseDirection
            (
                bool reverseDirection /** reversedirection */ 
            );
            /**Returns   @brief  the point used to place a third level venting component.  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * ThirdLevelPoints
            (
            );
            /**Sets   @brief  the point used to place a third level venting component.  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetThirdLevelPoints
            (
                NXOpen::ScCollector * positionPoints /** positionpoints */ 
            );
            /**Returns  the value which specifies whether to reverse the simple venting direction or not.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseSimpleDirection
            (
            );
            /**Sets  the value which specifies whether to reverse the simple venting direction or not.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetReverseSimpleDirection
            (
                bool reverseSimpleDirection /** reversesimpledirection */ 
            );
            /**Returns  the loop position point 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectCurveList * EditLoopPosition
            (
            );
            /**Returns  the flag of which specifies whether to show Information Window. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowInfoWindow
            (
            );
            /**Sets  the flag of which specifies whether to show Information Window. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShowInfoWindow
            (
                bool showInfoWindow /** showinfowindow */ 
            );
            /**Returns  the option of creating which kinds of venting guide loop  
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::VentingDesignBuilder::GuideConnectType ConnectType
            (
            );
            /**Sets  the option of creating which kinds of venting guide loop  
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetConnectType
            (
                NXOpen::Tooling::VentingDesignBuilder::GuideConnectType selType /** seltype */ 
            );
            /**Returns  the flag that specifies whether to align the outside venting curves to the closest X-axis or Y-axis 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool AlignmentOutside
            (
            );
            /**Sets  the flag that specifies whether to align the outside venting curves to the closest X-axis or Y-axis 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAlignmentOutside
            (
                bool isAlignment /** isalignment */ 
            );
            /**Returns  the flag that specifies whether to align the inside venting curves to the closest X-axis or Y-axis  
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool AlignmentInside
            (
            );
            /**Sets  the flag that specifies whether to align the inside venting curves to the closest X-axis or Y-axis  
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAlignmentInside
            (
                bool isAlignment /** isalignment */ 
            );
            /**Returns  the flag which specifies whether to neglect subtracting all the vents or not.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::VentingDesignBuilder::ResultType ResultStyle
            (
            );
            /**Sets  the flag which specifies whether to neglect subtracting all the vents or not.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetResultStyle
            (
                NXOpen::Tooling::VentingDesignBuilder::ResultType allowflag /** allowflag */ 
            );
            /** Get the feature group of venting feature 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObject * GetEditFeatureGroup
            (
            );
            /**Set the feature group of venting feature
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEditFeatureGroup
            (
                NXOpen::NXObject * featureGroup /** featuregroup */ 
            );
            /**Set vent guide objects
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetVentGuideObjects
            (
                const std::vector<NXOpen::NXObject *> & selObjects /** selobjects */ 
            );
            /**Set vent points objects
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetVentPointsObjects
            (
                const std::vector<NXOpen::Point *> & selPoints /** selpoints */ 
            );
            /** Edits venting section register file. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void EditRegisterFile
            (
            );
            /** Edits venting section data base. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void EditDataBase
            (
            );
            /** Gets spreadsheet data from venting feature. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void GetDataFromSpreadsheet
            (
                NXOpen::Tooling::SpreadsheetData * sheetData /** Spreadsheet data */
            );
            /** Gets venting guide curves structure data. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void UpdateVentingGuideDataFromUDO
            (
                NXOpen::NXObject * featureGroupTag /** featuregrouptag */ ,
                NXOpen::NXObject * ventUdo /** ventudo */ 
            );
            /** Create relief loops to extrude venting body. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void CreateReliefLoops
            (
            );
            /** Restruct guide loops when guide curve selection updates. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void UpdateGuideLoops
            (
            );
            /** Create vent curves by selected end point directly so as to extrude venting body. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void CreateVentCurvesByEndPoint
            (
                const std::vector<NXOpen::Point *> & selPoints /** selpoints */ ,
                const std::vector<NXOpen::Point *> & deselPoints /** deselpoints */ 
            );
            /** Edit the position of a relief loop. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Point * EditReliefLoopPosition
            (
                const std::vector<NXOpen::Curve *> & selectBoundary /** selectboundary */ ,
                const NXOpen::Point3d & point /** point */ ,
                const NXOpen::Vector3d & crvTangent /** crvtangent */ ,
                const NXOpen::Point3d & newOrigin2 /** neworigin2 */ 
            );
            /** Remove all relief loop. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void RemoveAllVentCurves
            (
            );
            /** Display all relief loop. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void DisplayVentCurves
            (
            );
            /** Remove selected relief loop. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void RemoveSelectedVentCurves
            (
                const std::vector<NXOpen::Curve *> & selectBoundary /** selectboundary */ 
            );
            /** Read section data from runner section database. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void ReadActionLevelDataFromDatabase
            (
                std::vector<NXString> & levelTypes /** Section type name list in spreadsheet. */
            );
            /** Sets spreadsheet data. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetParameterTreeData
            (
                std::vector<NXString> & paraNames /** parameter name the vent data */,
                std::vector<NXString> & paraValues /** parameter value the vent data */
            );
            /** Reads selected section data from database. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void ReadSelectedActionLevelData
            (
                NXOpen::Tooling::VentingDesignBuilder::Action type /** type */ 
            );
            /** Updates the vent clearance boundary. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void UpdateClearanceBoundary
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
