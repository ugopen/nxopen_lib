#ifndef NXOpen_MECHATRONICS_EXPRESSIONBLOCKBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_EXPRESSIONBLOCKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_ExpressionBlockBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class ExpressionBlockBuilder;
    }
    class Builder;
    class NXObject;
    class Unit;
    namespace Mechatronics
    {
        class _ExpressionBlockBuilderBuilder;
        class ExpressionBlockBuilderImpl;
        /**  @brief  Represents a @link NXOpen::Mechatronics::ExpressionBlockBuilder NXOpen::Mechatronics::ExpressionBlockBuilder@endlink  builder.  

                 
                 ExpressionBlockBuilder is used to maintain the @link NXOpen::Mechatronics::ExpressionBlockObject NXOpen::Mechatronics::ExpressionBlockObject@endlink  which is used store related expressions that work for same task.  <br> To create a new instance of this class, use @link NXOpen::Mechatronics::ExpressionBlockCollection::CreateExpressionBlockBuilder  NXOpen::Mechatronics::ExpressionBlockCollection::CreateExpressionBlockBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  ExpressionBlockBuilder : public NXOpen::Builder
        {
            /**  @brief  Represents the Slot type.  

              */
            public: enum SlotType
            {
                SlotTypeNone/** None  */ = -1,
                SlotTypeInput/** Input that should connect to runtime parameter as input value. */,
                SlotTypeOutput/** Output that should connect to runtime parameter to output value */,
                SlotTypeParam/** Param that is used to configure the block to differentiate mode */,
                SlotTypeState/** State that is change during runtime based on internal data */,
                SlotTypeCustom/** Custom that represents the user created temporary variable */,
                SlotTypeNum/** Total Num  */
            };

            /**  @brief  Represents the data type.  

              */
            public: enum DataType
            {
                DataTypeBool/** bool   */,
                DataTypeInt/** int    */,
                DataTypeDouble/** double */,
                DataTypeString/** string */
            };

             /**  @brief  Represents Slot definition structure.  

              
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link NXOpen::Mechatronics::ExpressionBlockBuilder::SlotV3 NXOpen::Mechatronics::ExpressionBlockBuilder::SlotV3@endlink  instead. <br>  
            */
            public:
            struct NX_DEPRECATED("Deprecated in NX1953.0.0.  Use NXOpen::Mechatronics::ExpressionBlockBuilder::SlotV3 instead.") Slot
            {
                public: /** Slot type that indicate the data structure is used for */NXOpen::Mechatronics::ExpressionBlockBuilder::SlotType ESlotType;
                public: /** Slot Name */NXString Name;
                public: /** Data type */NXOpen::Mechatronics::ExpressionBlockBuilder::DataType EDataType;
                public: /** Data Value (bool)   */bool BoolValue;
                public: /** Data Value (int)    */int IntValue;
                public: /** Data Value (double) */double DoubleValue;
                public: /** Data Unit           */NXOpen::Unit * Unit;
                public: /** Formula              */NXString Formula;
                public: /** Comment Text         */NXString Comment;
                public: /** Connnected Physics Object       */NXOpen::NXObject * TgPhysicsObject;
                public: /** Connnected Physics Property Persisent index */int NPhysicsPropTag;
                public: Slot() :
                    ESlotType((NXOpen::Mechatronics::ExpressionBlockBuilder::SlotType)0),
                    Name(),
                    EDataType((NXOpen::Mechatronics::ExpressionBlockBuilder::DataType)0),
                    BoolValue(),
                    IntValue(),
                    DoubleValue(),
                    Unit(),
                    Formula(),
                    Comment(),
                    TgPhysicsObject(),
                    NPhysicsPropTag()
                {
                }
                /** Constructor for the Slot struct. */ 
                public: Slot(NXOpen::Mechatronics::ExpressionBlockBuilder::SlotType eSlotTypeInitial /** Slot type that indicate the data structure is used for */, 
                        const NXString &nameInitial /** Slot Name */, 
                        NXOpen::Mechatronics::ExpressionBlockBuilder::DataType eDataTypeInitial /** Data type */, 
                        bool boolValueInitial /** Data Value (bool)   */, 
                        int intValueInitial /** Data Value (int)    */, 
                        double doubleValueInitial /** Data Value (double) */, 
                        NXOpen::Unit * unitInitial /** Data Unit           */, 
                        const NXString &formulaInitial /** Formula              */, 
                        const NXString &commentInitial /** Comment Text         */, 
                        NXOpen::NXObject * tgPhysicsObjectInitial /** Connnected Physics Object       */, 
                        int nPhysicsPropTagInitial /** Connnected Physics Property Persisent index */) :
                    ESlotType(eSlotTypeInitial),
                    Name(nameInitial),
                    EDataType(eDataTypeInitial),
                    BoolValue(boolValueInitial),
                    IntValue(intValueInitial),
                    DoubleValue(doubleValueInitial),
                    Unit(unitInitial),
                    Formula(formulaInitial),
                    Comment(commentInitial),
                    TgPhysicsObject(tgPhysicsObjectInitial),
                    NPhysicsPropTag(nPhysicsPropTagInitial)
                {
                }
            };

             /**  @brief  Represents Slot definition structure for version 2.  

              
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link NXOpen::Mechatronics::ExpressionBlockBuilder::SlotV3 NXOpen::Mechatronics::ExpressionBlockBuilder::SlotV3@endlink  instead. <br>  
            */
            public:
            struct NX_DEPRECATED("Deprecated in NX1953.0.0.  Use NXOpen::Mechatronics::ExpressionBlockBuilder::SlotV3 instead.") SlotV2
            {
                public: /** Slot type that indicate the data structure is used for */NXOpen::Mechatronics::ExpressionBlockBuilder::SlotType ESlotType;
                public: /** Slot Name */NXString Name;
                public: /** Data type */NXOpen::Mechatronics::ExpressionBlockBuilder::DataType EDataType;
                public: /** Data Value (bool)   */bool BoolValue;
                public: /** Data Value (int)    */int IntValue;
                public: /** Data Value (double) */double DoubleValue;
                public: /** Data Unit           */NXOpen::Unit * Unit;
                public: /** Formula              */NXString Formula;
                public: /** Comment Text         */NXString Comment;
                public: /** Connnected Physics Object       */NXOpen::NXObject * TgPhysicsObject;
                public: /** Connnected Physics Property Persisent index */int NPhysicsPropTag;
                public: /** Slot persisent index */int NSlotPersistentTag;
                public: SlotV2() :
                    ESlotType((NXOpen::Mechatronics::ExpressionBlockBuilder::SlotType)0),
                    Name(),
                    EDataType((NXOpen::Mechatronics::ExpressionBlockBuilder::DataType)0),
                    BoolValue(),
                    IntValue(),
                    DoubleValue(),
                    Unit(),
                    Formula(),
                    Comment(),
                    TgPhysicsObject(),
                    NPhysicsPropTag(),
                    NSlotPersistentTag()
                {
                }
                /** Constructor for the SlotV2 struct. */ 
                public: SlotV2(NXOpen::Mechatronics::ExpressionBlockBuilder::SlotType eSlotTypeInitial /** Slot type that indicate the data structure is used for */, 
                        const NXString &nameInitial /** Slot Name */, 
                        NXOpen::Mechatronics::ExpressionBlockBuilder::DataType eDataTypeInitial /** Data type */, 
                        bool boolValueInitial /** Data Value (bool)   */, 
                        int intValueInitial /** Data Value (int)    */, 
                        double doubleValueInitial /** Data Value (double) */, 
                        NXOpen::Unit * unitInitial /** Data Unit           */, 
                        const NXString &formulaInitial /** Formula              */, 
                        const NXString &commentInitial /** Comment Text         */, 
                        NXOpen::NXObject * tgPhysicsObjectInitial /** Connnected Physics Object       */, 
                        int nPhysicsPropTagInitial /** Connnected Physics Property Persisent index */, 
                        int nSlotPersistentTagInitial /** Slot persisent index */) :
                    ESlotType(eSlotTypeInitial),
                    Name(nameInitial),
                    EDataType(eDataTypeInitial),
                    BoolValue(boolValueInitial),
                    IntValue(intValueInitial),
                    DoubleValue(doubleValueInitial),
                    Unit(unitInitial),
                    Formula(formulaInitial),
                    Comment(commentInitial),
                    TgPhysicsObject(tgPhysicsObjectInitial),
                    NPhysicsPropTag(nPhysicsPropTagInitial),
                    NSlotPersistentTag(nSlotPersistentTagInitial)
                {
                }
            };

             /**  @brief  Represents Slot definition structure for version 3.  

              */
            public:
            struct SlotV3
            {
                public: /** Slot type that indicate the data structure is used for */NXOpen::Mechatronics::ExpressionBlockBuilder::SlotType ESlotType;
                public: /** Slot Name */NXString Name;
                public: /** Data type */NXOpen::Mechatronics::ExpressionBlockBuilder::DataType EDataType;
                public: /** Data Value (bool)   */bool BoolValue;
                public: /** Data Value (int)    */int IntValue;
                public: /** Data Value (double) */double DoubleValue;
                public: /** Data Value (string) */NXString StrValue;
                public: /** Data Unit           */NXOpen::Unit * Unit;
                public: /** Formula              */NXString Formula;
                public: /** Comment Text         */NXString Comment;
                public: /** Connnected Physics Object       */NXOpen::NXObject * TgPhysicsObject;
                public: /** Connnected Physics Property Persisent index */int NPhysicsPropTag;
                public: /** Slot persisent index */int NSlotPersistentTag;
                public: SlotV3() :
                    ESlotType((NXOpen::Mechatronics::ExpressionBlockBuilder::SlotType)0),
                    Name(),
                    EDataType((NXOpen::Mechatronics::ExpressionBlockBuilder::DataType)0),
                    BoolValue(),
                    IntValue(),
                    DoubleValue(),
                    StrValue(),
                    Unit(),
                    Formula(),
                    Comment(),
                    TgPhysicsObject(),
                    NPhysicsPropTag(),
                    NSlotPersistentTag()
                {
                }
                /** Constructor for the SlotV3 struct. */ 
                public: SlotV3(NXOpen::Mechatronics::ExpressionBlockBuilder::SlotType eSlotTypeInitial /** Slot type that indicate the data structure is used for */, 
                        const NXString &nameInitial /** Slot Name */, 
                        NXOpen::Mechatronics::ExpressionBlockBuilder::DataType eDataTypeInitial /** Data type */, 
                        bool boolValueInitial /** Data Value (bool)   */, 
                        int intValueInitial /** Data Value (int)    */, 
                        double doubleValueInitial /** Data Value (double) */, 
                        const NXString &strValueInitial /** Data Value (string) */, 
                        NXOpen::Unit * unitInitial /** Data Unit           */, 
                        const NXString &formulaInitial /** Formula              */, 
                        const NXString &commentInitial /** Comment Text         */, 
                        NXOpen::NXObject * tgPhysicsObjectInitial /** Connnected Physics Object       */, 
                        int nPhysicsPropTagInitial /** Connnected Physics Property Persisent index */, 
                        int nSlotPersistentTagInitial /** Slot persisent index */) :
                    ESlotType(eSlotTypeInitial),
                    Name(nameInitial),
                    EDataType(eDataTypeInitial),
                    BoolValue(boolValueInitial),
                    IntValue(intValueInitial),
                    DoubleValue(doubleValueInitial),
                    StrValue(strValueInitial),
                    Unit(unitInitial),
                    Formula(formulaInitial),
                    Comment(commentInitial),
                    TgPhysicsObject(tgPhysicsObjectInitial),
                    NPhysicsPropTag(nPhysicsPropTagInitial),
                    NSlotPersistentTag(nSlotPersistentTagInitial)
                {
                }
            };

            private: ExpressionBlockBuilderImpl * m_expressionblockbuilder_impl;
            private: friend class  _ExpressionBlockBuilderBuilder;
            protected: ExpressionBlockBuilder();
            public: ~ExpressionBlockBuilder();
            /**  @brief  Gets description lines.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: std::vector<NXString> GetDescription
            (
            );
            /**  @brief  Sets description lines.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetDescription
            (
                std::vector<NXString> & descLines /** desclines */ 
            );
            /**  @brief  Gets all Slots.  

               @return  Array of Slots 
             <br>  @deprecated Deprecated in NX1926.0.0.  Use @link Mechatronics::ExpressionBlockBuilder::GetSlotsV3 Mechatronics::ExpressionBlockBuilder::GetSlotsV3@endlink  instead. <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NX_DEPRECATED("Deprecated in NX1926.0.0.  Use Mechatronics::ExpressionBlockBuilder::GetSlotsV3 instead.") std::vector<NXOpen::Mechatronics::ExpressionBlockBuilder::Slot> GetSlots
            (
            );
            /**  @brief  Sets all Slots.  

              
             <br>  @deprecated Deprecated in NX1926.0.0.  Use @link Mechatronics::ExpressionBlockBuilder::SetSlotsV3 Mechatronics::ExpressionBlockBuilder::SetSlotsV3@endlink  instead. <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NX_DEPRECATED("Deprecated in NX1926.0.0.  Use Mechatronics::ExpressionBlockBuilder::SetSlotsV3 instead.") void SetSlots
            (
                const std::vector<NXOpen::Mechatronics::ExpressionBlockBuilder::Slot> & slots /** Array of Slots */
            );
            /**  @brief  Gets all Slots.  

               @return  Array of Slots 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link NXOpen::Mechatronics::ExpressionBlockBuilder::GetSlotsV3 NXOpen::Mechatronics::ExpressionBlockBuilder::GetSlotsV3@endlink  instead. <br>  

             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use NXOpen::Mechatronics::ExpressionBlockBuilder::GetSlotsV3 instead.") std::vector<NXOpen::Mechatronics::ExpressionBlockBuilder::SlotV2> GetSlotsV2
            (
            );
            /**  @brief  Gets all Slots.  

               @return  Array of Slots 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: std::vector<NXOpen::Mechatronics::ExpressionBlockBuilder::SlotV3> GetSlotsV3
            (
            );
            /**  @brief  Sets all Slots.  

              
             <br>  @deprecated Deprecated in NX1926.0.0.  Use @link Mechatronics::ExpressionBlockBuilder::SetSlotsV3 Mechatronics::ExpressionBlockBuilder::SetSlotsV3@endlink  instead. <br>  

             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NX_DEPRECATED("Deprecated in NX1926.0.0.  Use Mechatronics::ExpressionBlockBuilder::SetSlotsV3 instead.") void SetSlotsV2
            (
                const std::vector<NXOpen::Mechatronics::ExpressionBlockBuilder::SlotV2> & slots /** Array of Slots */
            );
            /**  @brief  Sets all Slots.  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetSlotsV3
            (
                const std::vector<NXOpen::Mechatronics::ExpressionBlockBuilder::SlotV3> & slots /** Array of Slots */
            );
            /**  @brief  Save data to xml file.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SaveToXmlFile
            (
                const NXString & templateFile /** templatefile */ 
            );
            /**  @brief  Save data to xml file.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SaveToXmlFile
            (
                const char * templateFile /** templatefile */ 
            );
            /**  @brief  Load data from xml file.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void LoadFromXmlFile
            (
                const NXString & templateFile /** templatefile */ 
            );
            /**  @brief  Load data from xml file.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void LoadFromXmlFile
            (
                const char * templateFile /** templatefile */ 
            );
            /**Returns   @brief  the name.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets   @brief  the name.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets   @brief  the name.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns   @brief  the next slot persistent tag.  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: int NextSlotPersistentTag
            (
            );
            /**Sets   @brief  the next slot persistent tag.  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetNextSlotPersistentTag
            (
                int nextSlotPersistentTag /** nextslotpersistenttag */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
