#ifndef NXOpen_PCBEXCHANGE_INCREMENTALCHANGE_HXX_INCLUDED
#define NXOpen_PCBEXCHANGE_INCREMENTALCHANGE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PcbExchange_IncrementalChange.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_pcbexchange_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PcbExchange
    {
        class IncrementalChange;
    }
    namespace PcbExchange
    {
        class _IncrementalChangeBuilder;
        class IncrementalChangeImpl;
        /** Represents a @link NXOpen::PcbExchange::IncrementalChange NXOpen::PcbExchange::IncrementalChange@endlink .  <br> No support for KF.  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_PCBEXCHANGEEXPORT  IncrementalChange : public NXOpen::TaggedObject
        {
            private: IncrementalChangeImpl * m_incrementalchange_impl;
            private: friend class  _IncrementalChangeBuilder;
            protected: IncrementalChange();
            public: ~IncrementalChange();
            /**Returns  the transaction. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Transaction
            (
            );
            /**Sets  the transaction. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetTransaction
            (
                const NXString & transaction /** transaction */ 
            );
            /**Sets  the transaction. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetTransaction
            (
                const char * transaction /** transaction */ 
            );
            /**Returns  the flag indicating whether a change is accepted. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool Accepted
            (
            );
            /**Sets  the flag indicating whether a change is accepted. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetAccepted
            (
                bool isAccepted /** isaccepted */ 
            );
            /**Returns  the comments. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Comments
            (
            );
            /**Sets  the comments. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetComments
            (
                const NXString & comments /** comments */ 
            );
            /**Sets  the comments. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetComments
            (
                const char * comments /** comments */ 
            );
            /** Returns the attributes.  @return  Attribute values. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetAttributes
            (
                std::vector<NXString> & names /** Attribute names. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
