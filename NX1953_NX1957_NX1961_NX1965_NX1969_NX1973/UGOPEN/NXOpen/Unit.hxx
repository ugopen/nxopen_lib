#ifndef NXOpen_UNIT_HXX_INCLUDED
#define NXOpen_UNIT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Unit.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class Unit;
    class NXObject;
    class _UnitBuilder;
    class UnitImpl;
    /** Represents a unit  <br> To obtain an instance of this class use @link NXOpen::UnitCollection NXOpen::UnitCollection@endlink   <br> 
     <br>  Created in NX4.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  Unit : public NXOpen::NXObject
    {
        private: UnitImpl * m_unit_impl;
        private: friend class  _UnitBuilder;
        protected: Unit();
        public: ~Unit();
        /**Returns  the abbreviation for a unit 
         <br>  @deprecated Deprecated in NX11.0.1.  Use @link NXOpen::Unit::Symbol NXOpen::Unit::Symbol@endlink  instead. This string will not be translated. <br>  

         <br>  Created in NX4.0.0.  <br>  
         <br> License requirements : None */
        public: NX_DEPRECATED("Deprecated in NX11.0.1.  Use NXOpen::Unit::Symbol instead. This string will not be translated.") NXString Abbreviation
        (
        );
        /**Returns  the symbol for a unit 
         <br>  Created in NX11.0.1.  <br>  
         <br> License requirements : None */
        public: NXString Symbol
        (
        );
        /**Returns  the unit name 
         <br>  @deprecated Deprecated in NX11.0.1.  Use @link NXOpen::Unit::TypeName NXOpen::Unit::TypeName@endlink  instead. This string will not be translated. <br>  

         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : None */
        public: NX_DEPRECATED("Deprecated in NX11.0.1.  Use NXOpen::Unit::TypeName instead. This string will not be translated.") NXString Name
        (
        );
        /**Returns  the unit type name 
         <br>  Created in NX11.0.1.  <br>  
         <br> License requirements : None */
        public: NXString TypeName
        (
        );
        /**Returns  the unit measure name 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXString Measure
        (
        );
        /** Makes this unit the default data entry unit for its Measure 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void MakeDefault
        (
        );
        /** Makes this unit the information unit for its Measure 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void MakeInfoUnit
        (
        );
        /**Returns   @brief a value that indicates whether this Unit is the information unit for its measure. 

           
              The default Information unit can be changed. 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: bool IsInfoUnit
        (
        );
        /**Returns   @brief a value that indicates whether this Unit is the Data Entry Unit for its Measure. 

           
              The default data entry unit can be changed. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: bool IsDefaultUnit
        (
        );
        /**Returns   @brief a value that indicates whether this Unit is the Base Unit for its Measure.  

          
              The Base unit for this Measure is consistent with all other Base units for the other Measures. When doing computation all values are first converted to their base unit values.  
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: bool IsBaseUnit
        (
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
