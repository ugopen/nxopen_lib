#ifndef NXOpen_COLLABORATIONAPPLICATION_SUBSCRIPTIONMGR_HXX_INCLUDED
#define NXOpen_COLLABORATIONAPPLICATION_SUBSCRIPTIONMGR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CollaborationApplication_SubscriptionMgr.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_collaborationapplication_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CollaborationApplication
    {
        class SubscriptionMgr;
    }
    namespace CollaborationApplication
    {
    }
    namespace CollaborationApplication
    {
        class SubscriptionMgrImpl;
        /**  @brief  Represents a Subscription Manager class.  

          
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_COLLABORATIONAPPLICATIONEXPORT  SubscriptionMgr : public NXOpen::TransientObject
        {
            private: SubscriptionMgrImpl * m_subscriptionmgr_impl;
            /// \cond NX_NO_DOC 
            public: explicit SubscriptionMgr(void *ptr);
            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Set the objects for receiving activity notifications.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mu_notifications (" NX Multi-User Notifications") */
            public: void UpdateSubscription
            (
                std::vector<NXString> & displayNames /** displaynames */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the property that controls whether the parts are automatically followed on load. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mu_notifications (" NX Multi-User Notifications") */
            public: bool FollowPartsOnLoadFlag
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the property that controls whether the parts are automatically followed on load. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mu_notifications (" NX Multi-User Notifications") */
            public: void SetFollowPartsOnLoadFlag
            (
                bool followPartsOnLoadFlag /** followpartsonloadflag */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Destroys the object. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~SubscriptionMgr();

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
