#ifndef NXOpen_PCBEXCHANGE_ADVANCEDCONDUCTIVITYBUILDER_HXX_INCLUDED
#define NXOpen_PCBEXCHANGE_ADVANCEDCONDUCTIVITYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PcbExchange_AdvancedConductivityBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_pcbexchange_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PcbExchange
    {
        class AdvancedConductivityBuilder;
    }
    class Builder;
    namespace PcbExchange
    {
        class _AdvancedConductivityBuilderBuilder;
        class AdvancedConductivityBuilderImpl;
        /** Represents a @link NXOpen::PcbExchange::AdvancedConductivityBuilder NXOpen::PcbExchange::AdvancedConductivityBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::PcbExchange::Manager::CreateAdvancedConductivityBuilder  NXOpen::PcbExchange::Manager::CreateAdvancedConductivityBuilder @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_PCBEXCHANGEEXPORT  AdvancedConductivityBuilder : public NXOpen::Builder
        {
            private: AdvancedConductivityBuilderImpl * m_advancedconductivitybuilder_impl;
            private: friend class  _AdvancedConductivityBuilderBuilder;
            protected: AdvancedConductivityBuilder();
            public: ~AdvancedConductivityBuilder();
            /** Method to get textualFilter 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool GetTextualFilter
            (
            );
            /** Method to set textualFilter 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetTextualFilter
            (
                bool filter /** filter */ 
            );
            /** Method to get netsToFilterString 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetNetsToFilterString
            (
            );
            /** Method to set netsToFilterString 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetNetsToFilterString
            (
                const NXString & nets /** nets */ 
            );
            /** Method to set netsToFilterString 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetNetsToFilterString
            (
                const char * nets /** nets */ 
            );
            /** Method to get netsList 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetNetsList
            (
                std::vector<NXString> & nets /** nets */ 
            );
            /** Method to set netsList 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetNetsList
            (
                std::vector<NXString> & nets /** nets */ 
            );
            /** Method to get padstacks 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetPadstacks
            (
                std::vector<NXString> & padstacks /** padstacks */ 
            );
            /** Method to set padstacks 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetPadstacks
            (
                std::vector<NXString> & nets /** nets */ 
            );
            /** Method to get types 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetTypes
            (
                std::vector<int> & types /** types */ 
            );
            /** Method to set types 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetTypes
            (
                const std::vector<int> & types /** types */ 
            );
            /** Method to get diameters 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetDiameters
            (
                std::vector<double> & diameters /** diameters */ 
            );
            /** Method to set diameters 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetDiameters
            (
                const std::vector<double> & diameters /** diameters */ 
            );
            /** Method to get startLayers 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetStartLayers
            (
                std::vector<int> & startLayers /** startlayers */ 
            );
            /** Method to set startLayers 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetStartLayers
            (
                const std::vector<int> & startLayers /** startlayers */ 
            );
            /** Method to get endLayers 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetEndLayers
            (
                std::vector<int> & endLayers /** endlayers */ 
            );
            /** Method to set endLayers 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetEndLayers
            (
                const std::vector<int> & endLayers /** endlayers */ 
            );
            /** Method to get tags 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetT
            (
                std::vector<int> & t /** t */ 
            );
            /** Method to set tags 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetT
            (
                const std::vector<int> & t /** t */ 
            );
            /** Method to get holes counts 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetHolesCounts
            (
                std::vector<int> & holesCounts /** holescounts */ 
            );
            /** Method to set holes counts 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetHolesCounts
            (
                const std::vector<int> & holesCounts /** holescounts */ 
            );
            /** Method to get platingThicknesses 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetPlatingThicknesses
            (
                std::vector<double> & platingThicknesses /** platingthicknesses */ 
            );
            /** Method to set platingThicknesses 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetPlatingThicknesses
            (
                const std::vector<double> & platingThicknesses /** platingthicknesses */ 
            );
            /** Method to get platingMaterials 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetPlatingMaterials
            (
                std::vector<int> & platingMaterials /** platingmaterials */ 
            );
            /** Method to set platingMaterials 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetPlatingMaterials
            (
                const std::vector<int> & platingMaterials /** platingmaterials */ 
            );
            /** Method to get bFilleds 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetFilled
            (
                std::vector<bool> & bFilleds /** bfilleds */ 
            );
            /** Method to set fillMaterials 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetFilled
            (
                const std::vector<int> & bFilleds /** bfilleds */ 
            );
            /** Method to get fillMaterials 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetFillMaterials
            (
                std::vector<int> & fillMaterials /** fillmaterials */ 
            );
            /** Method to set fillMaterials 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetFillMaterials
            (
                const std::vector<int> & fillMaterials /** fillmaterials */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
