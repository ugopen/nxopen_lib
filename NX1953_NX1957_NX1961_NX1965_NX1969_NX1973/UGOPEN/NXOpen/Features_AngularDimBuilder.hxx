#ifndef NXOpen_FEATURES_ANGULARDIMBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_ANGULARDIMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_AngularDimBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_DimensionBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class AngularDimBuilder;
    }
    class Edge;
    namespace Features
    {
        class DimensionBuilder;
    }
    class SelectNXObject;
    namespace Features
    {
        class _AngularDimBuilderBuilder;
        class AngularDimBuilderImpl;
        /**
            Represents a @link NXOpen::Features::AngularDim NXOpen::Features::AngularDim@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateAngularDimensionBuilder  NXOpen::Features::FeatureCollection::CreateAngularDimensionBuilder @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  AngularDimBuilder : public NXOpen::Features::DimensionBuilder
        {
            private: AngularDimBuilderImpl * m_angulardimbuilder_impl;
            private: friend class  _AngularDimBuilderBuilder;
            protected: AngularDimBuilder();
            public: ~AngularDimBuilder();
            /**Returns  the origin object is for the fixed object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObject * OriginObject
            (
            );
            /**Returns  the measurement object is for the move object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObject * MeasurementObject
            (
            );
            /**Returns  the alternative angle toggle allows you to compute angle that is 360 degree subtracts current angle 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool AlternativeAngle
            (
            );
            /**Sets  the alternative angle toggle allows you to compute angle that is 360 degree subtracts current angle 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetAlternativeAngle
            (
                bool alternativeAngle /** alternativeangle */ 
            );
            /**Returns  the complement angle flag 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool ComplementAngleFlag
            (
            );
            /**Sets  the complement angle flag 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetComplementAngleFlag
            (
                bool complementAngleFlag /** complementangleflag */ 
            );
            /** Returns the flag indicating if angle is complement  @return  the flag for complement angle 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: bool GetIsComplementAngle
            (
                const NXOpen::Point3d & dimensionLocation /** Indicates dimension origin cursor location */
            );
            /** Sets the interpart source edge 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetInterpartSourceEdge
            (
                NXOpen::Edge * interpartSourceEdge /** edge */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
