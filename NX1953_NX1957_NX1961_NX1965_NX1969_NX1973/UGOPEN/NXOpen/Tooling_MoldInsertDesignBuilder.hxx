#ifndef NXOpen_TOOLING_MOLDINSERTDESIGNBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_MOLDINSERTDESIGNBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_MoldInsertDesignBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Tooling_StandardPartBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_CloneObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class MoldInsertDesignBuilder;
    }
    namespace Assemblies
    {
        class Component;
    }
    class Edge;
    namespace Features
    {
        class ToolingBox;
    }
    class Point;
    class Section;
    class SelectBody;
    class SelectFaceList;
    namespace Tooling
    {
        class CloneObject;
    }
    namespace Tooling
    {
        class StandardPartBuilder;
    }
    namespace Tooling
    {
        class _MoldInsertDesignBuilderBuilder;
        class MoldInsertDesignBuilderImpl;
        /** Builder used to add a mold insert standard part from insert library. <br> To create a new instance of this class, use @link NXOpen::Tooling::MoldwizardManager::CreateMoldInsertDesignBuilder  NXOpen::Tooling::MoldwizardManager::CreateMoldInsertDesignBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        Associative </term> <description> 
         
        true </description> </item> 

        <item><term> 
         
        AssociativePosition </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ConceptDesign </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        HeadType </term> <description> 
         
        BoundingBody </description> </item> 

        <item><term> 
         
        ReferenceSet </term> <description> 
         
        True </description> </item> 

        <item><term> 
         
        RenameComponents </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ShowInfoWindow </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        SplitBodyStatus </term> <description> 
         
        true </description> </item> 

        <item><term> 
         
        StandardPartEditType </term> <description> 
         
        AddInstance </description> </item> 

        </list> 

         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  MoldInsertDesignBuilder : public NXOpen::Tooling::StandardPartBuilder
        {
            /** The type for insert head*/
            public: enum InsertHeadType
            {
                InsertHeadTypeBoundingBody/** bounding body */ ,
                InsertHeadTypeExistingSolid/** existing solid */ ,
                InsertHeadTypeSketch/** sketch */ ,
                InsertHeadTypeStandard/** standard */ 
            };

            /** The type for insert part*/
            public: enum InsertType
            {
                InsertTypeBlock/** block */ ,
                InsertTypeCylinder/** cylinder */ 
            };

            private: MoldInsertDesignBuilderImpl * m_moldinsertdesignbuilder_impl;
            private: friend class  _MoldInsertDesignBuilderBuilder;
            protected: MoldInsertDesignBuilder();
            public: ~MoldInsertDesignBuilder();
            /**Returns  the cutting body 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBody * CuttingBody
            (
            );
            /**Returns  the head type of insert part 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::MoldInsertDesignBuilder::InsertHeadType HeadType
            (
            );
            /**Sets  the head type of insert part 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetHeadType
            (
                NXOpen::Tooling::MoldInsertDesignBuilder::InsertHeadType headType /** headtype */ 
            );
            /**Returns  the bounding body faces 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectFaceList * BoundingBodyFaces
            (
            );
            /**Returns  the extrusion section 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * ExtrusionSection
            (
            );
            /**Returns  the selected existing body as insert head body
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBody * SelectExistingBody
            (
            );
            /** Update the bounding body according the specified orietation.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void UpdateBoundingBodyOnOrientationChanged
            (
                const NXOpen::Matrix3x3 & boxMatrix /** boxmatrix */ 
            );
            /** Gets clone client data.  @return  A @link NXOpen::Tooling::CloneObject NXOpen::Tooling::CloneObject@endlink  instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::CloneObject * GetCloneObject
            (
            );
            /** Sets clone client data. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetCloneObject
            (
                NXOpen::Tooling::CloneObject * cloneObject /** A @link NXOpen::Tooling::CloneObject NXOpen::Tooling::CloneObject@endlink  instance */
            );
            /** Creates clone object. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void CreateCloneObject
            (
            );
            /**Returns  the edge user specified to position the flange 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Edge * CurrentEdge
            (
            );
            /**Sets  the edge user specified to position the flange 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetCurrentEdge
            (
                NXOpen::Edge * currentEdge /** currentedge */ 
            );
            /**  Removes added insert component.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void RemoveInsertComponent
            (
            );
            /**Returns  the point tag user specified for adding standard insert component 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * PositionPoint
            (
            );
            /**Sets  the point tag user specified for adding standard insert component 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetPositionPoint
            (
                NXOpen::Point * selPoint /** selpoint */ 
            );
            /**Returns  the associative status of insert part 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool Associative
            (
            );
            /**Sets  the associative status of insert part 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetAssociative
            (
                bool associative /** associative */ 
            );
            /**Returns  the status of splitting cutting body 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool SplitBodyStatus
            (
            );
            /**Sets  the status of splitting cutting body 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetSplitBodyStatus
            (
                bool associative /** associative */ 
            );
            /** Modifies the dimension of the added insert component.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void EditInsertPartDimensions
            (
                NXOpen::Assemblies::Component * addedPartOcc /** The component to be edit */
            );
            /** Gets the insert type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::MoldInsertDesignBuilder::InsertType GetInsertType
            (
            );
            /** Sets the insert type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetInsertType
            (
                NXOpen::Tooling::MoldInsertDesignBuilder::InsertType headType /** headtype */ 
            );
            /** Populates the selected insert component data to builder.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void PopulateInsertDataToBuilder
            (
                NXOpen::Assemblies::Component * addedPartOcc /** The component to be edit */
            );
            /** Asks insert part data from selected component.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void AskInsertDataFromSelectedComponent
            (
                NXOpen::Assemblies::Component * addedPartOcc /** The component to be edit */
            );
            /** Edits and updates insert component when user changes parameter values in UI table.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void EditInsertComponentBasedOnSheetDataChange
            (
                NXOpen::Assemblies::Component * addedPartOcc /** The component to be edit */
            );
            /** Repositions the side flange to next edge of bottom face of the insert head body.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void MoveSideFlange
            (
            );
            /** Performs some action after user selectes a existing body as the insert head body.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void OnExistingBodySelected
            (
            );
            /** Sets the position and matrix of the bounding body. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetBoundingBodyOrientation
            (
                const NXOpen::Point3d & position /** position */ ,
                const NXOpen::Matrix3x3 & matrix /** matrix */ 
            );
            /** Updates the insert component when user changes the orientation.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void UpdateInsertComponentOnOrientationChanged
            (
                const NXOpen::Matrix3x3 & matrix /** matrix */ 
            );
            /** Performs some action after user selectes a point to position the insert component.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void OnPositionPointSelected
            (
            );
            /** Performs some action after user selectes a body as the cutting body.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void OnCuttingBodySelected
            (
            );
            /** Performs some action after user selectes a face to create a bounding body as the insert head body.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void OnBoundingBodyFaceChanged
            (
            );
            /** Undo the changes if user deselects the insert component which is in editting.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void RestoreChangeInInsertComponent
            (
            );
            /** Updates the insert component after editing the bounding body feature.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void UpdateInsertBoundingBodyFromFeatureEdit
            (
                NXOpen::Features::ToolingBox * boxFeature /** the bounding body feature. */
            );
            /** Adds selected insert template part into assembly for preview.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void PreviewSelectedInsertComponent
            (
            );
            /** Performs action after inert head type is changed. @return  the flag indicates whether need to read spread sheet data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: bool OnHeadTypeChanged
            (
            );
            /** Asks flange type from sheet data. @return  The insert flange type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: int AskFlangeTypeFromSheetData
            (
            );
            /** Sets the edit status.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetEditStatus
            (
                bool isInEdit /** isinedit */ 
            );
            /** Restores parameter values from insert part.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void RestoreParameterValuesFromInsertPart
            (
                NXOpen::Assemblies::Component * editingPartOcc /** The component to be edit */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
