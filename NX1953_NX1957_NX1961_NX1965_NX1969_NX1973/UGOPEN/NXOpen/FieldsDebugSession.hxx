#ifndef NXOpen_FIELDSDEBUGSESSION_HXX_INCLUDED
#define NXOpen_FIELDSDEBUGSESSION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     FieldsDebugSession.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class FieldsDebugSession;
    class DebugSession;
    namespace Fields
    {
        class Field;
    }
    namespace Fields
    {
        class FieldTable;
    }
    class FieldsDebugSessionImpl;

    /// \cond NX_NO_DOC 
    /** Represents a class that is used for NX Fields Autotest.  This class should not
    be made available to customers  <br> To obtain an instance of this class, refer to @link NXOpen::DebugSession  NXOpen::DebugSession @endlink  <br> 
     <br>  Created in NX1899.0.0.  <br>  
    */
    class NXOPENDEBUGSESSIONCPPEXPORT  FieldsDebugSession
    {
        private: FieldsDebugSessionImpl * m_fieldsdebugsession_impl;
        private: NXOpen::DebugSession* m_owner;
        /// \cond NX_NO_DOC 
        public: explicit FieldsDebugSession(NXOpen::DebugSession *owner);


        /// \endcond 
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~FieldsDebugSession();

        /// \cond NX_NO_DOC 
        /** Create a new table field from this field by evaluating the field at points
                in the specified file. The resulting field will be in the same part. 
             @return  newly created table 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Fields::FieldTable * EvaluateFieldFromFile
        (
            NXOpen::Fields::Field * field /** field */ ,
            const NXString & filename /** file to read points from */
        );
        /** Create a new table field from this field by evaluating the field at points
                in the specified file. The resulting field will be in the same part. 
             @return  newly created table 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        NXOpen::Fields::FieldTable * EvaluateFieldFromFile
        (
            NXOpen::Fields::Field * field /** field */ ,
            const char * filename /** file to read points from */
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Create a new table field from this table
            * by sampling the independent domain and evaluating this table   
            * at the sample locations. 
             @return  newly created table 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Fields::FieldTable * SampleTable
        (
            NXOpen::Fields::FieldTable * fieldTable /** fieldtable */ ,
            int numNumPoints /** The number of sample points */
        );

        /// \endcond 
    }; //lint !e1712 default constructor not defined for class  


    /// \endcond 
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
