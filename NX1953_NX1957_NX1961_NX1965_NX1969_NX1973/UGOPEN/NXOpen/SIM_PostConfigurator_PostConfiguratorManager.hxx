#ifndef NXOpen_SIM_POSTCONFIGURATOR_POSTCONFIGURATORMANAGER_HXX_INCLUDED
#define NXOpen_SIM_POSTCONFIGURATOR_POSTCONFIGURATORMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_PostConfigurator_PostConfiguratorManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/SIM_PostConfigurator_PostConfiguratorDebugBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        namespace PostConfigurator
        {
            class PostConfiguratorManager;
        }
    }
    class Session;
    namespace SIM
    {
        namespace PostConfigurator
        {
            class CreationPostBuilder;
        }
    }
    namespace SIM
    {
        namespace PostConfigurator
        {
            class EncryptPostprocessorFilesBuilder;
        }
    }
    namespace SIM
    {
        namespace PostConfigurator
        {
            class PostConfiguratorBuilder;
        }
    }
    namespace SIM
    {
        namespace PostConfigurator
        {
            class PostConfiguratorDebugBuilder;
        }
    }
    namespace SIM
    {
        namespace PostConfigurator
        {
            class UdeBuilder;
        }
    }
    namespace SIM
    {
        namespace PostConfigurator
        {
            class UdeParameterBuilder;
        }
    }
    namespace SIM
    {
        namespace PostConfigurator
        {
            class PostConfiguratorManagerImpl;
            /** Represents Post Configurator Manager <br> Use @link NXOpen::Session::PostConfiguratorManager NXOpen::Session::PostConfiguratorManager@endlink  to get the instance of this class.  <br> 
             <br>  Created in NX10.0.3.  <br>  
            */
            class NXOPENCPP_SIMEXPORT  PostConfiguratorManager
            {
                private: PostConfiguratorManagerImpl * m_postconfiguratormanager_impl;
                private: NXOpen::Session* m_owner;
                /// \cond NX_NO_DOC 
                public: explicit PostConfiguratorManager(NXOpen::Session *owner);


                /// \endcond 
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                public: ~PostConfiguratorManager();
                /** Creates a @link NXOpen::SIM::PostConfigurator::CreationPostBuilder NXOpen::SIM::PostConfigurator::CreationPostBuilder@endlink  object  @return  The new creation post builder 
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: NXOpen::SIM::PostConfigurator::CreationPostBuilder * CreateCreationPostBuilder
                (
                );
                /** Creates a @link NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder@endlink  object  @return  The new post configurator builder 
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder * CreatePostConfiguratorBuilder
                (
                    const NXString & postProcessorFilename /** the post processor filename */
                );
                /** Creates a @link NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder@endlink  object  @return  The new post configurator builder 
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder * CreatePostConfiguratorBuilder
                (
                    const char * postProcessorFilename /** the post processor filename */
                );
                /** Creates a @link NXOpen::SIM::PostConfigurator::UdeBuilder NXOpen::SIM::PostConfigurator::UdeBuilder@endlink  object  @return  The new ude builder 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: NXOpen::SIM::PostConfigurator::UdeBuilder * CreateUdeBuilder
                (
                );
                /** Creates a @link NXOpen::SIM::PostConfigurator::UdeParameterBuilder NXOpen::SIM::PostConfigurator::UdeParameterBuilder@endlink  object  @return  The new ude parameter builder 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: NXOpen::SIM::PostConfigurator::UdeParameterBuilder * CreateUdeParameterBuilder
                (
                );
                /** Creates a @link NXOpen::SIM::PostConfigurator::PostConfiguratorDebugBuilder NXOpen::SIM::PostConfigurator::PostConfiguratorDebugBuilder@endlink  object  @return  The new post configurator debug builder 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") */
                public: NXOpen::SIM::PostConfigurator::PostConfiguratorDebugBuilder * CreatePostConfiguratorDebugBuilder
                (
                );
                /** Creates a @link NXOpen::SIM::PostConfigurator::EncryptPostprocessorFilesBuilder NXOpen::SIM::PostConfigurator::EncryptPostprocessorFilesBuilder@endlink  object  @return  The new encrypt postprocessor files builder 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") */
                public: NXOpen::SIM::PostConfigurator::EncryptPostprocessorFilesBuilder * CreateEncryptPostprocessorFilesBuilder
                (
                    const NXString & postProcessorFilename /** the post processor filename (.pui) */
                );
                /** Creates a @link NXOpen::SIM::PostConfigurator::EncryptPostprocessorFilesBuilder NXOpen::SIM::PostConfigurator::EncryptPostprocessorFilesBuilder@endlink  object  @return  The new encrypt postprocessor files builder 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") */
                NXOpen::SIM::PostConfigurator::EncryptPostprocessorFilesBuilder * CreateEncryptPostprocessorFilesBuilder
                (
                    const char * postProcessorFilename /** the post processor filename (.pui) */
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
