#ifndef NXOpen_CAE_SIMLOADRECIPELBCGENERATOR_HXX_INCLUDED
#define NXOpen_CAE_SIMLOADRECIPELBCGENERATOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SimLoadRecipeLbcGenerator.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SimSolution.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SimLoadRecipeLbcGenerator;
    }
    namespace CAE
    {
        class SimSolution;
    }
    namespace CAE
    {
        class SimLoadRecipeLbcGeneratorImpl;
        /**  @brief  Handles generation of subcases and loads based on a @link NXOpen::CAE::SimLoadRecipe NXOpen::CAE::SimLoadRecipe@endlink .  

          
                
                An instance of this class can be obtained from @link NXOpen::CAE::SimLoadRecipe NXOpen::CAE::SimLoadRecipe@endlink . 
             <br> To create a new instance of this class, use @link NXOpen::CAE::SimLoadRecipe::NewLbcGeneratorFromLoadRecipe  NXOpen::CAE::SimLoadRecipe::NewLbcGeneratorFromLoadRecipe @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SimLoadRecipeLbcGenerator : public NXOpen::TransientObject
        {
            /** This enum defines the hierarchy type of LBCs to be created by this @link NXOpen::CAE::SimLoadRecipeLbcGenerator NXOpen::CAE::SimLoadRecipeLbcGenerator@endlink .*/
            public: enum LbcHierarchyTypes
            {
                LbcHierarchyTypesAggregated/** Aggregated LBCs */,
                LbcHierarchyTypesSeparated/** Separated LBCs */,
                LbcHierarchyTypesFileReference/** File Reference LBCs */
            };

            private: SimLoadRecipeLbcGeneratorImpl * m_simloadrecipelbcgenerator_impl;
            /// \cond NX_NO_DOC 
            public: explicit SimLoadRecipeLbcGenerator(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~SimLoadRecipeLbcGenerator();
            /** Generates Loads at solution level. This method supports creation of loads for a single subcase (load condition or 
                        combination of load condition and tracking value). All Loads will be created in the loads container of the solution.
                        No steps will be created or added to the solution.
                        
                        The solver language of the solution defines what kind of Loads, Constraints and/or Load Sets will be generated for
                        each load type. 
             <br>  @deprecated Deprecated in NX11.0.0.  Use method taking LBC hierarchy type as input. This method always creates separated LBCs. <br>  

             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NX_DEPRECATED("Deprecated in NX11.0.0.  Use method taking LBC hierarchy type as input. This method always creates separated LBCs.") void Generate
            (
                NXOpen::CAE::SimSolution * solution /** solution */ 
            );
            /** Generates Loads at the level of solution steps. This method creates a solution step for every available subcase 
                        (load condition or combination of load condition and tracking value) from the load recipe. Loads will be 
                        created in the loads container of each created solution step. 

                        The solver language of the solution defines what kind of Loads, Constraints and/or Load Sets will be generated for
                        each load type. 
             <br>  @deprecated Deprecated in NX11.0.0.  Use method taking LBC hierarchy type as input. This method always creates separated LBCs. <br>  

             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NX_DEPRECATED("Deprecated in NX11.0.0.  Use method taking LBC hierarchy type as input. This method always creates separated LBCs.") void Generate
            (
                NXOpen::CAE::SimSolution * solution /** solution */ ,
                int stepType /** steptype */ 
            );
            /** Gets the count of allowable step types when generating steps for a solution from a load recipe. 
                        
                        Note that not every step type supported by a solution can be created from a load recipe.
                        The value returned by this method is not the same as @link NXOpen::CAE::SimSolution::AllowedStepTypeCount NXOpen::CAE::SimSolution::AllowedStepTypeCount@endlink .
                      @return  count of allowable step types 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: int GetAllowedStepTypeCount
            (
                NXOpen::CAE::SimSolution * solution /** solution */ 
            );
            /** Generates Loads at solution level. This method supports creation of loads for a single subcase (load condition or
                    combination of load condition and tracking value). All Loads will be created in the loads container of the solution.
                    No steps will be created or added to the solution.

                    The solver language of the solution defines what kind of Loads, Constraints and/or Load Sets will be generated for
                    each load type. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void Generate
            (
                NXOpen::CAE::SimSolution * solution /** solution */ ,
                NXOpen::CAE::SimLoadRecipeLbcGenerator::LbcHierarchyTypes lbcHierarchyType /** lbchierarchytype */ 
            );
            /** Generates Loads at the level of solution steps. This method creates a solution step for every available subcase
                    (load condition or combination of load condition and tracking value) from the load recipe. Loads will be
                    created in the loads container of each created solution step.

                    The solver language of the solution defines what kind of Loads, Constraints and/or Load Sets will be generated for
                    each load type. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void Generate
            (
                NXOpen::CAE::SimSolution * solution /** solution */ ,
                int stepType /** steptype */ ,
                NXOpen::CAE::SimLoadRecipeLbcGenerator::LbcHierarchyTypes lbcHierarchyType /** lbchierarchytype */ 
            );
            /** Update Loads at the level of solution steps. This method essentially re-generate the solution step and loads for every available subcase
                    (load condition or combination of load condition and tracking value) from the load recipe. 
                    
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void UpdateSolution
            (
                NXOpen::CAE::SimSolution * solution /** solution */ ,
                NXOpen::CAE::SimLoadRecipeLbcGenerator::LbcHierarchyTypes lbcHierarchyType /** lbchierarchytype */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
