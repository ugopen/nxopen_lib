#ifndef NXOpen_TOOLING_INSERTBARCODEBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_INSERTBARCODEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_InsertBarcodeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_OriginBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class InsertBarcodeBuilder;
    }
    namespace Annotations
    {
        class SimpleDraftingAid;
    }
    class Builder;
    class Plane;
    namespace Tooling
    {
        class _InsertBarcodeBuilderBuilder;
        class InsertBarcodeBuilderImpl;
        /** Creates Insert Barcode Builder  <br> To create a new instance of this class, use @link NXOpen::Tooling::MoldwizardManager::CreateInsertBarcodeBuilder  NXOpen::Tooling::MoldwizardManager::CreateInsertBarcodeBuilder @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  InsertBarcodeBuilder : public NXOpen::Builder
        {
            private: InsertBarcodeBuilderImpl * m_insertbarcodebuilder_impl;
            private: friend class  _InsertBarcodeBuilderBuilder;
            protected: InsertBarcodeBuilder();
            public: ~InsertBarcodeBuilder();
            /**Returns  the target object to put barcode
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * TargetObject
            (
            );
            /**Sets  the target object to put barcode
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetTargetObject
            (
                NXOpen::Plane * targetObject /** targetobject */ 
            );
            /**Returns  the barcode height 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: double BarcodeHeight
            (
            );
            /**Sets  the barcode height 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetBarcodeHeight
            (
                double height /** height */ 
            );
            /**Returns  the basepoint to insert barcode 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::OriginBuilder::AlignmentPosition Basepoint
            (
            );
            /**Sets  the basepoint to insert barcode 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetBasepoint
            (
                NXOpen::Annotations::OriginBuilder::AlignmentPosition position /** position */ 
            );
            /**Returns  the barcode color
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int ColorPicker
            (
            );
            /**Sets  the barcode color
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetColorPicker
            (
                int colorPicker /** colorpicker */ 
            );
            /** Gets the barcode tag @return  @link NXOpen::Annotations::SimpleDraftingAid NXOpen::Annotations::SimpleDraftingAid@endlink  to be edited 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::SimpleDraftingAid * GetBarcodeTag
            (
            );
            /** Sets the barcode tag
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetBarcodeTag
            (
                NXOpen::Annotations::SimpleDraftingAid * barcodeTag /** @link NXOpen::Annotations::SimpleDraftingAid NXOpen::Annotations::SimpleDraftingAid@endlink  to be edited */
            );
            /** Gets the flag that identifies whether to insert multiple barcodes or not
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsMultipleBarcodes
            (
            );
            /** Sets the flag that identifies whether to insert multiple barcodes or not
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetIsMultipleBarcodes
            (
                bool isMultipleBarcodes /** ismultiplebarcodes */ 
            );
            /** Gets the flag that identifies whether the barcode is qualified or not
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsBarcodeQualified
            (
            );
            /** Sets the flag that identifies whether the barcode is qualified or not
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetBarcodeQualified
            (
                bool qualify /** qualify */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
