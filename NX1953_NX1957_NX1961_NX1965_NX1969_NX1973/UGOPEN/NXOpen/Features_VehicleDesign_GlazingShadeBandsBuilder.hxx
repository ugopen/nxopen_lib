#ifndef NXOpen_FEATURES_VEHICLEDESIGN_GLAZINGSHADEBANDSBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_VEHICLEDESIGN_GLAZINGSHADEBANDSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VehicleDesign_GlazingShadeBandsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace VehicleDesign
        {
            class GlazingShadeBandsBuilder;
        }
    }
    namespace Features
    {
        class Feature;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class SelectFeature;
    }
    class Point;
    class ScCollector;
    namespace Features
    {
        namespace VehicleDesign
        {
            class _GlazingShadeBandsBuilderBuilder;
            class GlazingShadeBandsBuilderImpl;
            /**
                Represents a @link NXOpen::Features::VehicleDesign::GlazingShadeBandsBuilder NXOpen::Features::VehicleDesign::GlazingShadeBandsBuilder@endlink  used to create or edit
                a vehicle design @link NXOpen::Features::VehicleDesign::GlazingShadeBands NXOpen::Features::VehicleDesign::GlazingShadeBands@endlink  feature.
                 <br> To create a new instance of this class, use @link NXOpen::Features::VehicleDesignCollection::CreateGlazingShadeBandsBuilder  NXOpen::Features::VehicleDesignCollection::CreateGlazingShadeBandsBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            EyellipsePercentile </term> <description> 
             
            Per95 </description> </item> 

            <item><term> 
             
            FixedSideGlazing </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            ForwardGlazing </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            RearGlazing </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            UseStandardLoading </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            UseViewHeight </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            ViewHeight </term> <description> 
             
            0 </description> </item> 

            </list> 

             <br>  Created in NX1926.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  GlazingShadeBandsBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** Options of the eyellipse percentile */
                public: enum EyePercentile
                {
                    EyePercentilePer95/** Represents selecting 95% eyellipse percentile */,
                    EyePercentilePer99/** Represents selecting 99% eyellipse percentile */
                };

                private: GlazingShadeBandsBuilderImpl * m_glazingshadebandsbuilder_impl;
                private: friend class  _GlazingShadeBandsBuilderBuilder;
                protected: GlazingShadeBandsBuilder();
                public: ~GlazingShadeBandsBuilder();
                /**Returns  the option to indicate if the loading specified by the standard will be used. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool UseStandardLoading
                (
                );
                /**Sets  the option to indicate if the loading specified by the standard will be used. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUseStandardLoading
                (
                    bool useStandardLoading /** usestandardloading */ 
                );
                /**Returns  the name of the used loading. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString Loading
                (
                );
                /**Sets  the name of the used loading. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLoading
                (
                    const NXString & loading /** loading */ 
                );
                /**Sets  the name of the used loading. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetLoading
                (
                    const char * loading /** loading */ 
                );
                /**Returns  the option determines whether or not the glazing shade band curves on the forward windshield should be created. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ForwardGlazing
                (
                );
                /**Sets  the option determines whether or not the glazing shade band curves on the forward windshield should be created. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetForwardGlazing
                (
                    bool forwardGlazing /** forwardglazing */ 
                );
                /**Returns  the option determines whether or not the glazing shade band curves on the fixed side windows should be created. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool FixedSideGlazing
                (
                );
                /**Sets  the option determines whether or not the glazing shade band curves on the fixed side windows should be created. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetFixedSideGlazing
                (
                    bool fixedSideGlazing /** fixedsideglazing */ 
                );
                /**Returns  the option determines whether or not the glazing shade band curves on the rear window (backlight) should be created. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool RearGlazing
                (
                );
                /**Sets  the option determines whether or not the glazing shade band curves on the rear window (backlight) should be created. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRearGlazing
                (
                    bool rearGlazing /** rearglazing */ 
                );
                /**Returns  the selected eyellipse feature. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SelectFeature * Eyellipse
                (
                );
                /**Returns  the eyellipse feature. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Feature * EyeFeature
                (
                );
                /**Sets  the eyellipse feature. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetEyeFeature
                (
                    NXOpen::Features::Feature * eyeFeature /** eyefeature */ 
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::GlazingShadeBandsBuilder::EyePercentile NXOpen::Features::VehicleDesign::GlazingShadeBandsBuilder::EyePercentile@endlink  for the eyellipse percentile to be used. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::GlazingShadeBandsBuilder::EyePercentile EyellipsePercentile
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::GlazingShadeBandsBuilder::EyePercentile NXOpen::Features::VehicleDesign::GlazingShadeBandsBuilder::EyePercentile@endlink  for the eyellipse percentile to be used. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEyellipsePercentile
                (
                    NXOpen::Features::VehicleDesign::GlazingShadeBandsBuilder::EyePercentile eyellipsePercentile /** eyellipsepercentile */ 
                );
                /**Returns  the forward glazing geometry specified by user. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * ForwardGlazingGeometry
                (
                );
                /**Sets  the forward glazing geometry specified by user. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetForwardGlazingGeometry
                (
                    NXOpen::ScCollector * forwardGlazingGeometry /** forwardglazinggeometry */ 
                );
                /**Returns  the fixed side glazing geometry specified by user. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * SideGlazingGeometry
                (
                );
                /**Sets  the fixed side glazing geometry specified by user. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetSideGlazingGeometry
                (
                    NXOpen::ScCollector * sideGlazingGeometry /** sideglazinggeometry */ 
                );
                /**Returns  the rear glazing geometry specified by user. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * RearGlazingGeometry
                (
                );
                /**Sets  the rear glazing geometry specified by user. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetRearGlazingGeometry
                (
                    NXOpen::ScCollector * rearGlazingGeometry /** rearglazinggeometry */ 
                );
                /**Returns  the option determines whether or not the upper boundary of the field of view through the inside rear view mirror 
                        should be considered when generating glazing shade band curves on the rear window. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool UseViewHeight
                (
                );
                /**Sets  the option determines whether or not the upper boundary of the field of view through the inside rear view mirror 
                        should be considered when generating glazing shade band curves on the rear window. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUseViewHeight
                (
                    bool useViewHeight /** useviewheight */ 
                );
                /**Returns  the upper boundary point specified by user to define the rear view height. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * UpperPoint
                (
                );
                /**Sets  the upper boundary point specified by user to define the rear view height. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUpperPoint
                (
                    NXOpen::Point * upperPoint /** upperpoint */ 
                );
                /**Returns  the value of the rear view height. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: double ViewHeight
                (
                );
                /**Sets  the value of the rear view height. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetViewHeight
                (
                    double viewHeight /** viewheight */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
