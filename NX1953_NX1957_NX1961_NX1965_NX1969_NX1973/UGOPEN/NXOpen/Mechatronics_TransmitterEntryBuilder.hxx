#ifndef NXOpen_MECHATRONICS_TRANSMITTERENTRYBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_TRANSMITTERENTRYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_TransmitterEntryBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mechatronics_PhysicsConstraintBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class TransmitterEntryBuilder;
    }
    namespace Mechatronics
    {
        class PhysicsConstraintBuilder;
    }
    namespace Mechatronics
    {
        class SelectCollisionSensorList;
    }
    class SelectNXObjectList;
    namespace Mechatronics
    {
        class _TransmitterEntryBuilderBuilder;
        class TransmitterEntryBuilderImpl;
        /** Represents a @link NXOpen::Mechatronics::TransmitterEntry NXOpen::Mechatronics::TransmitterEntry@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Mechatronics::TransmitterEntryCollection::CreateTransmitterEntryBuilder  NXOpen::Mechatronics::TransmitterEntryCollection::CreateTransmitterEntryBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  TransmitterEntryBuilder : public NXOpen::Mechatronics::PhysicsConstraintBuilder
        {
            /**  @brief  represents the candidate option.  

             */
            public: enum TransmitterEntryCandidateType
            {
                TransmitterEntryCandidateTypeAnyObject/** Any rigid objects */,
                TransmitterEntryCandidateTypeOnlySelected/** Selected sources   */
            };

            private: TransmitterEntryBuilderImpl * m_transmitterentrybuilder_impl;
            private: friend class  _TransmitterEntryBuilderBuilder;
            protected: TransmitterEntryBuilder();
            public: ~TransmitterEntryBuilder();
            /**Returns   @brief  the detector.  

             
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::SelectCollisionSensorList * CollisionSensor
            (
            );
            /**Returns   @brief  the type of candidate.  

             
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::TransmitterEntryBuilder::TransmitterEntryCandidateType CandidateType
            (
            );
            /**Sets   @brief  the type of candidate.  

             
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetCandidateType
            (
                NXOpen::Mechatronics::TransmitterEntryBuilder::TransmitterEntryCandidateType candType /** candtype */ 
            );
            /**Returns   @brief  the source selection. This can be a @link NXOpen::Mechatronics::RigidBody NXOpen::Mechatronics::RigidBody@endlink ,
                     @link NXOpen::Mechatronics::ObjectTransformer NXOpen::Mechatronics::ObjectTransformer@endlink  or @link NXOpen::Mechatronics::ObjectSource NXOpen::Mechatronics::ObjectSource@endlink .  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::SelectNXObjectList * Candidate
            (
            );
            /**Returns   @brief  the port of the sender.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: int Port
            (
            );
            /**Sets   @brief  the port of the sender.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetPort
            (
                int port /** port */ 
            );
            /**Returns   @brief  the execute once per activation. If this is true, the transmission will
                    only happen once.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: bool ExecuteOnce
            (
            );
            /**Sets   @brief  the execute once per activation. If this is true, the transmission will
                    only happen once.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetExecuteOnce
            (
                bool executeOnce /** executeonce */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
