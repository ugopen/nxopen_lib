#ifndef NXOpen_LINEDESIGNER_SELECTIONTOOLBUILDER_HXX_INCLUDED
#define NXOpen_LINEDESIGNER_SELECTIONTOOLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LineDesigner_SelectionToolBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/liblinedesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace LineDesigner
    {
        class SelectionToolBuilder;
    }
    class Builder;
    class Expression;
    namespace LineDesigner
    {
        class _SelectionToolBuilderBuilder;
        class SelectionToolBuilderImpl;
        /**
            
            
            
            
            
             <br> To create a new instance of this class, use @link NXOpen::LineDesigner::LineDesignerManager::CreateSelectionToolBuilder  NXOpen::LineDesigner::LineDesignerManager::CreateSelectionToolBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AddOption </term> <description> 
         
        Add </description> </item> 

        <item><term> 
         
        AddToReferenceSet </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ExcludeConnectors </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ExcludeSmallObjects </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        IncludeAboveZ </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        View </term> <description> 
         
        AllFourteen </description> </item> 

        </list> 

         <br>  Created in NX1938.0.0.  <br>  
        */
        class LINEDESIGNEROPENCPPEXPORT  SelectionToolBuilder : public NXOpen::Builder
        {
            /**This enum provides view options for calculating the selection */
            public: enum SelectionView
            {
                SelectionViewSixStandard/** six standard */ ,
                SelectionViewEightIsometric/** eight isometric */ ,
                SelectionViewAllFourteen/** all fourteen */ 
            };

            /**This enum provides options for adding or replacing objects to reference set */
            public: enum RefSetOption
            {
                RefSetOptionAdd/** add */ ,
                RefSetOptionReplace/** replace */ 
            };

            private: SelectionToolBuilderImpl * m_selectiontoolbuilder_impl;
            private: friend class  _SelectionToolBuilderBuilder;
            protected: SelectionToolBuilder();
            public: ~SelectionToolBuilder();
            /**Returns  the view 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::LineDesigner::SelectionToolBuilder::SelectionView View
            (
            );
            /**Sets  the view 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetView
            (
                NXOpen::LineDesigner::SelectionToolBuilder::SelectionView view /** view */ 
            );
            /**Returns  the include above z 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : None */
            public: bool IncludeAboveZ
            (
            );
            /**Sets  the include above z 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetIncludeAboveZ
            (
                bool includeAboveZ /** includeabovez */ 
            );
            /**Returns  the exclude object toggle 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : None */
            public: bool ExcludeSmallObjects
            (
            );
            /**Sets  the exclude object toggle 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetExcludeSmallObjects
            (
                bool excludeSmallObjects /** excludesmallobjects */ 
            );
            /**Returns  the exclude small object size
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ExcludeObjectSize
            (
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void CalculateSelection
            (
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void InvertSelection
            (
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void ShowOnly
            (
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void ShowAll
            (
            );
            /**Returns  the add to Reference set 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : None */
            public: bool AddToReferenceSet
            (
            );
            /**Sets  the add to Reference set 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetAddToReferenceSet
            (
                bool addToRefSet /** addtorefset */ 
            );
            /**Returns  the add option 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::LineDesigner::SelectionToolBuilder::RefSetOption AddOption
            (
            );
            /**Sets  the add option 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetAddOption
            (
                NXOpen::LineDesigner::SelectionToolBuilder::RefSetOption addOption /** addoption */ 
            );
            /**Returns  the exclude connectors toggle 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : None */
            public: bool ExcludeConnectors
            (
            );
            /**Sets  the exclude connectors toggle 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetExcludeConnectors
            (
                bool excludeConnectors /** excludeconnectors */ 
            );
            /**Returns  the selected ref set name string 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXString SelectedRefSet
            (
            );
            /**Sets  the selected ref set name string 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetSelectedRefSet
            (
                const NXString & refSetName /** refsetname */ 
            );
            /**Sets  the selected ref set name string 
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void SetSelectedRefSet
            (
                const char * refSetName /** refsetname */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
