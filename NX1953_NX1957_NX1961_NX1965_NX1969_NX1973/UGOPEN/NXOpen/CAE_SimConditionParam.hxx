#ifndef NXOpen_CAE_SIMCONDITIONPARAM_HXX_INCLUDED
#define NXOpen_CAE_SIMCONDITIONPARAM_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SimConditionParam.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SimConditionParam;
    }
    class Unit;
    namespace CAE
    {
        class _SimConditionParamBuilder;
        class SimConditionParamImpl;
        /**  @brief  This class represents a named measurable quantity.  A collection of @link NXOpen::CAE::SimConditionParam NXOpen::CAE::SimConditionParam@endlink  
                represents a measurable environment.  A @link NXOpen::CAE::SimCondition NXOpen::CAE::SimCondition@endlink  consists of specified values for
                all @link NXOpen::CAE::SimConditionParam NXOpen::CAE::SimConditionParam@endlink , thus defining a state of the measurable environment. 

           <br> An instance of this class can be obtained from @link NXOpen::CAE::SimConditionSeqMgr NXOpen::CAE::SimConditionSeqMgr@endlink .  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SimConditionParam : public NXOpen::TaggedObject
        {
            private: SimConditionParamImpl * m_simconditionparam_impl;
            private: friend class  _SimConditionParamBuilder;
            protected: SimConditionParam();
            public: ~SimConditionParam();
            /**Returns  the parameter name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Returns  the parameter units 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Unit * Units
            (
            );
            /** Modifies the name and units of @link NXOpen::CAE::SimConditionParam NXOpen::CAE::SimConditionParam@endlink .
                        An error will be issued if new name clashes with existing @link NXOpen::CAE::SimConditionParam NXOpen::CAE::SimConditionParam@endlink .
                        Measure of units cannot be modified. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void Modify
            (
                const NXString & name /** name */ ,
                NXOpen::Unit * units /** units */ 
            );
            /** Modifies the name and units of @link NXOpen::CAE::SimConditionParam NXOpen::CAE::SimConditionParam@endlink .
                        An error will be issued if new name clashes with existing @link NXOpen::CAE::SimConditionParam NXOpen::CAE::SimConditionParam@endlink .
                        Measure of units cannot be modified. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void Modify
            (
                const char * name /** name */ ,
                NXOpen::Unit * units /** units */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
