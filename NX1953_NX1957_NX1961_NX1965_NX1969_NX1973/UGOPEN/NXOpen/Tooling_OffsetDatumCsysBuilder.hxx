#ifndef NXOpen_TOOLING_OFFSETDATUMCSYSBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_OFFSETDATUMCSYSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_OffsetDatumCsysBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class OffsetDatumCsysBuilder;
    }
    class Builder;
    class CoordinateSystem;
    class NXObject;
    namespace Tooling
    {
        class _OffsetDatumCsysBuilderBuilder;
        class OffsetDatumCsysBuilderImpl;
        /** 
            Represents a @link NXOpen::Tooling::OffsetDatumCsysBuilder NXOpen::Tooling::OffsetDatumCsysBuilder@endlink  builder.
             <br> Use the @link NXOpen::Tooling::ReusableObjectManager NXOpen::Tooling::ReusableObjectManager@endlink  class to create a OffsetDatumCsysBuilder.  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  OffsetDatumCsysBuilder : public NXOpen::Builder
        {
            /** the reference type */
            public: enum ReferenceType
            {
                ReferenceTypeReferenceObject/** reference object */ ,
                ReferenceTypeReferenceExpression/** reference expression */ 
            };

            private: OffsetDatumCsysBuilderImpl * m_offsetdatumcsysbuilder_impl;
            private: friend class  _OffsetDatumCsysBuilderBuilder;
            protected: OffsetDatumCsysBuilder();
            public: ~OffsetDatumCsysBuilder();
            /** Add datum csys 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void AddDatumCsys
            (
                NXOpen::CoordinateSystem * refCsys /** refcsys */ ,
                NXOpen::NXObject * refObject /** refobject */ ,
                NXOpen::NXObject * refExp /** refexp */ 
            );
            /** Set csys name 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCsysName
            (
                const NXString & olderName /** oldername */ ,
                const NXString & newName /** newname */ 
            );
            /** Set csys name 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            void SetCsysName
            (
                const char * olderName /** oldername */ ,
                const char * newName /** newname */ 
            );
            /** Set reference object 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetReferenceObject
            (
                const NXString & csysName /** csysname */ ,
                NXOpen::NXObject * refObject /** refobject */ 
            );
            /** Set reference object 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            void SetReferenceObject
            (
                const char * csysName /** csysname */ ,
                NXOpen::NXObject * refObject /** refobject */ 
            );
            /** Set expression formula 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetExpressionFormula
            (
                const NXString & csysName /** csysname */ ,
                const NXString & expFormula /** expformula */ 
            );
            /** Set expression formula 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            void SetExpressionFormula
            (
                const char * csysName /** csysname */ ,
                const char * expFormula /** expformula */ 
            );
            /** Edit Csys
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void EditCsys
            (
                NXOpen::CoordinateSystem * csysName /** csysname */ ,
                NXOpen::NXObject * refObject /** refobject */ ,
                NXOpen::CoordinateSystem * refCsys /** refcsys */ 
            );
            /** Delete Csys
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void DeleteCsys
            (
                const std::vector<NXString> & csysName /** csysname */ 
            );
            /** Get csys by csys name 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * GetCsysByName
            (
                const NXString & csysName /** csysname */ 
            );
            /** Get csys by csys name 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::CoordinateSystem * GetCsysByName
            (
                const char * csysName /** csysname */ 
            );
            /** Get all Csys name
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void GetAllCsys
            (
                std::vector<NXString> & csysName /** csysname */ 
            );
            /** Set all Csys
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAllCsys
            (
                const std::vector<NXOpen::CoordinateSystem *> & csys /** csys */ ,
                const std::vector<NXString> & csysName /** csysname */ ,
                const std::vector<NXOpen::NXObject *> & refExp /** refexp */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
