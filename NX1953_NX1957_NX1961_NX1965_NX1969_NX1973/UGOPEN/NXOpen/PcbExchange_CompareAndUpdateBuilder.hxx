#ifndef NXOpen_PCBEXCHANGE_COMPAREANDUPDATEBUILDER_HXX_INCLUDED
#define NXOpen_PCBEXCHANGE_COMPAREANDUPDATEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PcbExchange_CompareAndUpdateBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/PcbExchange_EntityFilter.hxx>
#include <NXOpen/libnxopencpp_pcbexchange_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PcbExchange
    {
        class CompareAndUpdateBuilder;
    }
    class Builder;
    class Expression;
    namespace PcbExchange
    {
        class EntityFilter;
    }
    namespace PcbExchange
    {
        class _CompareAndUpdateBuilderBuilder;
        class CompareAndUpdateBuilderImpl;
        /** Represents a builder to compare MCAD and ECAD files and update.  <br> To create a new instance of this class, use @link NXOpen::PcbExchange::Manager::CreateCompareAndUpdateBuilder  NXOpen::PcbExchange::Manager::CreateCompareAndUpdateBuilder @endlink  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_PCBEXCHANGEEXPORT  CompareAndUpdateBuilder : public NXOpen::Builder
        {
            /** The compare options. */
            public: enum CompareEnum
            {
                CompareEnumAll/** all */ ,
                CompareEnumBoardOnly/** board only */ 
            };

            /** The board update options. */
            public: enum BoardUpdateEnum
            {
                BoardUpdateEnumAll/** all */ ,
                BoardUpdateEnumNone/** none */ 
            };

            /** The assembly update options. */
            public: enum AssemblyUpdateEnum
            {
                AssemblyUpdateEnumAll/** all */ ,
                AssemblyUpdateEnumNone/** none */ ,
                AssemblyUpdateEnumSpecify/** specify */ 
            };

            private: CompareAndUpdateBuilderImpl * m_compareandupdatebuilder_impl;
            private: friend class  _CompareAndUpdateBuilderBuilder;
            protected: CompareAndUpdateBuilder();
            public: ~CompareAndUpdateBuilder();
            /**Returns  the flag indicating whether the board comes from ODB. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool FromOdbFolder
            (
            );
            /**Sets  the flag indicating whether the board comes from ODB. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetFromOdbFolder
            (
                bool fromOdbFolder /** fromodbfolder */ 
            );
            /**Returns  the board file when the board does not come from ODB. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString BoardFile
            (
            );
            /**Sets  the board file when the board does not come from ODB. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetBoardFile
            (
                const NXString & boardFile /** boardfile */ 
            );
            /**Sets  the board file when the board does not come from ODB. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetBoardFile
            (
                const char * boardFile /** boardfile */ 
            );
            /**Returns  the library file when the board does not come from ODB. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString LibraryFile
            (
            );
            /**Sets  the library file when the board does not come from ODB. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetLibraryFile
            (
                const NXString & libraryFile /** libraryfile */ 
            );
            /**Sets  the library file when the board does not come from ODB. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetLibraryFile
            (
                const char * libraryFile /** libraryfile */ 
            );
            /**Returns  the folder when the board comes from ODB. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString BoardFolder
            (
            );
            /**Sets  the folder when the board comes from ODB. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetBoardFolder
            (
                const NXString & boardFolder /** boardfolder */ 
            );
            /**Sets  the folder when the board comes from ODB. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetBoardFolder
            (
                const char * boardFolder /** boardfolder */ 
            );
            /**Returns  the compare options. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::CompareAndUpdateBuilder::CompareEnum CompareOptions
            (
            );
            /**Sets  the compare options. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetCompareOptions
            (
                NXOpen::PcbExchange::CompareAndUpdateBuilder::CompareEnum compareOptions /** compareoptions */ 
            );
            /**Returns  the flag indicating whether to filter the NX model. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool FilterNxModel
            (
            );
            /**Sets  the flag indicating whether to filter the NX model. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetFilterNxModel
            (
                bool filterNxModel /** filternxmodel */ 
            );
            /**Returns  the NX model filters. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::EntityFilter * NXEntityFilter
            (
            );
            /**Sets  the NX model filters. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetNXEntityFilter
            (
                NXOpen::PcbExchange::EntityFilter * filter /** filter */ 
            );
            /**Returns  the flag indicating whether to filter the ECAD model. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool FilterEcadModel
            (
            );
            /**Sets  the flag indicating whether to filter the ECAD model. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetFilterEcadModel
            (
                bool filterEcadModel /** filterecadmodel */ 
            );
            /**Returns  the ECAD filters. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::EntityFilter * ECADEntityFilter
            (
            );
            /**Sets  the ECAD filters. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetECADEntityFilter
            (
                NXOpen::PcbExchange::EntityFilter * filter /** filter */ 
            );
            /**Returns  the board update options. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::CompareAndUpdateBuilder::BoardUpdateEnum BoardUpdateOptions
            (
            );
            /**Sets  the board update options. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetBoardUpdateOptions
            (
                NXOpen::PcbExchange::CompareAndUpdateBuilder::BoardUpdateEnum boardUpdateOptions /** boardupdateoptions */ 
            );
            /**Returns  the assembly update options. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::CompareAndUpdateBuilder::AssemblyUpdateEnum AssemblyUpdateOptions
            (
            );
            /**Sets  the assembly update options. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetAssemblyUpdateOptions
            (
                NXOpen::PcbExchange::CompareAndUpdateBuilder::AssemblyUpdateEnum assemblyUpdateOptions /** assemblyupdateoptions */ 
            );
            /**Returns  the flag indicating whether to override the board thickness. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool OverrideBoardThickness
            (
            );
            /**Sets  the flag indicating whether to override the board thickness. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetOverrideBoardThickness
            (
                bool overrideBoardThickness /** overrideboardthickness */ 
            );
            /**Returns  the board thickness when the thickness is overriden. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BoardThickness
            (
            );
            /**Returns  the flag indicating whether to only use existing components. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool OnlyUseExistingComponents
            (
            );
            /**Sets  the flag indicating whether to only use existing components. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetOnlyUseExistingComponents
            (
                bool onlyUseExistingComponents /** onlyuseexistingcomponents */ 
            );
            /**Returns  the flag indicating whether to show the log. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowLog
            (
            );
            /**Sets  the flag indicating whether to show the log. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetShowLog
            (
                bool showLog /** showlog */ 
            );
            /** Compares the assemblies. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void Compare
            (
            );
            /** Sets the update option flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetUpdateOption
            (
                const NXString & resDef /** resdef */ ,
                bool status /** status */ 
            );
            /** Sets the update option flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetUpdateOption
            (
                const char * resDef /** resdef */ ,
                bool status /** status */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
