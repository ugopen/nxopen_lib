#ifndef NXOpen_CAM_ASSISTEDDEBUGMANAGER_HXX_INCLUDED
#define NXOpen_CAM_ASSISTEDDEBUGMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_AssistedDebugManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_AssistedDebugBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class AssistedDebugManager;
    }
    class Session;
    namespace CAM
    {
        class AssistedDebugBuilder;
    }
    namespace CAM
    {
        class AssistedDebugManagerImpl;

        /// \cond NX_NO_DOC 
        /** Represents Assisted Debug Manager <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENDEBUGSESSIONCPPEXPORT  AssistedDebugManager
        {
            private: AssistedDebugManagerImpl * m_assisteddebugmanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit AssistedDebugManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static AssistedDebugManager* theAssistedDebugManager;
            /** Returns the AssistedDebugManager object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static AssistedDebugManager* GetAssistedDebugManager(NXOpen::Session *owner);
            public: ~AssistedDebugManager();

            /// \cond NX_NO_DOC 
            /** Creates a @link NXOpen::CAM::AssistedDebugBuilder NXOpen::CAM::AssistedDebugBuilder@endlink  object  @return  The new assisted debug builder 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::AssistedDebugBuilder * CreateAssistedDebugBuilder
            (
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
