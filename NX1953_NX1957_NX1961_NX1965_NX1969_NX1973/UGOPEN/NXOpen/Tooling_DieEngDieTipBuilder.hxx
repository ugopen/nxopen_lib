#ifndef NXOpen_TOOLING_DIEENGDIETIPBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_DIEENGDIETIPBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_DieEngDieTipBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class DieEngDieTipBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class Point;
    class SelectBody;
    class SelectNXObject;
    class SelectNXObjectList;
    namespace Tooling
    {
        class _DieEngDieTipBuilderBuilder;
        class DieEngDieTipBuilderImpl;
        /** Die Engineer die tip management builder. <br> To create a new instance of this class, use @link NXOpen::Tooling::AutoDieCollection::CreateDieEngDieTipBuilder  NXOpen::Tooling::AutoDieCollection::CreateDieEngDieTipBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        ChangeTipOrientations </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        ChangeTipOrigin </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        GenerateOutline </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        InheritTip </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        Thickness </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ThicknessType </term> <description> 
         
        Uniform </description> </item> 

        <item><term> 
         
        WithoutWorkflow </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  DieEngDieTipBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** the material thickness type */
            public: enum MaterialThicknessType
            {
                MaterialThicknessTypeUniform/** uniform */ ,
                MaterialThicknessTypeVariable/** variable */ 
            };

            private: DieEngDieTipBuilderImpl * m_dieengdietipbuilder_impl;
            private: friend class  _DieEngDieTipBuilderBuilder;
            protected: DieEngDieTipBuilder();
            public: ~DieEngDieTipBuilder();
            /**Returns  the stamping operation 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: NXOpen::SelectNXObject * StampingOperation
            (
            );
            /**Returns  the die tip product sheet body 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: NXOpen::SelectBody * Product
            (
            );
            /**Returns  the origin point
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: NXOpen::Point * Origin
            (
            );
            /**Sets  the origin point
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetOrigin
            (
                NXOpen::Point * origin /** origin */ 
            );
            /**Returns  the reference data 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: NXOpen::SelectNXObjectList * ReferenceData
            (
            );
            /**Returns  the thickness type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: NXOpen::Tooling::DieEngDieTipBuilder::MaterialThicknessType ThicknessType
            (
            );
            /**Sets  the thickness type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetThicknessType
            (
                NXOpen::Tooling::DieEngDieTipBuilder::MaterialThicknessType thicknessType /** thicknesstype */ 
            );
            /**Returns  the material thickness 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: double Thickness
            (
            );
            /**Sets  the material thickness 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetThickness
            (
                double thickness /** thickness */ 
            );
            /** Callback of object properties button 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void ObjectProperties
            (
            );
            /** Callback of button more details 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void MoreDetails
            (
            );
            /**Returns  the change tip origin 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: bool ChangeTipOrigin
            (
            );
            /**Sets  the change tip origin 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetChangeTipOrigin
            (
                bool changeTipOrigin /** changetiporigin */ 
            );
            /**Returns  the generate outline toggle option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: bool GenerateOutline
            (
            );
            /**Sets  the generate outline toggle option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetGenerateOutline
            (
                bool generateOutline /** generateoutline */ 
            );
            /**Returns  the change tip orientations toggle option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: bool ChangeTipOrientations
            (
            );
            /**Sets  the change tip orientations toggle option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetChangeTipOrientations
            (
                bool changeTipOrientations /** changetiporientations */ 
            );
            /**Returns  the inherit tip toggle option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: bool InheritTip
            (
            );
            /**Sets  the inherit tip toggle option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetInheritTip
            (
                bool inheritTip /** inherittip */ 
            );
            /**Returns  the without workflow toggle option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: bool WithoutWorkflow
            (
            );
            /**Sets  the without workflow toggle option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetWithoutWorkflow
            (
                bool withoutWorkflow /** withoutworkflow */ 
            );
            /**Returns  the synchroous origin toggle option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: int SyncOrigin
            (
            );
            /**Sets  the synchroous origin toggle option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetSyncOrigin
            (
                int syncOrigin /** syncorigin */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
