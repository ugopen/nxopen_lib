#ifndef NXOpen_CAM_HOLEDRILLINGBUILDER_HXX_INCLUDED
#define NXOpen_CAM_HOLEDRILLINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_HoleDrillingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_HoleDrillingCutParameters.hxx>
#include <NXOpen/CAM_HoleMachiningBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class HoleDrillingBuilder;
    }
    namespace CAM
    {
        class HoleDrillingCutParameters;
    }
    namespace CAM
    {
        class HoleMachiningBuilder;
    }
    namespace CAM
    {
        class InheritableToolDepBuilder;
    }
    namespace CAM
    {
        class _HoleDrillingBuilderBuilder;
        class HoleDrillingBuilderImpl;
        /** Represents a HoleDrillingBuilder Builder  <br> To create a new instance of this class, use @link NXOpen::CAM::OperationCollection::CreateHoleDrillingBuilder  NXOpen::CAM::OperationCollection::CreateHoleDrillingBuilder @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  HoleDrillingBuilder : public NXOpen::CAM::HoleMachiningBuilder
        {
            /** Available types for canned retract output mode */
            public: enum RetractOutputModeType
            {
                RetractOutputModeTypeClearanceOnly/** canned retract to clearance only */,
                RetractOutputModeTypeClearanceInitial/** canned retract to clearance and initial level */,
                RetractOutputModeTypeAlways/** canned retract always */
            };

            /** Available types for control point offset */
            public: enum ControlPointOffsetType
            {
                ControlPointOffsetTypeNone/** in process feature Z position */,
                ControlPointOffsetTypeFeature/** machining feature Z position */
            };

            /** Available types for intersection strategy */
            public: enum IntersectionStrategyType
            {
                IntersectionStrategyTypeNone/** don't calculate intersections */,
                IntersectionStrategyTypePart/** get intersection from part model */,
                IntersectionStrategyTypeIpw/** get intersection from ipw (look at previously machined in-process features */,
                IntersectionStrategyTypeIpwAndPart/** get intersection from part and ipw */
            };

            private: HoleDrillingBuilderImpl * m_holedrillingbuilder_impl;
            private: friend class  _HoleDrillingBuilderBuilder;
            protected: HoleDrillingBuilder();
            public: ~HoleDrillingBuilder();
            /**Returns  the Hole Drilling Cut Parameters 
             <br>  @deprecated Deprecated in NX9.0.3.  Use @link CAM::HoleMachiningBuilder::CuttingParameters CAM::HoleMachiningBuilder::CuttingParameters@endlink  instead. <br>  

             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX9.0.3.  Use CAM::HoleMachiningBuilder::CuttingParameters instead.") NXOpen::CAM::HoleDrillingCutParameters * CutParameters
            (
            );
            /**Returns  the canned rettract output   
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::HoleDrillingBuilder::RetractOutputModeType RetractOutputMode
            (
            );
            /**Sets  the canned rettract output   
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetRetractOutputMode
            (
                NXOpen::CAM::HoleDrillingBuilder::RetractOutputModeType currentValue /** currentvalue */ 
            );
            /**Returns  the ignore tool tip flag
             <br>  @deprecated Deprecated in NX10.0.3.  Use CAM.HoleDrillingBuilder.GetToolDrivePoint instead. <br>  

             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX10.0.3.  Use CAM.HoleDrillingBuilder.GetToolDrivePoint instead.") bool IgnoreToolTip
            (
            );
            /**Sets  the ignore tool tip flag
             <br>  @deprecated Deprecated in NX10.0.3.  Use CAM.HoleDrillingBuilder.SetToolDrivePoint instead. <br>  

             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NX_DEPRECATED("Deprecated in NX10.0.3.  Use CAM.HoleDrillingBuilder.SetToolDrivePoint instead.") void SetIgnoreToolTip
            (
                bool flag /**  the ignore tool tip flag */
            );
            /**Returns  the control point offset type  
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::HoleDrillingBuilder::ControlPointOffsetType ControlPointOffset
            (
            );
            /**Sets  the control point offset type  
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetControlPointOffset
            (
                NXOpen::CAM::HoleDrillingBuilder::ControlPointOffsetType currentValue /** currentvalue */ 
            );
            /**Returns  the control point offset type  
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::HoleDrillingBuilder::IntersectionStrategyType IntersectionStrategy
            (
            );
            /**Sets  the control point offset type  
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetIntersectionStrategy
            (
                NXOpen::CAM::HoleDrillingBuilder::IntersectionStrategyType currentValue /** currentvalue */ 
            );
            /** Get the name of the tool drive point 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : None */
            public: NXString GetToolDrivePoint
            (
            );
            /** Set the name of the tool drive point 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetToolDrivePoint
            (
                const NXString & toolDrivePoint /** tooldrivepoint */ 
            );
            /** Set the name of the tool drive point 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetToolDrivePoint
            (
                const char * toolDrivePoint /** tooldrivepoint */ 
            );
            /**Returns  the crossover distance 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableToolDepBuilder * CrossOverDistance
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
