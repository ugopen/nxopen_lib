#ifndef NXOpen_DISPLAY_PRIMTESTBUILDER_HXX_INCLUDED
#define NXOpen_DISPLAY_PRIMTESTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_PrimTestBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class PrimTestBuilder;
    }
    class Builder;
    class Point;
    class SelectNXObjectList;
    namespace Display
    {
        class _PrimTestBuilderBuilder;
        class PrimTestBuilderImpl;

        /// \cond NX_NO_DOC 
        /** Supports debug dialog UGS::DebugUI::UICompPrimTest which is used to
                test DSS primitive functionality.  <br> To create a new instance of this class, use @link NXOpen::VisualizationDebugSession::CreatePrimTestBuilder  NXOpen::VisualizationDebugSession::CreatePrimTestBuilder @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENDEBUGSESSIONCPPEXPORT  PrimTestBuilder : public NXOpen::Builder
        {
            private: PrimTestBuilderImpl * m_primtestbuilder_impl;
            private: friend class  _PrimTestBuilderBuilder;
            protected: PrimTestBuilder();
            public: ~PrimTestBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the Closed Region flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool ClosedRegion
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the Closed Region flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetClosedRegion
            (
                bool closedRegion /** closedregion */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the enable body flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableBody
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the enable body flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableBody
            (
                bool enableBody /** enablebody */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the enable curve flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableCurve
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the enable curve flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableCurve
            (
                bool enableCurve /** enablecurve */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the enable edge flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableEdge
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the enable edge flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableEdge
            (
                bool enableEdge /** enableedge */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the enable face flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableFace
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the enable face flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableFace
            (
                bool enableFace /** enableface */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the enable surface flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableSurface
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the enable surface flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableSurface
            (
                bool enableSurface /** enablesurface */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the enable vertex flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableVertex
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the enable vertex flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableVertex
            (
                bool enableVertex /** enablevertex */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the translucency value. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int Translucency
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the translucency value. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTranslucency
            (
                int translucency /** translucency */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the use list flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool UseList
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the use list flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetUseList
            (
                bool useList /** uselist */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the enable Indexed TriSet flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableIndexedTriSet
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the enable Indexed TriSet flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableIndexedTriSet
            (
                bool enableIndexedTriSet /** enableindexedtriset */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the enable Indexed TriStripSet flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableIndexedTriStripSet
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the enable Indexed TriStripSet flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableIndexedTriStripSet
            (
                bool enableIndexedTriStripSet /** enableindexedtristripset */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the enable Indexed PolylineSet flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableIndexedPolylineSet
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the enable Indexed PolylineSet flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableIndexedPolylineSet
            (
                bool enableIndexedPolylineSet /** enableindexedpolylineset */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the enable solid filled TriSet flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableSolidFilledTriSet
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the enable solid filled TriSet flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableSolidFilledTriSet
            (
                bool enableSolidFilledTriSet /** enablesolidfilledtriset */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the enable solid filled TriStripSet flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableSolidFilledTriStripSet
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the enable solid filled TriStripSet flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableSolidFilledTriStripSet
            (
                bool enableSolidFilledTriStripSet /** enablesolidfilledtristripset */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the enable SimpleCone flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableSimpleCone
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the enable SimpleCone flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableSimpleCone
            (
                bool enableSimpleCone /** enablesimplecone */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the enable SimpleSphere flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableSimpleSphere
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the enable SimpleSphere flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableSimpleSphere
            (
                bool enableSimpleSphere /** enablesimplesphere */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the enable Markup flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableMarkup
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the enable Markup flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableMarkup
            (
                bool enableMarkup /** enablemarkup */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the Filled Markup flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool FilledMarkup
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the Filled Markup flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFilledMarkup
            (
                bool filledMarkup /** filledmarkup */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the Fixed Size Markup flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool FixedSizeMarkup
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the Fixed Size Markup flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFixedSizeMarkup
            (
                bool fixedSizeMarkup /** fixedsizemarkup */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the flat-to-screen Markup flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool FlatToScreenMarkup
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the flat-to-screen Markup flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFlatToScreenMarkup
            (
                bool flatToScreenMarkup /** flattoscreenmarkup */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the markup type attribute. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int MarkupType
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the markup type attribute. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMarkupType
            (
                int markupType /** markuptype */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the markup origin tag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * MarkupOrigin
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the markup origin tag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMarkupOrigin
            (
                NXOpen::Point * originPt /** originpt */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the ndc markup flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool NdcMarkup
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the ndc markup flag. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetNdcMarkup
            (
                bool ndcMarkup /** ndcmarkup */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the select solid bodies list. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * SelectSolids
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Deletes graphics. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void DeleteGraphics
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Draws primitives. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void DrawPrimitives
            (
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
