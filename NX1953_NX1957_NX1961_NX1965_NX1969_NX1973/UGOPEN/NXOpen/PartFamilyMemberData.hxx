#ifndef NXOpen_PARTFAMILYMEMBERDATA_HXX_INCLUDED
#define NXOpen_PARTFAMILYMEMBERDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PartFamilyMemberData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/PartFamilyMemberValues.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class PartFamilyMemberData;
    class PartFamilyMemberValues;
    class PartFamilyMemberDataImpl;
    /** This class is responsible for storing part family member data 
        Use the method @link NXOpen::Part::NewPartFamilyMemberData NXOpen::Part::NewPartFamilyMemberData@endlink 
        to create new instance of this class. 
     <br>  @deprecated Deprecated in NX9.0.0.  Use @link NXOpen::PartFamily::InstanceDefinition NXOpen::PartFamily::InstanceDefinition@endlink  and @link NXOpen::PartFamily::TemplateManager NXOpen::PartFamily::TemplateManager@endlink  instead. <br>  

     <br>  Created in NX6.0.0.  <br>  
    */
    class NX_DEPRECATED("Deprecated in NX9.0.0.  Use NXOpen::PartFamily::InstanceDefinition and NXOpen::PartFamily::TemplateManager instead.") NXOPENCPPEXPORT  PartFamilyMemberData : public NXOpen::TransientObject
    {
        private: PartFamilyMemberDataImpl * m_partfamilymemberdata_impl;
        /// \cond NX_NO_DOC 
        public: explicit PartFamilyMemberData(void *ptr);
        /// \endcond 
        /** Free resources associated with the instance. After this method
            is called, it is illegal to use the object.  In .NET, this method
            is automatically called when the object is deleted by the garbage
            collector. 
         <br>  @deprecated Deprecated in NX9.0.0.  PartFamilyMemberData object is deprecated, so dispose of this object is not needed <br>  

         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NX_DEPRECATED("Deprecated in NX9.0.0.  PartFamilyMemberData object is deprecated, so dispose of this object is not needed") virtual ~PartFamilyMemberData();
        /** Set the part family member data 
         <br>  @deprecated Deprecated in NX9.0.0.  Use @link NXOpen::PartFamily::TemplateManager::AddInstanceDefinition NXOpen::PartFamily::TemplateManager::AddInstanceDefinition@endlink  and @link NXOpen::PartFamily::InstanceDefinition::SetValueOfAttribute NXOpen::PartFamily::InstanceDefinition::SetValueOfAttribute@endlink  instead <br>  

         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NX_DEPRECATED("Deprecated in NX9.0.0.  Use NXOpen::PartFamily::TemplateManager::AddInstanceDefinition and NXOpen::PartFamily::InstanceDefinition::SetValueOfAttribute instead") void SetMemberData
        (
            const std::vector<NXOpen::PartFamilyMemberValues *> & memberData /** array of attribute values corresponding to each member */
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
