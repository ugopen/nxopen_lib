#ifndef NXOpen_FEATURES_SHIPDESIGN_CUTOUT2BUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_CUTOUT2BUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_Cutout2Builder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_ShipDesign_ManufacturingStockBuilder.hxx>
#include <NXOpen/Features_ShipDesign_PointDimBuilder.hxx>
#include <NXOpen/Features_ShipDesign_SteelFeatureSpreadsheetBuilder.hxx>
#include <NXOpen/GeometricUtilities_ProjectionOptions.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class Cutout2Builder;
        }
    }
    class CoordinateSystem;
    class Direction;
    class Expression;
    class ExpressionCollectorSetList;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class ManufacturingStockBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class PointDimBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class PointDimBuilderList;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class SteelFeatureSpreadsheetBuilder;
        }
    }
    namespace GeometricUtilities
    {
        class ProjectionOptions;
    }
    class Section;
    class SelectNXObject;
    class SelectNXObjectList;
    namespace Features
    {
        namespace ShipDesign
        {
            class _Cutout2BuilderBuilder;
            class Cutout2BuilderImpl;
            /**
                Represents a @link NXOpen::Features::ShipDesign::Cutout2 NXOpen::Features::ShipDesign::Cutout2@endlink  builder
                 <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateCutout2Builder  NXOpen::Features::ShipCollection::CreateCutout2Builder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            AngularDimension.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            PlacementType </term> <description> 
             
            Face2Lines </description> </item> 

            <item><term> 
             
            ReferenceOffset1.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            ReferenceOffset2.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            ReferenceOffset3.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            </list> 

             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  Cutout2Builder : public NXOpen::Features::FeatureBuilder
            {
                /** available methods used to place a cutout object
                            */
                public: enum CreationMethod
                {
                    CreationMethodFace2Lines/** 1 face and 2 lines, edges, or datums are used to place this cutout */,
                    CreationMethodSpecifyCSYS/** a csys is used to place this cutout */,
                    CreationMethodFaces2Surfaces/** 1 face and 2 surfaces are used to place this cutout */,
                    CreationMethodFacesBetweenSurfacesSurface/** 1 face and 3 surfaces are used to place this cutout */,
                    CreationMethodFacesCentered/** 1 face is used to place this cutout */,
                    CreationMethodCustomShape/** Custom curves are extruded to define the cut shape. */,
                    CreationMethodBoundingObjects/** Cutout geometry is defined by bounding objects. */,
                    CreationMethodCenteredBoundingObjects/** Cutout geometry is defined by bounding objects centered. */
                };

                private: Cutout2BuilderImpl * m_cutout2builder_impl;
                private: friend class  _Cutout2BuilderBuilder;
                protected: Cutout2Builder();
                public: ~Cutout2Builder();
                /**Returns  the placement type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::Cutout2Builder::CreationMethod PlacementType
                (
                );
                /**Sets  the placement type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetPlacementType
                (
                    NXOpen::Features::ShipDesign::Cutout2Builder::CreationMethod placementType /** placementtype */ 
                );
                /**Returns  the select target face 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObject * SelectTargetFace
                (
                );
                /**Returns  the select line1 (replaced by SelectReference1 in NX8.5) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObject * SelectLine1
                (
                );
                /**Returns  the select line2 (replaced by SelectReference2 in NX8.5) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObject * SelectLine2
                (
                );
                /**Returns  the coord system (only used for: SpecifyCSYS) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CoordinateSystem * CoordSystem
                (
                );
                /**Sets  the coord system (only used for: SpecifyCSYS) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetCoordSystem
                (
                    NXOpen::CoordinateSystem * coordSystem /** coordsystem */ 
                );
                /**Returns  the select csysface (only used for: SpecifyCSYS) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObject * SelectCSYSFace
                (
                );
                /**Returns  the target faces (used only for: Faces2Surfaces, FacesBetweenSurfacesSurface, and FacesCentered) 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObjectList * SelectTargetFaces
                (
                );
                /**Returns  the reference1 (used only for Face2Lines, Faces2Surfaces, and FacesBetweenSurfacesSurface) 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObject * SelectReference1
                (
                );
                /**Returns  the reference2 (used only for Face2Lines, Faces2Surfaces, and FacesBetweenSurfacesSurface) 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObject * SelectReference2
                (
                );
                /**Returns  the reference3  (used only for FacesBetweenSurfacesSurface)  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObject * SelectReference3
                (
                );
                /**Returns  the linear offset1 (replaced by ReferenceOffset1 in NX8.5) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * LinearOffset1
                (
                );
                /**Returns  the reference offset1 (used only for Face2Lines, and Faces2Surfaces ) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ReferenceOffset1
                (
                );
                /**Returns  the reverse direction1 (used only for Face2Lines, and Faces2Surfaces ) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseDirection1
                (
                );
                /**Sets  the reverse direction1 (used only for Face2Lines, and Faces2Surfaces ) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetReverseDirection1
                (
                    bool reverseDirection1 /** reversedirection1 */ 
                );
                /**Returns  the linear offset2 (replaced by ReferenceOffset2 in NX8.5) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * LinearOffset2
                (
                );
                /**Returns  the reference offset2 (used only for Face2Lines, and Faces2Surfaces) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ReferenceOffset2
                (
                );
                /**Returns  the reverse direction2 (used only for Face2Lines, and Faces2Surfaces) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseDirection2
                (
                );
                /**Sets  the reverse direction2 (used only for Face2Lines, and Faces2Surfaces) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetReverseDirection2
                (
                    bool reverseDirection2 /** reversedirection2 */ 
                );
                /**Returns  the reference offset3 (used only for FacesBetweenSurfacesSurface) 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ReferenceOffset3
                (
                );
                /**Returns  the reverse direction3 (used only for FacesBetweenSurfacesSurface) 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseDirection3
                (
                );
                /**Sets  the reverse direction3 (used only for FacesBetweenSurfacesSurface) 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetReverseDirection3
                (
                    bool reverseDirection3 /** reversedirection3 */ 
                );
                /**Returns  the horizontal reference (optional, used only for Faces2Surfaces, FacesBetweenSurfacesSurface, and FacesCentered) 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * HorizontalReference
                (
                );
                /**Sets  the horizontal reference (optional, used only for Faces2Surfaces, FacesBetweenSurfacesSurface, and FacesCentered) 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetHorizontalReference
                (
                    NXOpen::Direction * horizontalReference /** horizontalreference */ 
                );
                /**Returns  the angular dimension (used only for Face2Lines, Faces2Surfaces, FacesBetweenSurfacesSurface, FacesCentered) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AngularDimension
                (
                );
                /**Returns  the sketch block.
                             <br> 
                            Users can specify the Cutout using a single sketch. The sketch type and its parameters
                            are controlled by the @link NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder@endlink .
                             <br> 
                        
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder * SketchBlock
                (
                );
                /**Returns  the manufacturing stock builder that holds the manufacturing data. 
                 <br>  Created in NX8.5.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ManufacturingStockBuilder * ManufacturingInformation
                (
                );
                /**Returns  the section of curves defining the custom shape cut 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Section * CustomShape
                (
                );
                /**Returns  the direction used to project the custom shape curves 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::GeometricUtilities::ProjectionOptions * ProjectionDirection
                (
                );
                /**Returns  the face, plane boundary, which defines a list of bounding objects objects with offset values. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ExpressionCollectorSetList * FacePlaneBoundaryList
                (
                );
                /**Returns  the default radius for corners of a boundary cutout 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * DefaultCornerRadius
                (
                );
                /**Returns  the list of objects that each define a custom blend radius at the nearest corner of a boundary type cutout. Only used when PlacementType is Features.ShipDesign.Cutout2Builder.CreationMethodBoundingObjects. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PointDimBuilderList * CornerRadiusList
                (
                );
                /** Creates an empty NXOpen.Features.ShipDesign.PointDimBuilder 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: NXOpen::Features::ShipDesign::PointDimBuilder * CreateEmptyPointDimBuilder
                (
                );
                /** Creates a NXOpen.Features.ShipDesign.PointDimBuilder with the given expression and index.  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: NXOpen::Features::ShipDesign::PointDimBuilder * CreatePointDimBuilder
                (
                    NXOpen::Expression * dimension /** dimension */ ,
                    int index /** index */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
