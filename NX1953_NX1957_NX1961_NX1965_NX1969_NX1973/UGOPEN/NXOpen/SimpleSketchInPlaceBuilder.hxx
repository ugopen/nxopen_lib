#ifndef NXOpen_SIMPLESKETCHINPLACEBUILDER_HXX_INCLUDED
#define NXOpen_SIMPLESKETCHINPLACEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SimpleSketchInPlaceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class SimpleSketchInPlaceBuilder;
    class Builder;
    class CartesianCoordinateSystem;
    class Point;
    class _SimpleSketchInPlaceBuilderBuilder;
    class SimpleSketchInPlaceBuilderImpl;
    /** Use the @link NXOpen::SimpleSketchInPlaceBuilder NXOpen::SimpleSketchInPlaceBuilder@endlink  to create a @link NXOpen::Sketch NXOpen::Sketch@endlink  on a @link NXOpen::DatumPlane NXOpen::DatumPlane@endlink  or planar @link NXOpen::Face NXOpen::Face@endlink .  <br> To create a new instance of this class, use @link NXOpen::SketchCollection::CreateSimpleSketchInPlaceBuilder  NXOpen::SketchCollection::CreateSimpleSketchInPlaceBuilder @endlink  <br> 
    Default values.
    <list type="table"> 
     
    <listheader><term> 
    Property</term>  <description> 
    Value</description> </listheader>
    <item><term> 
     
    UseWorkPartOrigin </term> <description> 
     
    0 </description> </item> 

    </list> 

     <br>  Created in NX1953.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  SimpleSketchInPlaceBuilder : public NXOpen::Builder
    {
        private: SimpleSketchInPlaceBuilderImpl * m_simplesketchinplacebuilder_impl;
        private: friend class  _SimpleSketchInPlaceBuilderBuilder;
        protected: SimpleSketchInPlaceBuilder();
        public: ~SimpleSketchInPlaceBuilder();
        /**Returns  the use work part origin 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : None */
        public: bool UseWorkPartOrigin
        (
        );
        /**Sets  the use work part origin 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : None */
        public: void SetUseWorkPartOrigin
        (
            bool useWorkPartOrigin /** useworkpartorigin */ 
        );
        /**Returns  the coordinate system method for sketch 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::CartesianCoordinateSystem * CoordinateSystem
        (
        );
        /**Sets  the coordinate system method for sketch 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR geometric_tol ("GDT") */
        public: void SetCoordinateSystem
        (
            NXOpen::CartesianCoordinateSystem * csystem /** csystem */ 
        );
        /** Flip the sketch plane normal.
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR geometric_tol ("GDT") */
        public: void FlipSketchPlaneNormal
        (
        );
        /**Returns  the origin point for sketch 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Point * SketchOrigin
        (
        );
        /**Sets  the origin point for sketch 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR geometric_tol ("GDT") */
        public: void SetSketchOrigin
        (
            NXOpen::Point * origin /** origin */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
