#ifndef NXOpen_CAE_AEROSTRUCTURES_TRIMVARIABLESMANAGER_HXX_INCLUDED
#define NXOpen_CAE_AEROSTRUCTURES_TRIMVARIABLESMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AeroStructures_TrimVariablesManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace AeroStructures
        {
            class TrimVariablesManager;
        }
    }
    class Session;
    class TaggedObject;
    namespace CAE
    {
        namespace AeroStructures
        {
            class TrimVariablesManagerImpl;
            /** Represents a @link NXOpen::CAE::AeroStructures::TrimVariablesManager NXOpen::CAE::AeroStructures::TrimVariablesManager@endlink  object.  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
             <br>  Created in NX1926.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  TrimVariablesManager
            {
                private: TrimVariablesManagerImpl * m_trimvariablesmanager_impl;
                private: NXOpen::Session* m_owner;
                /// \cond NX_NO_DOC 
                public: explicit TrimVariablesManager(NXOpen::Session *owner);


                /// \endcond 
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                private: static TrimVariablesManager* theTrimVariablesManager;
                /** Returns the TrimVariablesManager object for the running session which serves as the 'gateway' class for the application API.  
                    References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                    Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
                */
                public: static TrimVariablesManager* GetTrimVariablesManager(NXOpen::Session *owner);
                public: ~TrimVariablesManager();
                /**
                            Ensure that solution variable definitions and subcase constraints are consistent.
                            - The solution AESTAT modeling object is created if missing.
                            - TRIM objects are required for all subcases. They are created if missing.
                            - Subcases cannot share TRIM objects. Shared TRIM objects are cloned.
                            - Subcases cannot share AELINK objects. Shared AELINK objects are cloned.
                            - Unique variable names. Standard, user and control surface variable names must be unique.
                                Duplicated AESTAT standard, user or Control surface variables are removed.
                            - One constraint per variable. If multiple contraints are defined for one variable,
                                only the first one is kept, the others are removed.
                            - Constraints can be defined only for variables that are selected in AESTAT or for
                                existing control surfaces. TRIM properties and AELINK objects defined for standard
                                or user variables that are not selected in the solution AESTAT will be removed.
                            - In linked variables the dependent variable cannot be used as an independent variable
                                (the coefficient is removed).                
                             
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void EnsureVariablesConsistency
                (
                    NXOpen::TaggedObject * solution /** solution */ 
                );
                /** Set the value of a numeric property of a subcase 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetTrimPropertyValue
                (
                    NXOpen::TaggedObject * subcase /** subcase */ ,
                    const NXString & propertyName /** propertyname */ ,
                    const NXString & expressionStr /** expressionstr */ ,
                    NXOpen::TaggedObject * unitType /** unittype */ 
                );
                /** Set the value of a numeric property of a subcase 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                void SetTrimPropertyValue
                (
                    NXOpen::TaggedObject * subcase /** subcase */ ,
                    const char * propertyName /** propertyname */ ,
                    const char * expressionStr /** expressionstr */ ,
                    NXOpen::TaggedObject * unitType /** unittype */ 
                );
                /** Add a variable definition to the solution aestat 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void AddVariable
                (
                    NXOpen::TaggedObject * solution /** solution */ ,
                    int variableType /** variabletype */ ,
                    const NXString & variableName /** variablename */ ,
                    const NXString & variableUIName /** variableuiname */ 
                );
                /** Add a variable definition to the solution aestat 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                void AddVariable
                (
                    NXOpen::TaggedObject * solution /** solution */ ,
                    int variableType /** variabletype */ ,
                    const char * variableName /** variablename */ ,
                    const char * variableUIName /** variableuiname */ 
                );
                /** Delete the variable definition from the solution aestat or control surfaces container
                                and remove all the trim or aelink constraints that reference it 
                            
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void DeleteVariable
                (
                    NXOpen::TaggedObject * solution /** solution */ ,
                    const NXString & variableName /** variablename */ 
                );
                /** Delete the variable definition from the solution aestat or control surfaces container
                                and remove all the trim or aelink constraints that reference it 
                            
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                void DeleteVariable
                (
                    NXOpen::TaggedObject * solution /** solution */ ,
                    const char * variableName /** variablename */ 
                );
                /** Set the magnitude of the variable fixed constraint for a subcase. 
                            If the subcase already has a fixed or linked constraint defined for that
                            variable, it is first removed. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetFixedVariableConstraint
                (
                    NXOpen::TaggedObject * solution /** solution */ ,
                    NXOpen::TaggedObject * subcase /** subcase */ ,
                    const NXString & variableName /** variablename */ ,
                    const NXString & expressionStr /** expressionstr */ ,
                    NXOpen::TaggedObject * unitType /** unittype */ 
                );
                /** Set the magnitude of the variable fixed constraint for a subcase. 
                            If the subcase already has a fixed or linked constraint defined for that
                            variable, it is first removed. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                void SetFixedVariableConstraint
                (
                    NXOpen::TaggedObject * solution /** solution */ ,
                    NXOpen::TaggedObject * subcase /** subcase */ ,
                    const char * variableName /** variablename */ ,
                    const char * expressionStr /** expressionstr */ ,
                    NXOpen::TaggedObject * unitType /** unittype */ 
                );
                /** Create a linked modeling object, select the dependent variable and 
                             set the coefficients of the independent variables and finally add the
                             created linked ssmo to the list of linked objects of the subcase.
                             If the subcase already has a fixed or linked constraint defined for that
                             variable, it is first removed. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::TaggedObject * SetLinkedVariableConstraint
                (
                    NXOpen::TaggedObject * solution /** solution */ ,
                    NXOpen::TaggedObject * subcase /** subcase */ ,
                    const NXString & variableName /** variablename */ ,
                    std::vector<NXString> & independentVariables /** independentvariables */ ,
                    const std::vector<double> & independentVariableCoefficients /** independentvariablecoefficients */ 
                );
                /** Create a linked modeling object, select the dependent variable and 
                             set the coefficients of the independent variables and finally add the
                             created linked ssmo to the list of linked objects of the subcase.
                             If the subcase already has a fixed or linked constraint defined for that
                             variable, it is first removed. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::TaggedObject * SetLinkedVariableConstraint
                (
                    NXOpen::TaggedObject * solution /** solution */ ,
                    NXOpen::TaggedObject * subcase /** subcase */ ,
                    const char * variableName /** variablename */ ,
                    std::vector<NXString> & independentVariables /** independentvariables */ ,
                    const std::vector<double> & independentVariableCoefficients /** independentvariablecoefficients */ 
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
