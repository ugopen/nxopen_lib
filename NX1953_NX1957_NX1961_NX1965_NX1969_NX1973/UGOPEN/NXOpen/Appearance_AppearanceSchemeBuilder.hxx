#ifndef NXOpen_APPEARANCE_APPEARANCESCHEMEBUILDER_HXX_INCLUDED
#define NXOpen_APPEARANCE_APPEARANCESCHEMEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Appearance_AppearanceSchemeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Appearance_Area.hxx>
#include <NXOpen/Appearance_Scheme.hxx>
#include <NXOpen/ErrorList.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_appearance_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Appearance
    {
        class AppearanceSchemeBuilder;
    }
    namespace Appearance
    {
        class Area;
    }
    namespace Appearance
    {
        class Scheme;
    }
    class Builder;
    class ErrorList;
    namespace Appearance
    {
        class _AppearanceSchemeBuilderBuilder;
        class AppearanceSchemeBuilderImpl;
        /** Represents a builder class that creates the new Appearance Scheme
             <br> To create a new instance of this class, use @link NXOpen::Appearance::AppearanceManager::CreateAppearanceSchemeBuilder  NXOpen::Appearance::AppearanceManager::CreateAppearanceSchemeBuilder @endlink  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_APPEARANCEEXPORT  AppearanceSchemeBuilder : public NXOpen::Builder
        {
            /** This enum is used to specify the action for appearance scheme. */
            public: enum Action
            {
                ActionNew/** new */ ,
                ActionCopy/** copy */ ,
                ActionRename/** rename */ 
            };

            private: AppearanceSchemeBuilderImpl * m_appearanceschemebuilder_impl;
            private: friend class  _AppearanceSchemeBuilderBuilder;
            protected: AppearanceSchemeBuilder();
            public: ~AppearanceSchemeBuilder();
            /** This function sets new name on the Appearance Scheme.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: void SetSchemeName
            (
                const NXString & schemeName /** schemename */ 
            );
            /** This function sets new name on the Appearance Scheme.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            void SetSchemeName
            (
                const char * schemeName /** schemename */ 
            );
            /** This function sets the user action (from the enum JA_APPEARANCE_SCHEME_BUILDER_Action) to perform on the Appearance Scheme.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: void SetSchemeActionType
            (
                NXOpen::Appearance::AppearanceSchemeBuilder::Action actionType /** actiontype */ 
            );
            /** This function sets the Appearance Area on the Appearance Scheme.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: void SetAppearanceArea
            (
                NXOpen::Appearance::Area * appearanceArea /** appearancearea */ 
            );
            /** This function sets the Current Appearance Scheme, which is referred in Copy and Rename action.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: void SetCurrentAppearanceScheme
            (
                NXOpen::Appearance::Scheme * appearanceScheme /** appearancescheme */ 
            );
            /** This function returns the newly created Appearance Scheme if the operation is successful.
                        Otherwise it will return null.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: NXOpen::Appearance::Scheme * GetNewAppearanceScheme
            (
            );
            /** This function returns errors/warning list occurred during builder commit.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: NXOpen::ErrorList * GetErrorWarningList
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
