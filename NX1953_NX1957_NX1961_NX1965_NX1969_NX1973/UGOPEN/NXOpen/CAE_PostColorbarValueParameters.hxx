#ifndef NXOpen_CAE_POSTCOLORBARVALUEPARAMETERS_HXX_INCLUDED
#define NXOpen_CAE_POSTCOLORBARVALUEPARAMETERS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostColorbarValueParameters.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostColorbarValueParameters;
    }
    namespace CAE
    {
        class PostColorbarValueParametersImpl;
        /**  @brief  This class has the information related to post colorbar value control.
             

          <br> An instance of this class can not be created. To obtain the object use @link NXOpen::CAE::PostColorbar::GetValueParameters NXOpen::CAE::PostColorbar::GetValueParameters@endlink  method.  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostColorbarValueParameters : public NXOpen::TransientObject
        {
            /** Colorbar spacing scheme */
            public: enum Spacing
            {
                SpacingEquallySpaced/** equally spaced */ ,
                SpacingRoundOff/** round off */ ,
                SpacingLevelIncrement/** level increment */ 
            };

            /** Colorbar extremes */
            public: enum Extreme
            {
                ExtremeResult/** result */ ,
                ExtremeDisplayed/** displayed */ ,
                ExtremeSpecified/** specified */ ,
                ExtremeViewportResult/** viewport result */ ,
                ExtremeViewportDisplayed/** viewport displayed */ 
            };

            /** Colorbar scales */
            public: enum Scale
            {
                ScaleAutomatic/** automatic */ ,
                ScaleLinear/** linear */ ,
                ScaleLogarithmic/** logarithmic */ 
            };

            private: PostColorbarValueParametersImpl * m_postcolorbarvalueparameters_impl;
            /// \cond NX_NO_DOC 
            public: explicit PostColorbarValueParameters(void *ptr);
            /// \endcond 
            /** Gets the range spacing style for the colorbar.
                    This include eqally spaced, round off or level increment type of spacing in the colorbar scale.  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXOpen::CAE::PostColorbarValueParameters::Spacing GetSpacing
            (
            );
            /** Sets the range spacing style for the colorbar.
                    This include eqally spaced, round off or level increment type of spacing in the colorbar scale.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetSpacing
            (
                NXOpen::CAE::PostColorbarValueParameters::Spacing spacing /** spacing */ 
            );
            /** Gets the range extreme type for the colorbar.
                    This is the range minimum-maximum calculation value cariteria to draw colorbar scale  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXOpen::CAE::PostColorbarValueParameters::Extreme GetExtreme
            (
            );
            /** Sets the extreme type for the colorbar.
                    This is the range minimum-maximum calculation value cariteria to draw colorbar scale
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetExtreme
            (
                NXOpen::CAE::PostColorbarValueParameters::Extreme extreme /** extreme */ 
            );
            /** Gets the minimum value in the range of selected extreme for the colorbar  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: double GetExtremeMinimum
            (
            );
            /** Sets the minimum value in the range of selected extreme for the colorbar 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetExtremeMinimum
            (
                double minimum /** minimum */ 
            );
            /** Gets the maximum value in the range of selected extreme for the colorbar  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: double GetExtremeMaximum
            (
            );
            /** Sets the maximum value in the range of selected extreme for the colorbar 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetExtremeMaximum
            (
                double maximum /** maximum */ 
            );
            /** Gets the scale type for the colorbar, this includes automatic, logarithmic and linear.  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXOpen::CAE::PostColorbarValueParameters::Scale GetScale
            (
            );
            /** Sets the scale setting for the colorbar, this includes automatic, logarithmic and linear. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetScale
            (
                NXOpen::CAE::PostColorbarValueParameters::Scale scale /** scale */ 
            );
            /** Gets the number of levels for the given colorbar range  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: int GetNumLevels
            (
            );
            /** Sets the number of levels for the given colorbar range 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetNumLevels
            (
                int numlevels /** numlevels */ 
            );
            /** Gets the increment value per level for the colorbar range.
                    This is applicable for only spacing type Level Increment. @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: double GetIncrementPerLevel
            (
            );
            /** Sets the increment value per level for the colorbar range.
                    This is applicable for only spacing type Level Increment. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetIncrementPerLevel
            (
                double incrementperlevel /** incrementperlevel */ 
            );
            /** Asks the custom overwrite value setting for the colorbar.
                    This indicates whether custom color values has been applied to colorbar scale or not.  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: bool GetCustomOverwriteValue
            (
            );
            /** Sets the custom overwrite value setting for the colorbar.
                    This indicates whether custom color values has been applied to colorbar scale or not. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetCustomOverwriteValue
            (
                bool customoverwritevalue /** customoverwritevalue */ 
            );
            /** Asks the result value range for the colorbar.
                    This contains the values calculated in the range with given number of levels.  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: std::vector<double> GetValueRange
            (
            );
            /** Sets the value range for the colorbar. 
                    This contains the values calculated in the range with given number of levels.  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetValueRange
            (
                const std::vector<double> & valuerange /** valuerange */ 
            );
            /** Destroys the object 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~PostColorbarValueParameters();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
