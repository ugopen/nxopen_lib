#ifndef NXOpen_DRAWINGS_DETAILVIEWBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_DETAILVIEWBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_DetailViewBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_DraftingComponentSelectionBuilder.hxx>
#include <NXOpen/Drawings_HiddenObjectsBuilder.hxx>
#include <NXOpen/Drawings_ParentViewBuilder.hxx>
#include <NXOpen/Drawings_ViewPlacementBuilder.hxx>
#include <NXOpen/Drawings_ViewScaleBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_drawings_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drawings
    {
        class DetailViewBuilder;
    }
    class Builder;
    namespace Drawings
    {
        class DraftingComponentSelectionBuilder;
    }
    namespace Drawings
    {
        class HiddenObjectsBuilder;
    }
    namespace Drawings
    {
        class ParentViewBuilder;
    }
    namespace Drawings
    {
        class ViewPlacementBuilder;
    }
    namespace Drawings
    {
        class ViewScaleBuilder;
    }
    namespace Drawings
    {
        class ViewStyleBuilder;
    }
    class Point;
    namespace Drawings
    {
        class _DetailViewBuilderBuilder;
        class DetailViewBuilderImpl;
        /**
            Represents a @link NXOpen::Drawings::DetailView NXOpen::Drawings::DetailView@endlink .  This class is
            used to create and edit Detail Views
             <br> To create a new instance of this class, use @link NXOpen::Drawings::DraftingViewCollection::CreateDetailViewBuilder  NXOpen::Drawings::DraftingViewCollection::CreateDetailViewBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        Origin.AlignmentMethod </term> <description> 
         
        Infer </description> </item> 

        <item><term> 
         
        Origin.AlignmentOption </term> <description> 
         
        ToView </description> </item> 

        <item><term> 
         
        Scale.Denominator </term> <description> 
         
        1.0 </description> </item> 

        <item><term> 
         
        Scale.Numerator </term> <description> 
         
        1.0 </description> </item> 

        <item><term> 
         
        Scale.ScaleType </term> <description> 
         
        Ratio </description> </item> 

        <item><term> 
         
        SecondaryComponents.ObjectType </term> <description> 
         
        PrimaryGeometry </description> </item> 

        <item><term> 
         
        Style.ViewStyleGeneral.AngleSetting.Angle.Value </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        Style.ViewStyleGeneral.AngleSetting.Associative </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        Style.ViewStyleGeneral.AngleSetting.EvaluationPlane </term> <description> 
         
        DrawingSheet </description> </item> 

        <item><term> 
         
        Style.ViewStyleOrientation.HingeLine.ReverseDirection </term> <description> 
         
        false </description> </item> 

        <item><term> 
         
        Style.ViewStyleOrientation.HingeLine.VectorOption </term> <description> 
         
        Inferred </description> </item> 

        <item><term> 
         
        Style.ViewStyleOrientation.Ovt.AssociativeOrientation </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_DRAWINGSEXPORT  DetailViewBuilder : public NXOpen::Builder
        {
            /** the type of boundary */
            public: enum Types
            {
                TypesUndefined/** For initial values */ = -1,
                TypesCircular/** Circular boundary */,
                TypesRectangleByCorners/** Rectangular boundary defined by two corners */,
                TypesRectangleByCenterAndCorner/** Rectangular boundary defined by the center and a corner */,
                TypesCustom/** Custom boundary (this should not be used unless the detail view already has a custom boundary */
            };

            /** the display type for the label on parent */
            public: enum LabelOnParentType
            {
                LabelOnParentTypeNone/** No display */,
                LabelOnParentTypeCircle/** Circular */,
                LabelOnParentTypeNote/** Circular with a note */,
                LabelOnParentTypeLabel/** Circular with a label */,
                LabelOnParentTypeEmbedded/** Circular with a note embedded */,
                LabelOnParentTypeBoundary/** The shape is the same as the boundary */,
                LabelOnParentTypeLabelOnBoundary/** Boundary with a label */
            };

            private: DetailViewBuilderImpl * m_detailviewbuilder_impl;
            private: friend class  _DetailViewBuilderBuilder;
            protected: DetailViewBuilder();
            public: ~DetailViewBuilder();
            /**Returns 
                    the first boundary point.  This is the center of the boundary for these types:
                    @link NXOpen::Drawings::DetailViewBuilder::TypesCircular NXOpen::Drawings::DetailViewBuilder::TypesCircular@endlink  and 
                    @link NXOpen::Drawings::DetailViewBuilder::TypesRectangleByCenterAndCorner NXOpen::Drawings::DetailViewBuilder::TypesRectangleByCenterAndCorner@endlink .
                    This boundary point will be NULL for the type: 
                    @link NXOpen::Drawings::DetailViewBuilder::TypesCustom NXOpen::Drawings::DetailViewBuilder::TypesCustom@endlink 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * BoundaryPoint1
            (
            );
            /**Sets 
                    the first boundary point.  This is the center of the boundary for these types:
                    @link NXOpen::Drawings::DetailViewBuilder::TypesCircular NXOpen::Drawings::DetailViewBuilder::TypesCircular@endlink  and 
                    @link NXOpen::Drawings::DetailViewBuilder::TypesRectangleByCenterAndCorner NXOpen::Drawings::DetailViewBuilder::TypesRectangleByCenterAndCorner@endlink .
                    This boundary point will be NULL for the type: 
                    @link NXOpen::Drawings::DetailViewBuilder::TypesCustom NXOpen::Drawings::DetailViewBuilder::TypesCustom@endlink 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetBoundaryPoint1
            (
                NXOpen::Point * boundaryPoint1 /** boundarypoint1 */ 
            );
            /**Returns 
                    the second boundary point.  This is the point on the circle for the 
                    @link NXOpen::Drawings::DetailViewBuilder::TypesCircular NXOpen::Drawings::DetailViewBuilder::TypesCircular@endlink  and 
                    the corner point for the @link NXOpen::Drawings::DetailViewBuilder::TypesRectangleByCenterAndCorner NXOpen::Drawings::DetailViewBuilder::TypesRectangleByCenterAndCorner@endlink .
                    This boundary point will be NULL for the type:
                    @link NXOpen::Drawings::DetailViewBuilder::TypesCustom NXOpen::Drawings::DetailViewBuilder::TypesCustom@endlink 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * BoundaryPoint2
            (
            );
            /**Sets 
                    the second boundary point.  This is the point on the circle for the 
                    @link NXOpen::Drawings::DetailViewBuilder::TypesCircular NXOpen::Drawings::DetailViewBuilder::TypesCircular@endlink  and 
                    the corner point for the @link NXOpen::Drawings::DetailViewBuilder::TypesRectangleByCenterAndCorner NXOpen::Drawings::DetailViewBuilder::TypesRectangleByCenterAndCorner@endlink .
                    This boundary point will be NULL for the type:
                    @link NXOpen::Drawings::DetailViewBuilder::TypesCustom NXOpen::Drawings::DetailViewBuilder::TypesCustom@endlink 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetBoundaryPoint2
            (
                NXOpen::Point * boundaryPoint2 /** boundarypoint2 */ 
            );
            /**Returns  the parent view 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::ParentViewBuilder * Parent
            (
            );
            /**Returns  the associative toggle
                        If view is associative and set associative to false, the view will be converted
                        to independent detail view. Otherwise, this setting will have no effect
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool Associative
            (
            );
            /**Sets  the associative toggle
                        If view is associative and set associative to false, the view will be converted
                        to independent detail view. Otherwise, this setting will have no effect
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetAssociative
            (
                bool associative /** associative */ 
            );
            /**Returns  the origin 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::ViewPlacementBuilder * Origin
            (
            );
            /**Returns  the scale 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::ViewScaleBuilder * Scale
            (
            );
            /**Returns  the label on parent 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::DetailViewBuilder::LabelOnParentType LabelOnParent
            (
            );
            /**Sets  the label on parent 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetLabelOnParent
            (
                NXOpen::Drawings::DetailViewBuilder::LabelOnParentType labelOnParent /** labelonparent */ 
            );
            /**Returns  the style 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::ViewStyleBuilder * Style
            (
            );
            /**Returns  the type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::DetailViewBuilder::Types Type
            (
            );
            /**Sets  the type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetType
            (
                NXOpen::Drawings::DetailViewBuilder::Types type /** type */ 
            );
            /**Returns  the list of objects to not show in the view 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::HiddenObjectsBuilder * HiddenObjects
            (
            );
            /**Returns  the list of objects to not section in the view 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::HiddenObjectsBuilder * NonSectionedObjects
            (
            );
            /**Returns  the list of secondary components in the view 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::DraftingComponentSelectionBuilder * SecondaryComponents
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
