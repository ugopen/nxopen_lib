#ifndef NXOpen_VALIDATE_KEYPERFORMANCEINTERFACECOLLECTION_HXX_INCLUDED
#define NXOpen_VALIDATE_KEYPERFORMANCEINTERFACECOLLECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Validate_KeyPerformanceInterfaceCollection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/Validate_LinkedParameterReqDialogBuilder.hxx>
#include <NXOpen/libnxopencpp_validate_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Validate
    {
        class KeyPerformanceInterfaceCollection;
    }
    class Session;
    class Part;
    namespace Validate
    {
        class LinkedParameterReqDialogBuilder;
    }
    namespace Validate
    {
        class Requirement;
    }
    namespace Validate
    {
        class KeyPerformanceInterfaceCollectionImpl;
        /** This class represents the collection  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_VALIDATEEXPORT  KeyPerformanceInterfaceCollection
        {
            private: KeyPerformanceInterfaceCollectionImpl * m_keyperformanceinterfacecollection_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit KeyPerformanceInterfaceCollection(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static KeyPerformanceInterfaceCollection* theKeyPerformanceInterfaceCollection;
            /** Returns the KeyPerformanceInterfaceCollection object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static KeyPerformanceInterfaceCollection* GetKeyPerformanceInterfaceCollection(NXOpen::Session *owner);
            public: ~KeyPerformanceInterfaceCollection();
            /** Creates Linked Parameter Requirements Builder 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_sdpd_mpm_a (" NX Parameter Management Author") */
            public: NXOpen::Validate::LinkedParameterReqDialogBuilder * CreateLinkedParameterRequirementsBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Refresh Linked Parameter Requirements 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_sdpd_mpm_a (" NX Parameter Management Author") */
            public: void RefreshLinkedParameterRequirements
            (
                NXOpen::Part * part /** part */ ,
                const std::vector<NXOpen::Validate::Requirement *> & requirementTags /** requirementtags */ ,
                bool refreshToLatest /** refreshtolatest */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
