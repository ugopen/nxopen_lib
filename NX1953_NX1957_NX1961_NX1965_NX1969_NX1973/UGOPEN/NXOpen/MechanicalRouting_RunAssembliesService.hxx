#ifndef NXOpen_MECHANICALROUTING_RUNASSEMBLIESSERVICE_HXX_INCLUDED
#define NXOpen_MECHANICALROUTING_RUNASSEMBLIESSERVICE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MechanicalRouting_RunAssembliesService.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_mechanicalrouting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MechanicalRouting
    {
        class RunAssembliesService;
    }
    namespace MechanicalRouting
    {
        class RoutingManager;
    }
    class Part;
    namespace MechanicalRouting
    {
        class RunAssembliesServiceImpl;

        /// \cond NX_NO_DOC 
        /** Represents a @link NXOpen::MechanicalRouting::RunAssembliesService NXOpen::MechanicalRouting::RunAssembliesService@endlink  object.
                Uses the @link MechanicalRouting::RoutingManager::RunAssembliesService MechanicalRouting::RoutingManager::RunAssembliesService@endlink  to obtain
                an instance of this class.
              <br> To obtain an instance of this class, refer to @link NXOpen::MechanicalRouting::RoutingManager  NXOpen::MechanicalRouting::RoutingManager @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_MECHANICALROUTINGEXPORT  RunAssembliesService
        {
            private: RunAssembliesServiceImpl * m_runassembliesservice_impl;
            private: NXOpen::MechanicalRouting::RoutingManager* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit RunAssembliesService(NXOpen::MechanicalRouting::RoutingManager *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~RunAssembliesService();

            /// \cond NX_NO_DOC 
            /** Creates a 3D run in the container part. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void CreateAssemblies3DRunIntoContainerPart
            (
                NXOpen::Part * containerPart /** This parameter may not be NULL.*/,
                const NXString & runId /** This parameter may not be NULL.*/
            );
            /** Creates a 3D run in the container part. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            void CreateAssemblies3DRunIntoContainerPart
            (
                NXOpen::Part * containerPart /** This parameter may not be NULL.*/,
                const char * runId /** This parameter may not be NULL.*/
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
