#ifndef NXOpen_MFG_AM_SUPPORTBUILDER_HXX_INCLUDED
#define NXOpen_MFG_AM_SUPPORTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mfg_AM_SupportBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mfg_AM_Sketcher.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libmfgamopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mfg
    {
        namespace AM
        {
            class SupportBuilder;
        }
    }
    class Builder;
    class Face;
    namespace Mfg
    {
        namespace AM
        {
            class ProfileSupport;
        }
    }
    namespace Mfg
    {
        namespace AM
        {
            class Sketcher;
        }
    }
    namespace Mfg
    {
        namespace AM
        {
            class SupportProfile;
        }
    }
    class ScCollector;
    class SelectDisplayableObjectList;
    class SelectNXObjectList;
    namespace Mfg
    {
        namespace AM
        {
            class _SupportBuilderBuilder;
            class SupportBuilderImpl;
            /** Represents a @link Mfg::AM::Support Mfg::AM::Support@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Mfg::AM::ApplicationManager::GetSupportBuilder  NXOpen::Mfg::AM::ApplicationManager::GetSupportBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            Mode </term> <description> 
             
            Automatic </description> </item> 

            <item><term> 
             
            Sketcher.CurveOnSurfaceBuilder.CurveFitData.CurveJoinMethod </term> <description> 
             
            No </description> </item> 

            <item><term> 
             
            Sketcher.CurveOnSurfaceBuilder.CurveFitData.Degree </term> <description> 
             
            7 </description> </item> 

            <item><term> 
             
            Sketcher.CurveOnSurfaceBuilder.CurveFitData.FitMethod </term> <description> 
             
            DegreeAndSegments </description> </item> 

            <item><term> 
             
            Sketcher.CurveOnSurfaceBuilder.CurveFitData.IsAdvancedFit </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            Sketcher.CurveOnSurfaceBuilder.CurveFitData.IsAlignShape </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            Sketcher.CurveOnSurfaceBuilder.CurveFitData.MaximumDegree </term> <description> 
             
            7 </description> </item> 

            <item><term> 
             
            Sketcher.CurveOnSurfaceBuilder.CurveFitData.MaximumSegments </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            Sketcher.CurveOnSurfaceBuilder.CurveFitData.MinimumDegree </term> <description> 
             
            5 </description> </item> 

            <item><term> 
             
            Sketcher.CurveOnSurfaceBuilder.CurveFitData.Segments </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            Sketcher.CurveOnSurfaceBuilder.CurveFitProperties.FitOption </term> <description> 
             
            Cubic </description> </item> 

            <item><term> 
             
            Sketcher.CurveOnSurfaceBuilder.CurveFitProperties.MaximumDegree </term> <description> 
             
            7 </description> </item> 

            <item><term> 
             
            Sketcher.CurveOnSurfaceBuilder.CurveFitProperties.MaximumSegments </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            SupportType </term> <description> 
             
            Block </description> </item> 

            </list> 

             <br>  Created in NX11.0.2.  <br>  
            */
            class MFGAMOPENCPPEXPORT  SupportBuilder : public NXOpen::Builder
            {
                /** the AM support types */
                public: enum Types
                {
                    TypesBlock/** block */ ,
                    TypesLine/** line */ ,
                    TypesPoint/** point */ ,
                    TypesNosupport/** nosupport */ ,
                    TypesUserDefined/** user defined */ ,
                    TypesVolume/** volume */ ,
                    TypesWeb/** web */ ,
                    TypesContour/** contour */ ,
                    TypesGusset/** gusset */ ,
                    TypesCone/** cone */ ,
                    TypesCombined/** combined */ ,
                    TypesTree/** tree */ ,
                    TypesHybrid/** hybrid */ 
                };

                /** support creation modes */
                public: enum Modes
                {
                    ModesAutomatic/** automatic */ ,
                    ModesManual/** manual */ ,
                    ModesRegionsOnly/** regions only */ ,
                    ModesDuplicate/** duplicate */ 
                };

                private: SupportBuilderImpl * m_supportbuilder_impl;
                private: friend class  _SupportBuilderBuilder;
                protected: SupportBuilder();
                public: ~SupportBuilder();
                /**Returns  the sketcher 
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : am_pb_mtls_sg_2 ("Advanced NX Additive Support Geometry") OR am_pb_mtls_sg_1 ("Basic NX Additive Support Geometry") */
                public: NXOpen::Mfg::AM::Sketcher * Sketcher
                (
                );
                /**Returns  the body selection 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * BodySelection
                (
                );
                /**Returns  the face selection 
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * FaceSelection
                (
                );
                /**Returns  the curve selection 
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * CurveSelection
                (
                );
                /**Returns  the point selection 
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObjectList * PointSelection
                (
                );
                /**Returns  the type of support to create when Mode is set to Manual 
                 <br>  @deprecated Deprecated in NX1872.0.0.  Use <ja_property_set >NXOpen.AM.SupportBuilder.SupportType</ja_property_set > instead. <br>  

                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use <ja_property_set >NXOpen.AM.SupportBuilder.SupportType</ja_property_set > instead.") NXOpen::Mfg::AM::SupportBuilder::Types Type
                (
                );
                /**Returns  the type of support to create when Mode is set to Manual 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::SupportBuilder::Types SupportType
                (
                );
                /**Sets  the type of support to create when Mode is set to Manual 
                 <br>  @deprecated Deprecated in NX1872.0.0.  Use <ja_property_set >NXOpen.AM.SupportBuilder.SupportType</ja_property_set > instead. <br>  

                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : am_pb_mtls_sg_2 ("Advanced NX Additive Support Geometry") OR am_pb_mtls_sg_1 ("Basic NX Additive Support Geometry") */
                public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use <ja_property_set >NXOpen.AM.SupportBuilder.SupportType</ja_property_set > instead.") void SetType
                (
                    NXOpen::Mfg::AM::SupportBuilder::Types type /** type */ 
                );
                /**Sets  the type of support to create when Mode is set to Manual 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : am_pb_mtls_sg_2 ("Advanced NX Additive Support Geometry") OR am_pb_mtls_sg_1 ("Basic NX Additive Support Geometry") */
                public: void SetSupportType
                (
                    NXOpen::Mfg::AM::SupportBuilder::Types type /** type */ 
                );
                /** Set the surface region faces for the support to create 
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : am_pb_mtls_sg_2 ("Advanced NX Additive Support Geometry") OR am_pb_mtls_sg_1 ("Basic NX Additive Support Geometry") */
                public: void SetSurfaceRegion
                (
                    const std::vector<NXOpen::Face *> & faces /** surface region faces */
                );
                /**Returns  the support creation mode. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::SupportBuilder::Modes Mode
                (
                );
                /**Sets  the support creation mode. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : am_pb_mtls_sg_2 ("Advanced NX Additive Support Geometry") OR am_pb_mtls_sg_1 ("Basic NX Additive Support Geometry") */
                public: void SetMode
                (
                    NXOpen::Mfg::AM::SupportBuilder::Modes mode /** mode */ 
                );
                /**Returns  the part (region) selection 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * PartSelection
                (
                );
                /**Sets  the support profile used to generate supports or a NULL_TAG if the default printer profile is used 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : am_pb_mtls_sg_2 ("Advanced NX Additive Support Geometry") OR am_pb_mtls_sg_1 ("Basic NX Additive Support Geometry") */
                public: void SetSupportProfile
                (
                    NXOpen::Mfg::AM::SupportProfile * tagSupportProfile /** tagsupportprofile */ 
                );
                /**Returns  the support profile used to generate supports or a NULL_TAG if the default printer profile is used 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::SupportProfile * SupportProfile
                (
                );
                /** Set the profile support to use to create a support of a particular type. Calling this method will change the profile library when applicable 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : am_pb_mtls_sg_2 ("Advanced NX Additive Support Geometry") OR am_pb_mtls_sg_1 ("Basic NX Additive Support Geometry") */
                public: void SetProfileSupport
                (
                    NXOpen::Mfg::AM::ProfileSupport * tagProfile /** tagprofile */ 
                );
                /** Get the profile support to use to create a support of a particular type. Calling this method will change the profile library when applicable 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::ProfileSupport * GetProfileSupport
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
