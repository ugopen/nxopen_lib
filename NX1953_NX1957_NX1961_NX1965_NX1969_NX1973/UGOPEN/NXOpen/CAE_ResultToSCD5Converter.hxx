#ifndef NXOpen_CAE_RESULTTOSCD5CONVERTER_HXX_INCLUDED
#define NXOpen_CAE_RESULTTOSCD5CONVERTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResultToSCD5Converter.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ResultToSCD5Converter;
    }
    namespace CAE
    {
        class Result;
    }
    namespace CAE
    {
        class ResultToSCD5ConverterImpl;

        /// \cond NX_NO_DOC 
        /** Represents a result converter which could convert result to simcenter data on @link  NXOpen::CAE::ResultToSCD5Converter   NXOpen::CAE::ResultToSCD5Converter @endlink .  <br> To create a new instance of this class, use @link NXOpen::CAE::ResultManager::CreateScd5Converter  NXOpen::CAE::ResultManager::CreateScd5Converter @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ResultToSCD5Converter : public NXOpen::TransientObject
        {
            /** the unit system */
            public: enum UnitSystem
            {
                UnitSystemMeterNewton/** meter newton */ ,
                UnitSystemFootPoundForce/** foot pound force */ ,
                UnitSystemMeterKilogramForce/** meter kilogram force */ ,
                UnitSystemFootPoundal/** foot poundal */ ,
                UnitSystemMillimeterMilliNewton/** millimeter milli newton */ ,
                UnitSystemCentimeterCentiNewton/** centimeter centi newton */ ,
                UnitSystemInchPoundForce/** inch pound force */ ,
                UnitSystemMillimeterKilogramForce/** millimeter kilogram force */ ,
                UnitSystemMillimeterNewton/** millimeter newton */ 
            };

            /** the temperature unit*/
            public: enum Temperature
            {
                TemperatureCelsius/** celsius */ ,
                TemperatureFahrenheit/** fahrenheit */ ,
                TemperatureKelvin/** kelvin */ ,
                TemperatureRankine/** rankine */ 
            };

            private: ResultToSCD5ConverterImpl * m_resulttoscd5converter_impl;
            /// \cond NX_NO_DOC 
            public: explicit ResultToSCD5Converter(void *ptr);
            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the output file 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Outputfile
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the output file 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOutputfile
            (
                const NXString & outputFile /** outputfile */ 
            );
            /**Sets  the output file 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            void SetOutputfile
            (
                const char * outputFile /** outputfile */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the result 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::Result * Result
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the result 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetResult
            (
                NXOpen::CAE::Result * result /** result */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Converts result to simcenter data file 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void Convert
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Destroys the object 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~ResultToSCD5Converter();

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the output file unit system 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ResultToSCD5Converter::UnitSystem Unitsystem
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the output file unit system 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetUnitsystem
            (
                NXOpen::CAE::ResultToSCD5Converter::UnitSystem unitSystem /** unitsystem */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the value indicating whether tempareture unit is specified 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool TemperatureUnitSpecified
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the value indicating whether tempareture unit is specified 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTemperatureUnitSpecified
            (
                bool specifyTemperatureUnit /** specifytemperatureunit */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the temperature unit which is valid when @link NXOpen::CAE::ResultToSCD5Converter::TemperatureUnitSpecified NXOpen::CAE::ResultToSCD5Converter::TemperatureUnitSpecified @endlink and @link NXOpen::CAE::ResultToSCD5Converter::SetTemperatureUnitSpecified NXOpen::CAE::ResultToSCD5Converter::SetTemperatureUnitSpecified @endlink  is true 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ResultToSCD5Converter::Temperature TemperatureUnit
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the temperature unit which is valid when @link NXOpen::CAE::ResultToSCD5Converter::TemperatureUnitSpecified NXOpen::CAE::ResultToSCD5Converter::TemperatureUnitSpecified @endlink and @link NXOpen::CAE::ResultToSCD5Converter::SetTemperatureUnitSpecified NXOpen::CAE::ResultToSCD5Converter::SetTemperatureUnitSpecified @endlink  is true 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTemperatureUnit
            (
                NXOpen::CAE::ResultToSCD5Converter::Temperature temperatureUnit /** temperatureunit */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the value indicating whether result file unit is used 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool ResultFileUnitUsed
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the value indicating whether result file unit is used 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetResultFileUnitUsed
            (
                bool useResultFileUnit /** useresultfileunit */ 
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
