#ifndef NXOpen_CAE_POSTSCENARIOMESSAGECOLLECTOR_HXX_INCLUDED
#define NXOpen_CAE_POSTSCENARIOMESSAGECOLLECTOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostScenarioMessageCollector.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_PostScenarioMessageCollectorTable.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostScenarioMessageCollector;
    }
    namespace CAE
    {
        class PostScenarioMessageCollectorTable;
    }
    namespace CAE
    {
    }
    namespace CAE
    {
        class _PostScenarioMessageCollectorBuilder;
        class PostScenarioMessageCollectorImpl;
        /**  @brief  This class represents a @link NXOpen::CAE::PostScenarioMessageCollector NXOpen::CAE::PostScenarioMessageCollector@endlink .  

         
                Collects messages for a post scenario. 
             <br> No support for KF.  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostScenarioMessageCollector : public NXOpen::TaggedObject
        {
            private: PostScenarioMessageCollectorImpl * m_postscenariomessagecollector_impl;
            private: friend class  _PostScenarioMessageCollectorBuilder;
            protected: PostScenarioMessageCollector();
            public: ~PostScenarioMessageCollector();
            /** Add a line of monospaced text to the listing window. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AddInformationLine
            (
                const NXString & text /** Information line text. */
            );
            /** Add a line of monospaced text to the listing window. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void AddInformationLine
            (
                const char * text /** Information line text. */
            );
            /** Add a heading to the listing window. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AddHeading
            (
                const NXString & text /** Heading text. */
            );
            /** Add a heading to the listing window. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void AddHeading
            (
                const char * text /** Heading text. */
            );
            /** Add a paragraph to the listing window. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AddParagraph
            (
                const NXString & text /** Paragraph text. */
            );
            /** Add a paragraph to the listing window. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void AddParagraph
            (
                const char * text /** Paragraph text. */
            );
            /** Add a list to the listing window. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AddList
            (
                const NXString & title /** List title. */,
                std::vector<NXString> & entries /** List entries. */
            );
            /** Add a list to the listing window. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void AddList
            (
                const char * title /** List title. */,
                std::vector<NXString> & entries /** List entries. */
            );
            /** Add a table with a header row to the listing window.  @return  Table. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PostScenarioMessageCollectorTable * AddTableWithHeaderRow
            (
                const NXString & title /** Table title. */,
                std::vector<NXString> & headerColTitles /** Header column titles. */,
                std::vector<NXString> & colTitles /** Column titles. */
            );
            /** Add a table with a header row to the listing window.  @return  Table. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            NXOpen::CAE::PostScenarioMessageCollectorTable * AddTableWithHeaderRow
            (
                const char * title /** Table title. */,
                std::vector<NXString> & headerColTitles /** Header column titles. */,
                std::vector<NXString> & colTitles /** Column titles. */
            );
            /** Add a table to the listing window.  @return  Table. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PostScenarioMessageCollectorTable * AddTable
            (
                const NXString & title /** Table title. */,
                int numHeaderCols /** Number of header columns. */,
                int numCols /** Number of columns. */
            );
            /** Add a table to the listing window.  @return  Table. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            NXOpen::CAE::PostScenarioMessageCollectorTable * AddTable
            (
                const char * title /** Table title. */,
                int numHeaderCols /** Number of header columns. */,
                int numCols /** Number of columns. */
            );
            /** This will display a warning message after the operation completes. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void Warning
            (
                const NXString & title /** Warning title. */,
                const NXString & message /** Warning message. */
            );
            /** This will display a warning message after the operation completes. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void Warning
            (
                const char * title /** Warning title. */,
                const char * message /** Warning message. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
