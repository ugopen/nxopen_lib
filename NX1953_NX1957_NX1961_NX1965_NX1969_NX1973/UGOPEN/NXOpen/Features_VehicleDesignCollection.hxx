#ifndef NXOpen_FEATURES_VEHICLEDESIGNCOLLECTION_HXX_INCLUDED
#define NXOpen_FEATURES_VEHICLEDESIGNCOLLECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VehicleDesignCollection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <iterator>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObjectCollection.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class VehicleDesignCollection;
    }
    namespace Features
    {
        class FeatureCollection;
    }
    namespace Features
    {
        class Feature;
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class APillarObstruction;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class APillarObstructionBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class AllAroundVision;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class AllAroundVisionBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class BaseDataBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class BaseDataImportExportBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class BaseDataSourceBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class BumperPendulum;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class BumperPendulumBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class CloseRangeVisibility;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class CloseRangeVisibilityBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class ConfigurationBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class CrashBarrier;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class CrashBarrierBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class DirectFieldView;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class DirectFieldViewBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class DynamicCurb;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class DynamicCurbBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class EyeDefinitionBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class Eyellipse;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class EyellipseBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class GlazingShadeBands;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class GlazingShadeBandsBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class GroundClearance;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class GroundClearanceBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpact;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactAPillar;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactAPillarBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactBPillar;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactBPillarBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactFrontHeader;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactFrontHeaderBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactOPillar;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactOPillarBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactOtherRail;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactOtherRailBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactRPillar;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactRPillarBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactRearHeader;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactRearHeaderBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactSideRail;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactSideRailBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactUpperRoof;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HeadImpactUpperRoofBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HoodVisibility;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class HoodVisibilityBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class InnerAngle;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class InnerAngleBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class InstrumentPanelVisibility;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class InstrumentPanelVisibilityBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class Manikin;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class ManikinBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class MirrorCertification;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class MirrorCertificationBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class OilPan;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class OilPanBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class PedestrianProtection;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class PedestrianProtectionBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class ReflectionData;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class ReflectionDataBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class SeatBeltAnchorage;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class SeatBeltAnchorageBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class Slope;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class SlopeBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class StaticCurb;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class StaticCurbBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class TireEnvelope;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class TireEnvelopeBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class VehicleCoordinateSystem;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class VehicleCoordinateSystemBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class VisionPlane;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class VisionPlaneBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class WheelCovering;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class WheelCoveringBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class WheelFixing;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class WheelFixingBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class WindshieldDatum;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class WindshieldDatumBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class WindshieldVision;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class WindshieldVisionBuilder;
        }
    }
    namespace Features
    {
        class VehicleDesignCollectionImpl;
        /** This class contains the factory method for creating vehicle design feature builder.  <br> To obtain an instance of this class, refer to @link NXOpen::Features::FeatureCollection  NXOpen::Features::FeatureCollection @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  VehicleDesignCollection : public NXOpen::TaggedObjectCollection
        {
            private: VehicleDesignCollectionImpl * m_vehicledesigncollection_impl;
            private: NXOpen::Features::FeatureCollection* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit VehicleDesignCollection(NXOpen::Features::FeatureCollection *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~VehicleDesignCollection();
            /** Iterator for accessing the contents of the collection. */
            //lint -sem(NXOpen::Features::VehicleDesignCollection::iterator::copy,initializer)
            class iterator : public std::iterator<std::forward_iterator_tag, NXOpen::Features::Feature *>
            {
            public:
                /** Default constructor */
                iterator() : m_context(nullptr), m_current(NULL_TAG)
                {
                    // coverity[uninit_member]
                } //lint !e1401 m_state is not initialized
                /// \cond NX_NO_DOC
                explicit iterator(NXOpen::Features::VehicleDesignCollection *context) : m_context(context), m_current(NULL_TAG)
                {
                    // coverity[uninit_member]
                }//lint !e1401 m_state is not initialized
                /// \endcond
                /** Copy constructor */
                iterator(const iterator &other): m_context(nullptr), m_current(NULL_TAG)
                {
                    copy(other);
                }
                /** Copy constructor */
                iterator &operator =(const iterator &other)
                {
                    if (&other != this)
                        copy(other);
                    return *this;
                }
                /** Tests if the iterator objects on the left side and the right side of the operator are equal. */
                bool operator ==(const iterator &other) const
                {
                    return m_current == other.m_current && m_context == other.m_context;
                }
                /** Tests if the iterator objects on the left side and the right side of the operator are not equal. */
                bool operator !=(const iterator &other) const
                {
                    return !operator == (other);
                }
                /** Return the element currently pointed to by the iterator. */
                NXOPENCPP_FEATURESEXPORT  value_type operator * () const;
                /** Points the iterator to next element. */
                iterator & operator ++()
                {
                    next();
                    return *this;
                }
                /** Points the iterator to next element. */
                iterator operator ++(int)
                {
                    iterator tmp(*this);
                    ++*this;
                    return tmp;
                }
            private:
                void copy(const iterator &other)
                {
                    m_context = other.m_context;
                    m_current = other.m_current;
                    for (int i = 0; i < sizeof(m_state)/sizeof(m_state[0]); i++)
                         m_state[i] = other.m_state[i];
                }
                NXOPENCPP_FEATURESEXPORT  void next();
                NXOpen::Features::VehicleDesignCollection *m_context;
                tag_t m_current;
                unsigned int m_state[8];
            };
            /** Returns an iterator addressing the first element. */
            iterator begin();
            /** Returns an iterator addressing one past the last element. */
            iterator end()
            {
                return iterator(this);
            }
            /** Creates a @link NXOpen::Features::VehicleDesign::ManikinBuilder NXOpen::Features::VehicleDesign::ManikinBuilder@endlink   @return  Features.VehicleDesign.ManikinBuilder object 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::ManikinBuilder * CreateManikinBuilder
            (
                NXOpen::Features::VehicleDesign::Manikin * manikin /** @link NXOpen::Features::VehicleDesign::Manikin NXOpen::Features::VehicleDesign::Manikin@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder NXOpen::Features::VehicleDesign::TireEnvelopeBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::TireEnvelopeBuilder * CreateTireEnvelopeBuilder
            (
                NXOpen::Features::VehicleDesign::TireEnvelope * tireEnvelope /** @link NXOpen::Features::VehicleDesign::TireEnvelope NXOpen::Features::VehicleDesign::TireEnvelope@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::AllAroundVisionBuilder NXOpen::Features::VehicleDesign::AllAroundVisionBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::AllAroundVisionBuilder * CreateAllAroundVisionBuilder
            (
                NXOpen::Features::VehicleDesign::AllAroundVision * allAroundVision /** @link NXOpen::Features::VehicleDesign::AllAroundVision NXOpen::Features::VehicleDesign::AllAroundVision@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::BaseDataImportExportBuilder NXOpen::Features::VehicleDesign::BaseDataImportExportBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: NXOpen::Features::VehicleDesign::BaseDataImportExportBuilder * CreateBaseDataImportExportBuilder
            (
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::OilPanBuilder NXOpen::Features::VehicleDesign::OilPanBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::OilPanBuilder * CreateOilPanBuilder
            (
                NXOpen::Features::VehicleDesign::OilPan * oilPan /** @link NXOpen::Features::VehicleDesign::OilPan NXOpen::Features::VehicleDesign::OilPan@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::BaseDataBuilder NXOpen::Features::VehicleDesign::BaseDataBuilder@endlink  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::BaseDataBuilder * CreateBaseDataBuilder
            (
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::WheelCoveringBuilder NXOpen::Features::VehicleDesign::WheelCoveringBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::WheelCoveringBuilder * CreateWheelCoveringBuilder
            (
                NXOpen::Features::VehicleDesign::WheelCovering * wheelCovering /** @link NXOpen::Features::VehicleDesign::WheelCovering NXOpen::Features::VehicleDesign::WheelCovering@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::StaticCurbBuilder NXOpen::Features::VehicleDesign::StaticCurbBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::StaticCurbBuilder * CreateStaticCurbBuilder
            (
                NXOpen::Features::VehicleDesign::StaticCurb * feature /** @link NXOpen::Features::VehicleDesign::StaticCurb NXOpen::Features::VehicleDesign::StaticCurb@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::DynamicCurbBuilder NXOpen::Features::VehicleDesign::DynamicCurbBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::DynamicCurbBuilder * CreateDynamicCurbBuilder
            (
                NXOpen::Features::VehicleDesign::DynamicCurb * dynamicCurb /** @link NXOpen::Features::VehicleDesign::DynamicCurb NXOpen::Features::VehicleDesign::DynamicCurb@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::SlopeBuilder NXOpen::Features::VehicleDesign::SlopeBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::SlopeBuilder * CreateSlopeBuilder
            (
                NXOpen::Features::VehicleDesign::Slope * feature /** feature */ 
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::CrashBarrierBuilder NXOpen::Features::VehicleDesign::CrashBarrierBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::CrashBarrierBuilder * CreateCrashBarrierBuilder
            (
                NXOpen::Features::VehicleDesign::CrashBarrier * crashBarrier /** @link NXOpen::Features::VehicleDesign::CrashBarrier NXOpen::Features::VehicleDesign::CrashBarrier@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::WheelFixingBuilder NXOpen::Features::VehicleDesign::WheelFixingBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::WheelFixingBuilder * CreateWheelFixingBuilder
            (
                NXOpen::Features::VehicleDesign::WheelFixing * wheelFixing /** @link NXOpen::Features::VehicleDesign::WheelFixing NXOpen::Features::VehicleDesign::WheelFixing@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::BumperPendulumBuilder NXOpen::Features::VehicleDesign::BumperPendulumBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::BumperPendulumBuilder * CreateBumperPendulumBuilder
            (
                NXOpen::Features::VehicleDesign::BumperPendulum * bumperPendulum /** @link NXOpen::Features::VehicleDesign::BumperPendulum NXOpen::Features::VehicleDesign::BumperPendulum@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::InnerAngleBuilder NXOpen::Features::VehicleDesign::InnerAngleBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::InnerAngleBuilder * CreateInnerAngleBuilder
            (
                NXOpen::Features::VehicleDesign::InnerAngle * innerAngle /** @link NXOpen::Features::VehicleDesign::InnerAngle NXOpen::Features::VehicleDesign::InnerAngle@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::GroundClearanceBuilder NXOpen::Features::VehicleDesign::GroundClearanceBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::GroundClearanceBuilder * CreateGroundClearanceBuilder
            (
                NXOpen::Features::VehicleDesign::GroundClearance * groundClearance /** @link NXOpen::Features::VehicleDesign::GroundClearance NXOpen::Features::VehicleDesign::GroundClearance@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::CloseRangeVisibilityBuilder NXOpen::Features::VehicleDesign::CloseRangeVisibilityBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::CloseRangeVisibilityBuilder * CreateCloseRangeVisibilityBuilder
            (
                NXOpen::Features::VehicleDesign::CloseRangeVisibility * closeRangeVisibility /** @link NXOpen::Features::VehicleDesign::CloseRangeVisibility NXOpen::Features::VehicleDesign::CloseRangeVisibility@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder * CreatePedestrianProtectionBuilder
            (
                NXOpen::Features::VehicleDesign::PedestrianProtection * pedestrianProtection /** @link NXOpen::Features::VehicleDesign::PedestrianProtection NXOpen::Features::VehicleDesign::PedestrianProtection@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::VisionPlaneBuilder NXOpen::Features::VehicleDesign::VisionPlaneBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::VisionPlaneBuilder * CreateVisionPlaneBuilder
            (
                NXOpen::Features::VehicleDesign::VisionPlane * visionPlane /** @link NXOpen::Features::VehicleDesign::VisionPlane NXOpen::Features::VehicleDesign::VisionPlane@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::WindshieldDatumBuilder NXOpen::Features::VehicleDesign::WindshieldDatumBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::WindshieldDatumBuilder * CreateWindshieldDatumBuilder
            (
                NXOpen::Features::VehicleDesign::WindshieldDatum * windshieldDatum /** @link NXOpen::Features::VehicleDesign::WindshieldDatum NXOpen::Features::VehicleDesign::WindshieldDatum@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::HeadImpactBuilder NXOpen::Features::VehicleDesign::HeadImpactBuilder@endlink  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::HeadImpactBuilder * CreateHeadImpactBuilder
            (
                NXOpen::Features::VehicleDesign::HeadImpact * headImpact /** @link NXOpen::Features::VehicleDesign::HeadImpact NXOpen::Features::VehicleDesign::HeadImpact@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::HeadImpactUpperRoofBuilder NXOpen::Features::VehicleDesign::HeadImpactUpperRoofBuilder@endlink  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::HeadImpactUpperRoofBuilder * CreateHeadImpactUpperRoofBuilder
            (
                NXOpen::Features::VehicleDesign::HeadImpactUpperRoof * headImpactUpperRoof /** @link NXOpen::Features::VehicleDesign::HeadImpactUpperRoof NXOpen::Features::VehicleDesign::HeadImpactUpperRoof@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::HeadImpactAPillarBuilder NXOpen::Features::VehicleDesign::HeadImpactAPillarBuilder@endlink  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::HeadImpactAPillarBuilder * CreateHeadImpactApillarBuilder
            (
                NXOpen::Features::VehicleDesign::HeadImpactAPillar * headImpactApillar /** @link NXOpen::Features::VehicleDesign::HeadImpactAPillar NXOpen::Features::VehicleDesign::HeadImpactAPillar@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::HeadImpactBPillarBuilder NXOpen::Features::VehicleDesign::HeadImpactBPillarBuilder@endlink  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::HeadImpactBPillarBuilder * CreateHeadImpactBpillarBuilder
            (
                NXOpen::Features::VehicleDesign::HeadImpactBPillar * headImpactBpillar /** @link NXOpen::Features::VehicleDesign::HeadImpactBPillar NXOpen::Features::VehicleDesign::HeadImpactBPillar@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::HeadImpactRPillarBuilder NXOpen::Features::VehicleDesign::HeadImpactRPillarBuilder@endlink  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::HeadImpactRPillarBuilder * CreateHeadImpactRpillarBuilder
            (
                NXOpen::Features::VehicleDesign::HeadImpactRPillar * headImpactRpillar /** @link NXOpen::Features::VehicleDesign::HeadImpactRPillar NXOpen::Features::VehicleDesign::HeadImpactRPillar@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::HeadImpactOPillarBuilder NXOpen::Features::VehicleDesign::HeadImpactOPillarBuilder@endlink  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::HeadImpactOPillarBuilder * CreateHeadImpactOpillarBuilder
            (
                NXOpen::Features::VehicleDesign::HeadImpactOPillar * headImpactOpillar /** @link NXOpen::Features::VehicleDesign::HeadImpactOPillar NXOpen::Features::VehicleDesign::HeadImpactOPillar@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::HeadImpactFrontHeaderBuilder NXOpen::Features::VehicleDesign::HeadImpactFrontHeaderBuilder@endlink  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::HeadImpactFrontHeaderBuilder * CreateHeadImpactFrontHeaderBuilder
            (
                NXOpen::Features::VehicleDesign::HeadImpactFrontHeader * headImpactFrontHeader /** @link NXOpen::Features::VehicleDesign::HeadImpactFrontHeader NXOpen::Features::VehicleDesign::HeadImpactFrontHeader@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::HeadImpactRearHeaderBuilder NXOpen::Features::VehicleDesign::HeadImpactRearHeaderBuilder@endlink  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::HeadImpactRearHeaderBuilder * CreateHeadImpactRearHeaderBuilder
            (
                NXOpen::Features::VehicleDesign::HeadImpactRearHeader * headImpactRearHeader /** @link NXOpen::Features::VehicleDesign::HeadImpactRearHeader NXOpen::Features::VehicleDesign::HeadImpactRearHeader@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::HeadImpactSideRailBuilder NXOpen::Features::VehicleDesign::HeadImpactSideRailBuilder@endlink  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::HeadImpactSideRailBuilder * CreateHeadImpactSideRailBuilder
            (
                NXOpen::Features::VehicleDesign::HeadImpactSideRail * headImpactSideRail /** @link NXOpen::Features::VehicleDesign::HeadImpactSideRail NXOpen::Features::VehicleDesign::HeadImpactSideRail@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::HeadImpactOtherRailBuilder NXOpen::Features::VehicleDesign::HeadImpactOtherRailBuilder@endlink  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::HeadImpactOtherRailBuilder * CreateHeadImpactOtherRailBuilder
            (
                NXOpen::Features::VehicleDesign::HeadImpactOtherRail * headImpactOtherRail /** @link NXOpen::Features::VehicleDesign::HeadImpactOtherRail NXOpen::Features::VehicleDesign::HeadImpactOtherRail@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::MirrorCertificationBuilder NXOpen::Features::VehicleDesign::MirrorCertificationBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::MirrorCertificationBuilder * CreateMirrorCertificationBuilder
            (
                NXOpen::Features::VehicleDesign::MirrorCertification * mirrorCertification /** @link NXOpen::Features::VehicleDesign::MirrorCertification NXOpen::Features::VehicleDesign::MirrorCertification@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::SeatBeltAnchorageBuilder * CreateSeatBeltAnchorageBuilder
            (
                NXOpen::Features::VehicleDesign::SeatBeltAnchorage * seatBeltAnchorage /** @link NXOpen::Features::VehicleDesign::SeatBeltAnchorage NXOpen::Features::VehicleDesign::SeatBeltAnchorage@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::ReflectionDataBuilder NXOpen::Features::VehicleDesign::ReflectionDataBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::ReflectionDataBuilder * CreateReflectionDataBuilder
            (
                NXOpen::Features::VehicleDesign::ReflectionData * reflectionData /** @link NXOpen::Features::VehicleDesign::ReflectionData NXOpen::Features::VehicleDesign::ReflectionData@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::HoodVisibilityBuilder NXOpen::Features::VehicleDesign::HoodVisibilityBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::HoodVisibilityBuilder * CreateHoodVisibilityBuilder
            (
                NXOpen::Features::VehicleDesign::HoodVisibility * hoodVisibility /** @link NXOpen::Features::VehicleDesign::HoodVisibility NXOpen::Features::VehicleDesign::HoodVisibility@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::VehicleCoordinateSystemBuilder NXOpen::Features::VehicleDesign::VehicleCoordinateSystemBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") OR ug_body_design ("Body Design") OR nx_posture ("NX Jack Posture Prediction") */
            public: NXOpen::Features::VehicleDesign::VehicleCoordinateSystemBuilder * CreateVehicleCoordinateSystemBuilder
            (
                NXOpen::Features::VehicleDesign::VehicleCoordinateSystem * vehicleCoordinateSystem /** @link NXOpen::Features::VehicleDesign::VehicleCoordinateSystem NXOpen::Features::VehicleDesign::VehicleCoordinateSystem@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::BaseDataSourceBuilder NXOpen::Features::VehicleDesign::BaseDataSourceBuilder@endlink  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::BaseDataSourceBuilder * CreateBaseDataSourceBuilder
            (
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::EyellipseBuilder NXOpen::Features::VehicleDesign::EyellipseBuilder@endlink  
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::EyellipseBuilder * CreateEyellipseBuilder
            (
                NXOpen::Features::VehicleDesign::Eyellipse * eyellipse /** @link NXOpen::Features::VehicleDesign::Eyellipse NXOpen::Features::VehicleDesign::Eyellipse@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::APillarObstructionBuilder NXOpen::Features::VehicleDesign::APillarObstructionBuilder@endlink   @return  
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::APillarObstructionBuilder * CreateApillarObstructionBuilder
            (
                NXOpen::Features::VehicleDesign::APillarObstruction * apillarObstruction /** @link NXOpen::Features::VehicleDesign::APillarObstruction NXOpen::Features::VehicleDesign::APillarObstruction@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::ConfigurationBuilder NXOpen::Features::VehicleDesign::ConfigurationBuilder@endlink   @return  
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::ConfigurationBuilder * CreateConfigurationBuilder
            (
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::EyeDefinitionBuilder NXOpen::Features::VehicleDesign::EyeDefinitionBuilder@endlink   @return  
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::EyeDefinitionBuilder * CreateEyeDefinitionBuilder
            (
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::GlazingShadeBandsBuilder NXOpen::Features::VehicleDesign::GlazingShadeBandsBuilder@endlink   @return  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::GlazingShadeBandsBuilder * CreateGlazingShadeBandsBuilder
            (
                NXOpen::Features::VehicleDesign::GlazingShadeBands * glazingShadeBands /** @link NXOpen::Features::VehicleDesign::GlazingShadeBands NXOpen::Features::VehicleDesign::GlazingShadeBands@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::InstrumentPanelVisibilityBuilder NXOpen::Features::VehicleDesign::InstrumentPanelVisibilityBuilder@endlink   @return  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::InstrumentPanelVisibilityBuilder * CreateInstrumentPanelVisibilityBuilder
            (
                NXOpen::Features::VehicleDesign::InstrumentPanelVisibility * instrumentPanelVisibility /** @link NXOpen::Features::VehicleDesign::InstrumentPanelVisibility NXOpen::Features::VehicleDesign::InstrumentPanelVisibility@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::DirectFieldViewBuilder NXOpen::Features::VehicleDesign::DirectFieldViewBuilder@endlink   @return  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::DirectFieldViewBuilder * CreateDirectFieldViewBuilder
            (
                NXOpen::Features::VehicleDesign::DirectFieldView * directFieldView /** @link NXOpen::Features::VehicleDesign::DirectFieldView NXOpen::Features::VehicleDesign::DirectFieldView@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::VehicleDesign::WindshieldVisionBuilder NXOpen::Features::VehicleDesign::WindshieldVisionBuilder@endlink   @return  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: NXOpen::Features::VehicleDesign::WindshieldVisionBuilder * CreateWindshieldVisionBuilder
            (
                NXOpen::Features::VehicleDesign::WindshieldVision * windshieldVision /** @link NXOpen::Features::VehicleDesign::WindshieldVision NXOpen::Features::VehicleDesign::WindshieldVision@endlink  to be edited */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
