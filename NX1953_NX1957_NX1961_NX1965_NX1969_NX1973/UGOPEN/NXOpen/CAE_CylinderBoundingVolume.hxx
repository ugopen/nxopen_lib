#ifndef NXOpen_CAE_CYLINDERBOUNDINGVOLUME_HXX_INCLUDED
#define NXOpen_CAE_CYLINDERBOUNDINGVOLUME_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CylinderBoundingVolume.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/CAE_BoundingVolumePrimitive.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class CylinderBoundingVolume;
    }
    namespace CAE
    {
        class BoundingVolumePrimitive;
    }
    class CoordinateSystem;
    class Expression;
    class Point;
    namespace CAE
    {
        class _CylinderBoundingVolumeBuilder;
        class CylinderBoundingVolumeImpl;
        /** Represents Box Bounding Volume for Selection Recipe <br> This is a sub object  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  CylinderBoundingVolume : public NXOpen::CAE::BoundingVolumePrimitive
        {
            private: CylinderBoundingVolumeImpl * m_cylinderboundingvolume_impl;
            private: friend class  _CylinderBoundingVolumeBuilder;
            protected: CylinderBoundingVolume();
            public: ~CylinderBoundingVolume();
            /**Gets the coordinate system, diameter and height for the Cylinder Bounding Volume.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void GetCsysDiameterHeight
            (
                NXOpen::CoordinateSystem ** centerCsys /** centercsys */ ,
                NXOpen::Expression ** diameter /** diameter */ ,
                NXOpen::Expression ** cylinderHeight /** cylinderheight */ 
            );
            /**Sets the coordinate system, diameter and height for the Cylinder Bounding Volume.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetCsysDiameterHeight
            (
                NXOpen::CoordinateSystem * centerCsys /** centercsys */ ,
                NXOpen::Expression * diameter /** diameter */ ,
                NXOpen::Expression * cylinderHeight /** cylinderheight */ 
            );
            /**Gets the coordinate system, diameter, height and angles for the Cylinder Bounding Volume.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetCsysDiameterHeightAngles
            (
                NXOpen::CoordinateSystem ** centerCsys /** centercsys */ ,
                NXOpen::Expression ** diameter /** diameter */ ,
                NXOpen::Expression ** cylinderHeight /** cylinderheight */ ,
                bool* isStartActive /** isstartactive */ ,
                NXOpen::Expression ** startAngle /** startangle */ ,
                bool* isEndActive /** isendactive */ ,
                NXOpen::Expression ** endAngle /** endangle */ 
            );
            /**Sets the coordinate system, diameter, height and angles for the Cylinder Bounding Volume.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetCsysDiameterHeightAngles
            (
                NXOpen::CoordinateSystem * centerCsys /** centercsys */ ,
                NXOpen::Expression * diameter /** diameter */ ,
                NXOpen::Expression * cylinderHeight /** cylinderheight */ ,
                bool isStartActive /** isstartactive */ ,
                NXOpen::Expression * startAngle /** startangle */ ,
                bool isEndActive /** isendactive */ ,
                NXOpen::Expression * endAngle /** endangle */ 
            );
            /**Gets the end points and diameter for the Cylinder Bounding Volume.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void GetEndpointsDiameter
            (
                NXOpen::Point ** baseCenter /** basecenter */ ,
                NXOpen::Point ** topCenter /** topcenter */ ,
                NXOpen::Expression ** diameter /** diameter */ 
            );
            /**Sets the end points and diameter for the Cylinder Bounding Volume.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetEndpointsDiameter
            (
                NXOpen::Point * baseCenter /** basecenter */ ,
                NXOpen::Point * topCenter /** topcenter */ ,
                NXOpen::Expression * diameter /** diameter */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
