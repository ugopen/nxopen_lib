#ifndef NXOpen_CAE_CONNECTIONS_LMIERINGOPTIONS_HXX_INCLUDED
#define NXOpen_CAE_CONNECTIONS_LMIERINGOPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Connections_LMIERingOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Connections_Types.hxx>
#include <NXOpen/CAE_Connections_LMIEError.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Connections
        {
            class LMIERingOptions;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class LMIEError;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class _LMIERingOptionsBuilder;
            class LMIERingOptionsImpl;
            /**  Mass definition.   <br> No creator  <br> 
             <br>  Created in NX1847.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  LMIERingOptions : public NXOpen::CAE::Connections::LMIEError
            {
                private: LMIERingOptionsImpl * m_lmieringoptions_impl;
                private: friend class  _LMIERingOptionsBuilder;
                protected: LMIERingOptions();
                public: ~LMIERingOptions();
                /**Returns  the Ring Search type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::RingSearchType RingType
                (
                );
                /**Sets  the Ring Search type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetRingType
                (
                    NXOpen::CAE::Connections::RingSearchType type /** type */ 
                );
                /**Returns  the mass distribution type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: double ExpansionRadius
                (
                );
                /**Sets  the mass distribution type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetExpansionRadius
                (
                    double val /** Expansion radius */
                );
                /**Returns  the mass distribution type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: double ExpansionRadiusFactor
                (
                );
                /**Sets  the mass distribution type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetExpansionRadiusFactor
                (
                    double val /** Expansion radius factor */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
