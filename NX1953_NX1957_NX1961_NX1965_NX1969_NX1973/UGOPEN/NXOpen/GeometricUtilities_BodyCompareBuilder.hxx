#ifndef NXOpen_GEOMETRICUTILITIES_BODYCOMPAREBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_BODYCOMPAREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_BodyCompareBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class BodyCompareBuilder;
    }
    class Builder;
    class NXColor;
    class Part;
    class SelectBodyList;
    namespace GeometricUtilities
    {
        class _BodyCompareBuilderBuilder;
        class BodyCompareBuilderImpl;

        /// \cond NX_NO_DOC 
        /** Represents a @link GeometricUtilities::BodyCompareBuilder GeometricUtilities::BodyCompareBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::GeometricUtilities::CompareManager::CreateBodyCompareBuilder  NXOpen::GeometricUtilities::CompareManager::CreateBodyCompareBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        CompareMethod </term> <description> 
         
        Face </description> </item> 

        <item><term> 
         
        FloorRange </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        OptionMenu </term> <description> 
         
        Shape </description> </item> 

        <item><term> 
         
        TranslucentControl </term> <description> 
         
        -70 </description> </item> 

        </list> 

         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  BodyCompareBuilder : public NXOpen::Builder
        {
            /** Compare Options */

            /// \cond NX_NO_DOC 
            public: enum CompareOptionType
            {
                CompareOptionTypeFace/** normal face based comparison for brep geometry only */,
                CompareOptionTypeDistanceMap/** deviation based (distant map) comparison */
            };


            /// \endcond 
            /** Options for face change criterion */

            /// \cond NX_NO_DOC 
            public: enum FaceChangeCriteriaOption
            {
                FaceChangeCriteriaOptionShape/** size, shape and location */,
                FaceChangeCriteriaOptionAny/** any */
            };


            /// \endcond 
            private: BodyCompareBuilderImpl * m_bodycomparebuilder_impl;
            private: friend class  _BodyCompareBuilderBuilder;
            protected: BodyCompareBuilder();
            public: ~BodyCompareBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the select control body 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: NXOpen::SelectBodyList * SelectControlBody
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the select sample body 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: NXOpen::SelectBodyList * SelectSampleBody
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Populate selected control bodies to compare engine.  
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void UpdateControlBodiesToEngine
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Populate selected sample bodies to compare engine.  
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void UpdateSampleBodiesToEngine
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Set control part. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetControlPart
            (
                NXOpen::Part * part /** part */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Set sample part. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetSamplePart
            (
                NXOpen::Part * part /** part */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the compare method 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: NXOpen::GeometricUtilities::BodyCompareBuilder::CompareOptionType CompareMethod
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the compare method 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetCompareMethod
            (
                NXOpen::GeometricUtilities::BodyCompareBuilder::CompareOptionType compareMethod /** comparemethod */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the option menu for face change criterion 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: NXOpen::GeometricUtilities::BodyCompareBuilder::FaceChangeCriteriaOption OptionMenu
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the option menu for face change criterion 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetOptionMenu
            (
                NXOpen::GeometricUtilities::BodyCompareBuilder::FaceChangeCriteriaOption optionMenu /** optionmenu */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Perform the compare action 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void CompareAction
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Perform the report action 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void ReportAction
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Create the visualizer 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void RecreateVisualizer
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Perform pre-visualization 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void PreVisualizationProcess
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Dispose the visualization, and must be invoked at the UI destructor level 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void DisposeVisualization
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the translucent control 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: int TranslucentControl
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the translucent control 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetTranslucentControl
            (
                int translucentControl /** translucentcontrol */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the floor range 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: double FloorRange
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the floor range 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetFloorRange
            (
                double floorRange /** floorrange */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the color picker absent 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: NXOpen::NXColor * ColorPickerAbsent
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the color picker absent 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetColorPickerAbsent
            (
                NXOpen::NXColor * colorPickerAbsent /** colorpickerabsent */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the color picker changed 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: NXOpen::NXColor * ColorPickerChanged
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the color picker changed 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetColorPickerChanged
            (
                NXOpen::NXColor * colorPickerChanged /** colorpickerchanged */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the color picker new 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: NXOpen::NXColor * ColorPickerNew
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the color picker new 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetColorPickerNew
            (
                NXOpen::NXColor * colorPickerNew /** colorpickernew */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the color picker same 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: NXOpen::NXColor * ColorPickerSame
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the color picker same 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void SetColorPickerSame
            (
                NXOpen::NXColor * colorPickerSame /** colorpickersame */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the status whether comparison is done 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: bool IsCompareDone
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Create convergent compare strategy for comparision. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void CreateConvergentCompareStrategy
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Clear compared pair 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : gateway ("UG GATEWAY") */
            public: void ClearAllComparedPairs
            (
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
