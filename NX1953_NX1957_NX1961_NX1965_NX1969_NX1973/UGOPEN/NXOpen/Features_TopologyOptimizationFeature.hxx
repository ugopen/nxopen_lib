#ifndef NXOpen_FEATURES_TOPOLOGYOPTIMIZATIONFEATURE_HXX_INCLUDED
#define NXOpen_FEATURES_TOPOLOGYOPTIMIZATIONFEATURE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_TopologyOptimizationFeature.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_Feature.hxx>
#include <NXOpen/Features_TopologyOptimization_Preferences.hxx>
#include <NXOpen/Features_TopologyOptimization_PreferencesBuilder.hxx>
#include <NXOpen/Features_TopologyOptimization_Study.hxx>
#include <NXOpen/Features_TopologyOptimization_StudyBuilder.hxx>
#include <NXOpen/Features_TopologyOptimization_Subcase.hxx>
#include <NXOpen/Features_Feature.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class TopologyOptimizationFeature;
    }
    namespace Features
    {
        class Feature;
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class PostManager;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class Preferences;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class PreferencesBuilder;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class Study;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class StudyBuilder;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class Subcase;
        }
    }
    class INXObject;
    namespace Features
    {
        class _TopologyOptimizationFeatureBuilder;
        class TopologyOptimizationFeatureImpl;

        /// \cond NX_NO_DOC 
        /** Represents a Topology Optimization feature  <br> The @link NXOpen::Features::TopologyOptimizationFeature NXOpen::Features::TopologyOptimizationFeature@endlink  can only be created and edited in the @link NXOpen::TopologyOptimizationTaskEnvironment NXOpen::TopologyOptimizationTaskEnvironment@endlink .  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  TopologyOptimizationFeature : public NXOpen::Features::Feature
        {
            private: TopologyOptimizationFeatureImpl * m_topologyoptimizationfeature_impl;
            private: friend class  _TopologyOptimizationFeatureBuilder;
            protected: TopologyOptimizationFeature();
            public: ~TopologyOptimizationFeature();

            /// \cond NX_NO_DOC 
            /** Creates a @link NXOpen::Features::TopologyOptimization::Study NXOpen::Features::TopologyOptimization::Study@endlink  
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
            public: NXOpen::Features::TopologyOptimization::StudyBuilder * CreateStudyBuilder
            (
                NXOpen::Features::TopologyOptimization::Study * optimizationStudy /** optimizationstudy */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Gets all @link NXOpen::Features::TopologyOptimization::Study NXOpen::Features::TopologyOptimization::Study@endlink  objects from the feature. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetAllStudies
            (
                std::vector<NXOpen::Features::TopologyOptimization::Study *> & optimizationStudies /** optimizationstudies */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Activates one @link NXOpen::Features::TopologyOptimization::Study NXOpen::Features::TopologyOptimization::Study@endlink  while making all others inactive. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
            public: void MakeStudyActive
            (
                NXOpen::Features::TopologyOptimization::Study * optimizationStudy /** optimizationstudy */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the feature's active @link NXOpen::Features::TopologyOptimization::Study NXOpen::Features::TopologyOptimization::Study@endlink . 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::TopologyOptimization::Study * ActiveStudy
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Activates one @link NXOpen::Features::TopologyOptimization::Subcase NXOpen::Features::TopologyOptimization::Subcase@endlink  while making all others inactive.
                        The parent @link NXOpen::Features::TopologyOptimization::Study NXOpen::Features::TopologyOptimization::Study@endlink  is also activated. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
            public: void MakeSubcaseActive
            (
                NXOpen::Features::TopologyOptimization::Subcase * subcase /** subcase */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the feature's active @link NXOpen::Features::TopologyOptimization::Subcase NXOpen::Features::TopologyOptimization::Subcase@endlink . 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::TopologyOptimization::Subcase * ActiveSubcase
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Clones (copies) a @link NXOpen::Features::TopologyOptimization::Study NXOpen::Features::TopologyOptimization::Study@endlink  object and returns the cloned (copied) object if successful. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
            public: NXOpen::Features::TopologyOptimization::Study * CloneStudy
            (
                NXOpen::Features::TopologyOptimization::Study * existingStudy /** existingstudy */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Finds the @link NXOpen::Features::TopologyOptimization::Study NXOpen::Features::TopologyOptimization::Study@endlink  with the given identifier as recorded in a journal. 
                    An object may not return the same value as its JournalIdentifier in different versions of the software.
                    However newer versions of the software should find the same object when FindObject is passed older versions of its journal identifier.
                    An exception will be thrown if no object can be found with the given journal identifier.  @return  Object found, or null if no such object exists. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::INXObject * FindObject
            (
                const NXString & journalIdentifier /** Name of the Study to be found */
            );
            /** Finds the @link NXOpen::Features::TopologyOptimization::Study NXOpen::Features::TopologyOptimization::Study@endlink  with the given identifier as recorded in a journal. 
                    An object may not return the same value as its JournalIdentifier in different versions of the software.
                    However newer versions of the software should find the same object when FindObject is passed older versions of its journal identifier.
                    An exception will be thrown if no object can be found with the given journal identifier.  @return  Object found, or null if no such object exists. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::INXObject * FindObject
            (
                const char * journalIdentifier /** Name of the Study to be found */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Creates a @link NXOpen::Features::TopologyOptimization::Preferences NXOpen::Features::TopologyOptimization::Preferences@endlink  
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
            public: NXOpen::Features::TopologyOptimization::PreferencesBuilder * CreatePreferencesBuilder
            (
                NXOpen::Features::TopologyOptimization::Preferences * optPrefernces /** optprefernces */ 
            );

            /// \endcond 


            /** Returns the Post Manager for this feature 
             <br>  Created in NX1953.0.0.  <br>  
            */
            public: NXOpen::Features::TopologyOptimization::PostManager *PostManager();
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
