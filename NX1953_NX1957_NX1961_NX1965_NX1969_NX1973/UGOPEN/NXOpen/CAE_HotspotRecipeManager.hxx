#ifndef NXOpen_CAE_HOTSPOTRECIPEMANAGER_HXX_INCLUDED
#define NXOpen_CAE_HOTSPOTRECIPEMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_HotspotRecipeManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class HotspotRecipeManager;
    }
    namespace CAE
    {
        class HotspotRecipe;
    }
    class NXObject;
    namespace CAE
    {
        class _HotspotRecipeManagerBuilder;
        class HotspotRecipeManagerImpl;
        /** Represents a @link NXOpen::CAE::HotspotRecipeManager NXOpen::CAE::HotspotRecipeManager@endlink  
                hotspot recipe objects lifecycle is managed using this class  <br> To obtain an instance of this class use @link CAE::SimSimulation CAE::SimSimulation@endlink .  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  HotspotRecipeManager : public NXOpen::NXObject
        {
            private: HotspotRecipeManagerImpl * m_hotspotrecipemanager_impl;
            private: friend class  _HotspotRecipeManagerBuilder;
            protected: HotspotRecipeManager();
            public: ~HotspotRecipeManager();
            /** Get hotspot recipes 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetHotspotRecipes
            (
                std::vector<NXOpen::CAE::HotspotRecipe *> & pHotspotRecipes /** @link NXOpen::CAE::HotspotRecipe NXOpen::CAE::HotspotRecipe@endlink  object */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
