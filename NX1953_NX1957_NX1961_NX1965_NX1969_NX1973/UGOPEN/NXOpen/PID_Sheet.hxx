#ifndef NXOpen_PID_SHEET_HXX_INCLUDED
#define NXOpen_PID_SHEET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PID_Sheet.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/PDM_SheetRevision.hxx>
#include <NXOpen/PDM_ConnectionElementRevision.hxx>
#include <NXOpen/PDM_ElementGroup.hxx>
#include <NXOpen/PDM_LogicalElementRevision.hxx>
#include <NXOpen/PDM_SheetRevision.hxx>
#include <NXOpen/libpidopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PID
    {
        class Sheet;
    }
    namespace PDM
    {
        class SheetRevision;
    }
    namespace PID
    {
        class AutomaticTableCollection;
    }
    namespace PID
    {
        class Equipment;
    }
    namespace PID
    {
        class FlowDirectionArrowCollection;
    }
    namespace PID
    {
        class InstrumentationCollection;
    }
    namespace PID
    {
        class Pipe;
    }
    namespace PLAS
    {
        class Run;
    }
    namespace PID
    {
        class _SheetBuilder;
        class SheetImpl;
        /** 
                Represents a base class that provides common methods for various model elements in a @link NXOpen::CollaborativeDesign NXOpen::CollaborativeDesign@endlink .
             <br> Use the static method in this class to obtain an instance.  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class PIDOPENCPPEXPORT  Sheet : public NXOpen::PDM::SheetRevision
        {
            private: SheetImpl * m_sheet_impl;
            private: friend class  _SheetBuilder;
            protected: Sheet();
            public: ~Sheet();
            /** Gets the @link NXOpen::PID::Equipment NXOpen::PID::Equipment@endlink  objects in the sheet 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetEquipment
            (
                std::vector<NXOpen::PID::Equipment *> & equipment /** the equipment objects */
            );
            /** Gets the @link NXOpen::PLAS::Run NXOpen::PLAS::Run@endlink  objects in the sheet 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetRuns
            (
                std::vector<NXOpen::PLAS::Run *> & runs /** the run objects */
            );
            /** Gets the @link NXOpen::PID::Pipe NXOpen::PID::Pipe@endlink  objects in the sheet 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetPipes
            (
                std::vector<NXOpen::PID::Pipe *> & pipes /** the pipe objects */
            );


            /** Returns the @link NXOpen::PID::FlowDirectionArrowCollection  NXOpen::PID::FlowDirectionArrowCollection @endlink  belonging to this part 
             <br>  Created in NX11.0.1.  <br>  
            */
            public: NXOpen::PID::FlowDirectionArrowCollection *FlowDirectionArrows();
            /** Returns the @link NXOpen::PID::AutomaticTableCollection  NXOpen::PID::AutomaticTableCollection @endlink  belonging to this part 
             <br>  Created in NX1847.0.0.  <br>  
            */
            public: NXOpen::PID::AutomaticTableCollection *AutomaticTables();
            /** Returns the @link NXOpen::PID::InstrumentationCollection  NXOpen::PID::InstrumentationCollection @endlink  belonging to this part 
             <br>  Created in NX1847.0.0.  <br>  
            */
            public: NXOpen::PID::InstrumentationCollection *Instrumentations();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
