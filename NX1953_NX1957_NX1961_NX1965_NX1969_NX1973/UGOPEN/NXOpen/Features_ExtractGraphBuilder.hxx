#ifndef NXOpen_FEATURES_EXTRACTGRAPHBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_EXTRACTGRAPHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ExtractGraphBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_Feature.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class ExtractGraphBuilder;
    }
    class Body;
    namespace Features
    {
        class Feature;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class _ExtractGraphBuilderBuilder;
        class ExtractGraphBuilderImpl;
        /**Represents a Features.ExtractGraphBuilder <br> To create a new instance of this class, use @link NXOpen::Features::LatticeFeatureCollection::CreateExtractGraphBuilder  NXOpen::Features::LatticeFeatureCollection::CreateExtractGraphBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  ExtractGraphBuilder : public NXOpen::Features::FeatureBuilder
        {
            private: ExtractGraphBuilderImpl * m_extractgraphbuilder_impl;
            private: friend class  _ExtractGraphBuilderBuilder;
            protected: ExtractGraphBuilder();
            public: ~ExtractGraphBuilder();
            /** Returns the feature currently being edited by this builder. If
                    a new feature is being created, and the builder has not yet
                    been commited, returns NULL.
                  @return  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR geometric_tol ("GDT") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: NXOpen::Features::Feature * GetFeature
            (
            );
            /**Returns the feature that will be processed.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::Feature * Feature
            (
            );
            /**Sets the feature that will be processed.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetFeature
            (
                NXOpen::Features::Feature * feature /** feature */ 
            );
            /**Access the solid bodies that will be processed.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void GetBodies
            (
                std::vector<NXOpen::Body *> & bodies /** bodies */ 
            );
            /**Set the solid bodies that will be processed.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetBodies
            (
                const std::vector<NXOpen::Body *> & bodies /** bodies */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
